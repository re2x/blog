{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/404.html","path":"404.html","modified":0,"renderable":0},{"_id":"source/README.md","path":"README.md","modified":0,"renderable":0},{"_id":"source/CNAME_","path":"CNAME_","modified":0,"renderable":0},{"_id":"source/post_images/WebRTCNativeAPIsDocument (2).png","path":"post_images/WebRTCNativeAPIsDocument (2).png","modified":0,"renderable":0},{"_id":"source/post_images/WebRTCNativeAPIsDocument (3).png","path":"post_images/WebRTCNativeAPIsDocument (3).png","modified":0,"renderable":0},{"_id":"source/post_images/WebRTCNativeAPIsDocument (1).png","path":"post_images/WebRTCNativeAPIsDocument (1).png","modified":0,"renderable":0},{"_id":"source/post_images/WebRTCNativeAPIsDocument.png","path":"post_images/WebRTCNativeAPIsDocument.png","modified":0,"renderable":0},{"_id":"source/post_images/hybrid-app-brief-talk-01.png","path":"post_images/hybrid-app-brief-talk-01.png","modified":0,"renderable":0},{"_id":"source/post_images/hybrid-app-brief-talk-02.jpg","path":"post_images/hybrid-app-brief-talk-02.jpg","modified":0,"renderable":0},{"_id":"source/post_images/hybrid-app-brief-talk-04.png","path":"post_images/hybrid-app-brief-talk-04.png","modified":0,"renderable":0},{"_id":"source/post_images/webrtc_support.png","path":"post_images/webrtc_support.png","modified":0,"renderable":0},{"_id":"source/post_images/upyun_logo_90x45.png","path":"post_images/upyun_logo_90x45.png","modified":0,"renderable":0},{"_id":"source/post_images/hybrid-app-brief-talk-05.jpg","path":"post_images/hybrid-app-brief-talk-05.jpg","modified":0,"renderable":0},{"_id":"source/post_images/stun-progress.png","path":"post_images/stun-progress.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"source/post_images/hybrid-app-brief-talk-03.png","path":"post_images/hybrid-app-brief-talk-03.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"1e7bbb408221ed2b61ecb3292c63a335a25387f4","modified":1490755586000},{"_id":"source/404.html","hash":"9442e60141663f11e11a52ca7d6bd396582f0ac3","modified":1468823743000},{"_id":"source/README.md","hash":"98ff3f41f9455977906832b50d7cd9d915915d80","modified":1468823580000},{"_id":"source/CNAME_","hash":"981837a011a38db22874a72d7ba63e325ec72291","modified":1468900996000},{"_id":"themes/next/.DS_Store","hash":"5d672f17394ca4353c9309f0830ad47d58d3ef7c","modified":1490756512000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1468565304000},{"_id":"themes/next/.bowerrc","hash":"80e096fdc1cf912ee85dd9f7e6e77fd40cf60f10","modified":1468565304000},{"_id":"themes/next/.gitignore","hash":"c8d6a73b9e17f0f8a3716e4ada6960d3180425a6","modified":1468565304000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1468565304000},{"_id":"themes/next/.javascript_ignore","hash":"d619ee13031908cd72666e4ff652d2ea3483b1c3","modified":1468565304000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1468565304000},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1468565304000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1468565304000},{"_id":"themes/next/bower.json","hash":"f89c6700a11d81e067cc97273ca6bf96cb88c8f9","modified":1468565304000},{"_id":"themes/next/_config.yml","hash":"c0470d84acfe1985a3359b9e962011c4470fb57b","modified":1490756071000},{"_id":"themes/next/gulpfile.coffee","hash":"26e5b1b945704c8bc78b928feede895c4c111c95","modified":1468565304000},{"_id":"themes/next/package.json","hash":"63e9c0f1dd9e5d7f51b4ae383981ef939a2ed45d","modified":1468565304000},{"_id":"source/_posts/.DS_Store","hash":"341d5540a1801e977be8fcc08821512f7ecdc156","modified":1472003676000},{"_id":"source/_posts/.高德地图demo.md.swp","hash":"17c45ea86892945e5f17a3cb8dfd6135ce6dd7e2","modified":1477638227000},{"_id":"source/_posts/apprtc-note-0.md","hash":"70fd0d91891c510af63fc0dbbf5127a8edd791a5","modified":1474424502000},{"_id":"source/_posts/webrtc-begin-intro.md","hash":"9d0bcdcf8f2e6e8b70007d7b772e51996924685a","modified":1488952653000},{"_id":"source/_posts/hello-world.md_","hash":"1fa15d879191d8d3054311bdca4d772e7065211b","modified":1468569246000},{"_id":"source/_posts/highcharts-2-demo.md","hash":"2972bdb60bbb6b3b7bbd028a583eb8138d2e7d07","modified":1477637944000},{"_id":"source/_posts/hybrid-app-brief-talk.md","hash":"4d2ede25cc94aebfa63266e5815c63cf8b0cf7d8","modified":1468829137000},{"_id":"source/_posts/{","hash":"ecdf8615392053b2c5045167888c6d8513197056","modified":1472174808000},{"_id":"source/_posts/思而不学则die.md","hash":"04288f2df13dd2dbe969e48b2901205a93417600","modified":1468989083000},{"_id":"source/_posts/这是一个中文标题混和English.md_","hash":"cb3d00c89292156204d379bd22a58bb6ef674267","modified":1468829137000},{"_id":"source/_posts/高德地图demo.md_","hash":"2972bdb60bbb6b3b7bbd028a583eb8138d2e7d07","modified":1477638186000},{"_id":"source/about/index.md","hash":"8744b49cfa0ddb03ac03eeb21422cbf043a4eb7d","modified":1468571035000},{"_id":"source/_posts/webrtc-build-cmd.md","hash":"93e479ec8fc417a918cb0db97122d7c66de1f9fd","modified":1489386186000},{"_id":"source/categories/index.md","hash":"418780998810102508078df18c1131985cda8393","modified":1468570914000},{"_id":"source/post_images/WebRTCNativeAPIsDocument (2).png","hash":"c0595d5622a1032e791cd6d5ba07c360f6c4a5ad","modified":1488529854000},{"_id":"source/post_images/WebRTCNativeAPIsDocument (3).png","hash":"888d7db5f7d931ba7dd0ec9cd91779879b9c149d","modified":1488529744000},{"_id":"source/post_images/WebRTCNativeAPIsDocument (1).png","hash":"2bd370fe927c45710ffecd8d0acd60451fb5d72a","modified":1488529731000},{"_id":"source/post_images/WebRTCNativeAPIsDocument.png","hash":"88b08e4f07db1f92284d7b1b21eb1792be6572e4","modified":1488529702000},{"_id":"source/post_images/hybrid-app-brief-talk-01.png","hash":"c0f6066190bdf1288d78cfd643a49f7cb990cca3","modified":1468813955000},{"_id":"source/post_images/hybrid-app-brief-talk-02.jpg","hash":"91569b2b32c9ca60eb22d06eadd8aefa8cb908c5","modified":1468826566000},{"_id":"source/post_images/hybrid-app-brief-talk-04.png","hash":"f27d3a112bfd522c83c1b3464db0af0ebb91bf5d","modified":1468826636000},{"_id":"source/post_images/webrtc_support.png","hash":"8e72466099d04ad450a7d51ff33804063851a868","modified":1488763910000},{"_id":"source/post_images/upyun_logo_90x45.png","hash":"6375cfc4be0f91b2c24779f3565ffff92751e5a8","modified":1470205948000},{"_id":"themes/next/.git/FETCH_HEAD","hash":"be05a29875e1c86c24bec9fda7261ae62884bbce","modified":1468829415000},{"_id":"themes/next/.git/COMMIT_EDITMSG","hash":"9de5dc55f8f8c879c370007386d1ccda1d5a2342","modified":1468829380000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1468565304000},{"_id":"source/tags/index.md","hash":"5761dd19b002a6b51e515e8f435ceb4e3adf30f1","modified":1468570892000},{"_id":"themes/next/.git/ORIG_HEAD","hash":"78f36eae48f83c5ca605e2015962e7714dae7473","modified":1468829415000},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1468565304000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1468565290000},{"_id":"themes/next/.git/index","hash":"5368772555ca7ad3dbda29b299dcd9249a1509ee","modified":1468829380000},{"_id":"themes/next/.git/packed-refs","hash":"6111aa948e4d9e08e4a4fc84faa6bcde689e194b","modified":1468565304000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1468565304000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1468565304000},{"_id":"themes/next/layout/.DS_Store","hash":"b844dadbba9fc7944dea7e58775df32ecfca06b1","modified":1490756419000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1468565304000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1468565304000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1468565304000},{"_id":"themes/next/layout/_layout.swig","hash":"74157f6cfd679ea11febec632542793f37c5e5d4","modified":1468565304000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1468565304000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1468565304000},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1468565304000},{"_id":"themes/next/languages/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1468573360000},{"_id":"themes/next/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1468565304000},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1468565304000},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1468565304000},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1468565304000},{"_id":"themes/next/languages/pt-BR.yml","hash":"462aa865ca3d479bcf6b363cba61247b50f230ff","modified":1468565304000},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1468565304000},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1468565304000},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1468565304000},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1468565304000},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1468565304000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1468565304000},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1468565304000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"cc54c18d9e964cf5f28e687ccd800149e524eeff","modified":1490756558000},{"_id":"themes/next/source/.DS_Store","hash":"07e27801ca55bede068b10ea8d393d2b188ec87a","modified":1490756512000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1468565304000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1468565304000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1468565304000},{"_id":"source/post_images/hybrid-app-brief-talk-05.jpg","hash":"ac1c84d7bca4c82da497c596d8c26b00441d2766","modified":1468826749000},{"_id":"source/post_images/stun-progress.png","hash":"21a7c4ab38ce4440cfdd3f778b3bbfa1c65e8b60","modified":1488780291000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1468565304000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1468565290000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1468565290000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1468565290000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1468565290000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1468565290000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1468565290000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1468565290000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1468565290000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1468565290000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1468565290000},{"_id":"themes/next/.git/logs/HEAD","hash":"8eb40777fb9777a4e03517883db370775bdfdbec","modified":1468829380000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1468565304000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1468565304000},{"_id":"themes/next/layout/_macro/post.swig","hash":"1ca03011bed92614832b1343b65be92183957dc5","modified":1468565304000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"b883289054ee54a374caad5d4883591beb94bd8b","modified":1468565304000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1468565304000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"02f5a385512b9f07985fd8713936c079532d4414","modified":1473146676000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"b73f9443bee2d3ea383aad52e49ffca8aa97dcc2","modified":1468565304000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1468565304000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1468565304000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b0c495b8154ef8b2d2cb0a554e164ff22cdc962","modified":1468565304000},{"_id":"themes/next/layout/_partials/header.swig","hash":"eb028685cb3c329537bbced06c063d23e6a33817","modified":1468565304000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"82d060fe055d6e423bbc9199f82dfe5c68e74779","modified":1468565304000},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1468565304000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1468565304000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1468565304000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1468565304000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1468565304000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1468565304000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1468565304000},{"_id":"themes/next/source/css/.DS_Store","hash":"696eed5ebf3a211ebbc062616d17dcb8bfbbbaef","modified":1468567049000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1468565304000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1468565304000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1468565304000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1468565304000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1468565304000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1468565304000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1468565304000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1468565304000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1468565304000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1468565304000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1468565304000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1468565304000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1468565304000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1468565304000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1468565304000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1468565304000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1468565304000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1468565304000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1468565304000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1468565304000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1468565304000},{"_id":"themes/next/.git/objects/52/10b2e20e9f8a4e7d090e981e6f8200975ac8df","hash":"4d6def23738ee4069678ce586052d4d67a89e7c1","modified":1468829380000},{"_id":"themes/next/.git/objects/57/c979a7eece09c1cb54e1b62706638bd5924637","hash":"bda97bb805b737f765aa13a1db245ab067c2ce7b","modified":1468829360000},{"_id":"themes/next/.git/objects/b6/44572d6fac2bebfb540772969249c51e9910fc","hash":"13c6446c2467c7da86345c0f8b9455b95f4684b0","modified":1468829380000},{"_id":"themes/next/.git/objects/ca/118e1720e8a4717ac075789070f449ee7ed27e","hash":"3177e53effd1d2af745c231c11d98e391e2918f2","modified":1468829360000},{"_id":"themes/next/.git/objects/d6/864b20fc16ae9e3cfb1b9b5ca85074367cf1e3","hash":"321042de8468de1a4d6843e3c35c7d838c697998","modified":1468829380000},{"_id":"themes/next/.git/refs/heads/master","hash":"78f36eae48f83c5ca605e2015962e7714dae7473","modified":1468829380000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1468565304000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1468565304000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1468565304000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1468565304000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c07f7b2f264e5215b8ed42d67e8cef2477558364","modified":1468565304000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1468565304000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"7ca5cb4daa58b3504e17f3e02975e794bc634658","modified":1468565304000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1468565304000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1468565304000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1468565304000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1468565304000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1468565304000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1468565304000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1468565304000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"7f7148c8f52e4d3cfc070d964160362179fa8e91","modified":1468565304000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1468565304000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1468565304000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1468565304000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/.DS_Store","hash":"8fb6d37d983578e4a7e9ec7478a160b8e46495c5","modified":1468567049000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1468565304000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1468565304000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"17624186f7a1f28daddea258d044f8e03b2f4bea","modified":1468565304000},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1468565304000},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1468565304000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1468565304000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1468565304000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1468565304000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1468565304000},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1468565304000},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1468565304000},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1468565304000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1468565304000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1468565304000},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1468565304000},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1468565304000},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1468565304000},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1468565304000},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1468565304000},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1468565304000},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1468565304000},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1468565304000},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1468565304000},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1468565304000},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1468565304000},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1468565304000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1468565304000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1468565304000},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1468565304000},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1468565304000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1468565304000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1468565304000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1468565304000},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1468565304000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"8eb40777fb9777a4e03517883db370775bdfdbec","modified":1468829380000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1468565304000},{"_id":"themes/next/.git/objects/pack/pack-f953df4feff31e8efa9e0e06d699c6874617714d.idx","hash":"07e3e6ee14c75f57812aa3c09f49181b8ee8b009","modified":1468565304000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1468565304000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1468565304000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1468565304000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"f9c6ee91c2a615edd8ca26edcc8a66b71883c238","modified":1468565304000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1468565304000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"bff3b18f56175c53f3bc6d733166c4d998e08732","modified":1468565304000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"696666141cdd204fd8818ac2ad18f05e320f8587","modified":1468565304000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1468565304000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1468565304000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1468565304000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1468565304000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1468565304000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1468565304000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6ed60cc621bac096c0ed7534fa25b1a52dc571d4","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"8d7cecde4933900c7df2db9d0a98f5f82f88dc93","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1468565304000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1468565304000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1468565304000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1468565304000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1468565304000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1468565304000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1468565304000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1468565304000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1468565304000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1468565304000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1468565304000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1468565304000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1468565304000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1468565304000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1468565304000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1468565304000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1468565304000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1468565304000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1468565304000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1468565304000},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1468565304000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1468565304000},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1468565304000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"7f271afcfd199187f902242d3cd3ec65e0b2ade6","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4da051c7f3924fa2db1e73c55b2baf1c2c150255","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"795d94561888d31cb7a6ff4a125596809ea69b7d","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1468565304000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1468565304000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1468565304000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1468565304000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1468565304000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1468565304000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1468565304000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1468565304000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1468565304000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1468565304000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1468565304000},{"_id":"source/post_images/hybrid-app-brief-talk-03.png","hash":"c7156c15409da49567f209c029cfb9a5d92693c8","modified":1468826617000},{"_id":"themes/next/.git/objects/pack/pack-f953df4feff31e8efa9e0e06d699c6874617714d.pack","hash":"ea88d4dfc3dbae4f5aa693d457382352ee5f229b","modified":1468565304000},{"_id":"public/atom.xml","hash":"6c87b26237a66a98ede114f200c7735ca50ff9a4","modified":1490755912532},{"_id":"public/about/index.html","hash":"0b82280e2eff0ab245a6fb7d503be668361855a2","modified":1490756587353},{"_id":"public/categories/index.html","hash":"86686be2fc95b6b3ba8bc5a90cbf08bbce8cee57","modified":1490756587353},{"_id":"public/tags/index.html","hash":"7b4c1220c2280e05dd036e76b439075d8a48e203","modified":1490756587354},{"_id":"public/archives/index.html","hash":"203dcae026c79e7a97fcd726b905a525f3299461","modified":1490756587355},{"_id":"public/archives/2016/index.html","hash":"e45d1e9d1999387a2914901304955865fedd594f","modified":1490756587355},{"_id":"public/archives/2016/07/index.html","hash":"c8c78de2d21d6b005b2b6031dc3d6761a52ff913","modified":1490756587355},{"_id":"public/archives/2016/08/index.html","hash":"e2cfe7b585900672ebced760f9d3a73eddc6d1bf","modified":1490756587355},{"_id":"public/archives/2017/index.html","hash":"3b16bbb27a2b763ed68b92f04ededc82ee13bee1","modified":1490756587355},{"_id":"public/archives/2017/03/index.html","hash":"eb182e5349f6fee826d1146a08759b00e945e8f5","modified":1490756587355},{"_id":"public/categories/WebRTC/index.html","hash":"e1fc1c5969c998962ca8af08266724f402ebd39d","modified":1490756587354},{"_id":"public/categories/Demo/index.html","hash":"1c4cacb10594fcbf6bd6039920c40be5c6b7ad0a","modified":1490756587354},{"_id":"public/categories/App/index.html","hash":"5fac3465c3747e2d67833a2217752aacb18aa6a5","modified":1490756587354},{"_id":"public/categories/WebRTC/AppRTC/index.html","hash":"60aebee6f12a07624bc38a487b02bf7ff63656b2","modified":1490756587354},{"_id":"public/categories/杂文/index.html","hash":"ea4bbf94b0fb575fb74b6d9266179b632f1ddfca","modified":1490756587354},{"_id":"public/tags/AppRTC/index.html","hash":"20ad9c360cab7bf7593fc8c331af543a4fa32ed1","modified":1490756587355},{"_id":"public/tags/WebRTC/index.html","hash":"000c0564eff8a97b0c8ad076b366be6deca0ce97","modified":1490756587355},{"_id":"public/tags/音视频/index.html","hash":"007434ed29641076c6c22cb9a6c9a30d31b507ef","modified":1490756587355},{"_id":"public/tags/部署/index.html","hash":"a8c3948b9f1fcd4c3b3535f82fa9b65da38b4e7b","modified":1490756587355},{"_id":"public/tags/Android/index.html","hash":"426a564803fdb6ce5bc83ab728cf2581e107d2fd","modified":1490756587355},{"_id":"public/tags/混合iOS/index.html","hash":"3fc376ba92c4e09b9463889c89546b3235d994b4","modified":1490756587355},{"_id":"public/tags/编译/index.html","hash":"eefe66a373e85b0cd7019639306e18e4c4d6fffa","modified":1490756587356},{"_id":"public/tags/Highcharts/index.html","hash":"ec0a59519fdeb887a3cf3d14adb4df9128371fcc","modified":1490756587356},{"_id":"public/tags/Demo/index.html","hash":"c5fbfec0b24b6a7ac4565298e7e87a9584bdc2f0","modified":1490756587356},{"_id":"public/tags/图表/index.html","hash":"e55bfd06e252985d85397c3604c81a691358863c","modified":1490756587356},{"_id":"public/tags/Hybrid/index.html","hash":"edb86667b2017f2647e3b595b1dcc960de88b2f3","modified":1490756587356},{"_id":"public/tags/H5/index.html","hash":"dcd4e6844ae75f3ede2d4e207ee567ec544ed690","modified":1490756587356},{"_id":"public/tags/混合开发/index.html","hash":"fcbbe3cb8d776ddaa13c1733b444132c974e09af","modified":1490756587356},{"_id":"public/tags/台词/index.html","hash":"fa97ac9b668a5d94f137e84bd81dd50ea0c06b6c","modified":1490756587356},{"_id":"public/tags/王小波/index.html","hash":"cf26305127ac4a297c557444847c8e6a4fbf78a7","modified":1490756587356},{"_id":"public/webrtc-begin-intro/index.html","hash":"dff1fa6d8a0a4ae62f59a6839b9c84bcefd6c8d5","modified":1490756587356},{"_id":"public/webrtc-build-cmd/index.html","hash":"7722004e0668fb8d06a8c31230055fa842eef547","modified":1490756587356},{"_id":"public/apprtc-note-0/index.html","hash":"7dab20ba62c9a69f28bc13ee906d2bfbc89855bb","modified":1490756587356},{"_id":"public/highcharts-2-demo/index.html","hash":"2d7db7de2c52d469d6189eb39323b31fc93a201d","modified":1490756587356},{"_id":"public/思而不学则die/index.html","hash":"640b6781060b4ec960177a967dd795324f509acc","modified":1490756587356},{"_id":"public/hybrid-app-brief-talk/index.html","hash":"77bce884c747ecca9056f2d2c140086e3382bbd1","modified":1490756587356},{"_id":"public/index.html","hash":"20b735bc1c0e1a00a2dda52814a9974a585816b4","modified":1490756587356},{"_id":"public/404.html","hash":"9442e60141663f11e11a52ca7d6bd396582f0ac3","modified":1490755912717},{"_id":"public/README.md","hash":"98ff3f41f9455977906832b50d7cd9d915915d80","modified":1490755912717},{"_id":"public/CNAME_","hash":"981837a011a38db22874a72d7ba63e325ec72291","modified":1490755912717},{"_id":"public/post_images/WebRTCNativeAPIsDocument (2).png","hash":"c0595d5622a1032e791cd6d5ba07c360f6c4a5ad","modified":1490755912717},{"_id":"public/post_images/WebRTCNativeAPIsDocument (3).png","hash":"888d7db5f7d931ba7dd0ec9cd91779879b9c149d","modified":1490755912717},{"_id":"public/post_images/WebRTCNativeAPIsDocument (1).png","hash":"2bd370fe927c45710ffecd8d0acd60451fb5d72a","modified":1490755912717},{"_id":"public/post_images/WebRTCNativeAPIsDocument.png","hash":"88b08e4f07db1f92284d7b1b21eb1792be6572e4","modified":1490755912717},{"_id":"public/post_images/hybrid-app-brief-talk-01.png","hash":"c0f6066190bdf1288d78cfd643a49f7cb990cca3","modified":1490755912717},{"_id":"public/post_images/hybrid-app-brief-talk-02.jpg","hash":"91569b2b32c9ca60eb22d06eadd8aefa8cb908c5","modified":1490755912718},{"_id":"public/post_images/hybrid-app-brief-talk-04.png","hash":"f27d3a112bfd522c83c1b3464db0af0ebb91bf5d","modified":1490755912718},{"_id":"public/post_images/webrtc_support.png","hash":"8e72466099d04ad450a7d51ff33804063851a868","modified":1490755912718},{"_id":"public/post_images/upyun_logo_90x45.png","hash":"6375cfc4be0f91b2c24779f3565ffff92751e5a8","modified":1490755912718},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1490755912718},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1490755912718},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1490755912718},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1490755912718},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1490755912718},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1490755912718},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1490755912718},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1490755912718},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1490755912718},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1490755912718},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1490755912718},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1490755912718},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1490755912718},{"_id":"public/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1490755912718},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1490755912718},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1490755912718},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1490755912718},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1490755912718},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1490755912719},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1490755912719},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1490755912719},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1490755912719},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1490755912719},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1490755912719},{"_id":"public/post_images/hybrid-app-brief-talk-05.jpg","hash":"ac1c84d7bca4c82da497c596d8c26b00441d2766","modified":1490755913567},{"_id":"public/post_images/stun-progress.png","hash":"21a7c4ab38ce4440cfdd3f778b3bbfa1c65e8b60","modified":1490755913569},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1490755913584},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1490755913584},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1490755913584},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1490755913589},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1490755913589},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1490755913589},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1490755913589},{"_id":"public/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1490755913589},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1490755913589},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1490755913589},{"_id":"public/vendors/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1490755913590},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1490755913590},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1490755913590},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1490755913590},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1490755913590},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1490755913590},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1490755913590},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1490755913590},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1490755913590},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1490755913590},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1490755913590},{"_id":"public/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1490755913590},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1490755913590},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1490755913590},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1490755913590},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1490755913590},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1490755913590},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1490755913590},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1490755913590},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1490755913591},{"_id":"public/css/main.css","hash":"f67413b8d528b852e83c5277ea24080bb2420b9e","modified":1490755913591},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1490755913591},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1490755913591},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1490755913591},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1490755913591},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1490755913591},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1490755913591},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1490755913591},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1490755913591},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1490755913591},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1490755913591},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1490755913603},{"_id":"public/post_images/hybrid-app-brief-talk-03.png","hash":"c7156c15409da49567f209c029cfb9a5d92693c8","modified":1490755913615}],"Category":[{"name":"WebRTC","_id":"cj0udktrb0005z0uubsqj8hzv"},{"name":"Demo","_id":"cj0udktrq000cz0uupb4xg7fe"},{"name":"App","_id":"cj0udktrs000fz0uudunk5k00"},{"name":"AppRTC","parent":"cj0udktrb0005z0uubsqj8hzv","_id":"cj0udktru000jz0uud2lndtlf"},{"name":"杂文","_id":"cj0udktrx000pz0uu30qvrl8k"}],"Data":[],"Page":[{"title":"about","type":"about","comments":0,"date":"2016-07-15T08:22:38.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ntype: \"about\"\ncomments: false\ndate: 2016-07-15 16:22:38\n---\n","updated":"2016-07-15T08:23:55.000Z","path":"about/index.html","layout":"page","_id":"cj0udktr20001z0uuyajx1ofm","content":"","excerpt":"","more":""},{"title":"categories","type":"categories","comments":0,"date":"2016-07-15T07:53:14.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ntype: \"categories\"\ncomments: false\ndate: 2016-07-15 15:53:14\n---\n","updated":"2016-07-15T08:21:54.000Z","path":"categories/index.html","layout":"page","_id":"cj0udktr50003z0uuu9kjbipg","content":"","excerpt":"","more":""},{"title":"tags","type":"tags","comments":0,"date":"2016-07-15T07:52:57.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ntype: \"tags\"\ncomments: false\ndate: 2016-07-15 15:52:57\n---\n","updated":"2016-07-15T08:21:32.000Z","path":"tags/index.html","layout":"page","_id":"cj0udktwx001oz0uu5qttqdy3","content":"","excerpt":"","more":""}],"Post":[{"title":"AppRTC服务器部署资料整理","date":"2016-08-17T02:00:32.000Z","_content":"\n# AppRTC介绍\n\n# AppRTC服务组件\n\n## 业务服务器 [AppRTC](https://github.com/webrtc/apprtc)\n\n* 参数：https://appr.tc/params.html\n\n## 信令服务器 [Collider](https://github.com/webrtc/apprtc/blob/master/src/collider/README.md)\n\n## TURN（ICE）服务器 [Coturn](https://github.com/coturn)\n\n# AppRTC部署过程\n\n## 部署AppRTC [参考](https://github.com/webrtc/apprtc#deployment)\n> AppRTC是需要用到[Google App Engine SDK for Python ](https://cloud.google.com/appengine/downloads#Google_App_Engine_SDK_for_Python)和[Grunt](http://gruntjs.com/)\n\n1. 源码下载 \n> git clone https://github.com/webrtc/apprtc.git\n\n2. \n\n## 部署Collider [参考](https://github.com/webrtc/apprtc/blob/master/src/collider/README.md)\n> Collider是GO开发的，所以需要安装Go环境，安装参考 http://golang.org/doc/install and http://golang.org/doc/code.html\n\n1. 源码位于apprtc/src/collider/collider\n\n2. 确定你已经设置`GOPATH`环境变量，例如：`export GOPATH=$HOME/goWorkspace`\n\n3. 复制一份源码到$GOPATH/src\n> cp -r apprtc/src/collider $GOPATH/src\n\n4. 安装依赖性 \n> go get collidermain\n\n5. 安装 collidermain \n> go install collidermain\n\n6. 启动 collidermain \n> $GOPATH/bin/collidermain -port=8089 -tls=false -room-server=http://47.88.32.224:8080\n\n## 部署Coturn\n\n1. 源码下载 `http://turnserver.open-sys.org/downloads/v4.5.0.3/`\n\n2. 生成加密用的密钥 \n> sudo openssl req -x509 -newkey rsa:2048 -keyout /usr/local/etc/turn_server_pkey.pem -out /usr/local/etc/turn_server_cert.pem -days 99999 -nodes\n\n\n# 启动服务\n\n## 启动apprtc\n1. cd到apprtc目录，执行：\n> dev_appserver.py --host 0.0.0.0 ./out/app_engine\n\n## 启动collider\n1. cd到$GOPATH/bin目录，执行：\n> $GOPATH/bin/collidermain -port=8089 -tls=false -room-server=\"http://47.88.32.224:8080\"\n\n## 启动coturn\n\n### 命令行参数启动\n> turnserver -a -v -n --no-dtls --no-tls -u linzq:linzq -r \"apprtc\"\n\n### 配置文件启动\n> turnserver -c /etc/turnserver/turnserver.conf\n\n### 服务启动\n> service turnserver start\n\n\n## 测试\n\n* https://test.webrtc.org/\n\n# 参考\n1.[自建 AppRTC](http://www.jianshu.com/p/c55ecf5a3fcf)\n2.[第六章 WebRTC服务器搭建](http://io.diveinedu.com/2015/02/05/%E7%AC%AC%E5%85%AD%E7%AB%A0-WebRTC%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA.html)\n3.[实战rfc5766-turn-server和ice4j广域网通讯](http://www.hankcs.com/program/network/actual-rfc5766-turn-server-and-ice4j-wide-area-network-communication.html)\n4.[WebRTC samples](https://webrtc.github.io/samples/)\n","source":"_posts/apprtc-note-0.md","raw":"\ntitle: AppRTC服务器部署资料整理\ndate: 2016-08-17 10:00:32\ntags:\n  - AppRTC\n  - WebRTC\n  - 音视频\n  - 部署\ncategories:\n  - WebRTC\n  - AppRTC\n---\n\n# AppRTC介绍\n\n# AppRTC服务组件\n\n## 业务服务器 [AppRTC](https://github.com/webrtc/apprtc)\n\n* 参数：https://appr.tc/params.html\n\n## 信令服务器 [Collider](https://github.com/webrtc/apprtc/blob/master/src/collider/README.md)\n\n## TURN（ICE）服务器 [Coturn](https://github.com/coturn)\n\n# AppRTC部署过程\n\n## 部署AppRTC [参考](https://github.com/webrtc/apprtc#deployment)\n> AppRTC是需要用到[Google App Engine SDK for Python ](https://cloud.google.com/appengine/downloads#Google_App_Engine_SDK_for_Python)和[Grunt](http://gruntjs.com/)\n\n1. 源码下载 \n> git clone https://github.com/webrtc/apprtc.git\n\n2. \n\n## 部署Collider [参考](https://github.com/webrtc/apprtc/blob/master/src/collider/README.md)\n> Collider是GO开发的，所以需要安装Go环境，安装参考 http://golang.org/doc/install and http://golang.org/doc/code.html\n\n1. 源码位于apprtc/src/collider/collider\n\n2. 确定你已经设置`GOPATH`环境变量，例如：`export GOPATH=$HOME/goWorkspace`\n\n3. 复制一份源码到$GOPATH/src\n> cp -r apprtc/src/collider $GOPATH/src\n\n4. 安装依赖性 \n> go get collidermain\n\n5. 安装 collidermain \n> go install collidermain\n\n6. 启动 collidermain \n> $GOPATH/bin/collidermain -port=8089 -tls=false -room-server=http://47.88.32.224:8080\n\n## 部署Coturn\n\n1. 源码下载 `http://turnserver.open-sys.org/downloads/v4.5.0.3/`\n\n2. 生成加密用的密钥 \n> sudo openssl req -x509 -newkey rsa:2048 -keyout /usr/local/etc/turn_server_pkey.pem -out /usr/local/etc/turn_server_cert.pem -days 99999 -nodes\n\n\n# 启动服务\n\n## 启动apprtc\n1. cd到apprtc目录，执行：\n> dev_appserver.py --host 0.0.0.0 ./out/app_engine\n\n## 启动collider\n1. cd到$GOPATH/bin目录，执行：\n> $GOPATH/bin/collidermain -port=8089 -tls=false -room-server=\"http://47.88.32.224:8080\"\n\n## 启动coturn\n\n### 命令行参数启动\n> turnserver -a -v -n --no-dtls --no-tls -u linzq:linzq -r \"apprtc\"\n\n### 配置文件启动\n> turnserver -c /etc/turnserver/turnserver.conf\n\n### 服务启动\n> service turnserver start\n\n\n## 测试\n\n* https://test.webrtc.org/\n\n# 参考\n1.[自建 AppRTC](http://www.jianshu.com/p/c55ecf5a3fcf)\n2.[第六章 WebRTC服务器搭建](http://io.diveinedu.com/2015/02/05/%E7%AC%AC%E5%85%AD%E7%AB%A0-WebRTC%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA.html)\n3.[实战rfc5766-turn-server和ice4j广域网通讯](http://www.hankcs.com/program/network/actual-rfc5766-turn-server-and-ice4j-wide-area-network-communication.html)\n4.[WebRTC samples](https://webrtc.github.io/samples/)\n","slug":"apprtc-note-0","published":1,"updated":"2016-09-21T02:21:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0udktqw0000z0uudpbbnb6n","content":"<h1 id=\"AppRTC介绍\"><a href=\"#AppRTC介绍\" class=\"headerlink\" title=\"AppRTC介绍\"></a>AppRTC介绍</h1><h1 id=\"AppRTC服务组件\"><a href=\"#AppRTC服务组件\" class=\"headerlink\" title=\"AppRTC服务组件\"></a>AppRTC服务组件</h1><h2 id=\"业务服务器-AppRTC\"><a href=\"#业务服务器-AppRTC\" class=\"headerlink\" title=\"业务服务器 AppRTC\"></a>业务服务器 <a href=\"https://github.com/webrtc/apprtc\" target=\"_blank\" rel=\"external\">AppRTC</a></h2><ul>\n<li>参数：<a href=\"https://appr.tc/params.html\" target=\"_blank\" rel=\"external\">https://appr.tc/params.html</a></li>\n</ul>\n<h2 id=\"信令服务器-Collider\"><a href=\"#信令服务器-Collider\" class=\"headerlink\" title=\"信令服务器 Collider\"></a>信令服务器 <a href=\"https://github.com/webrtc/apprtc/blob/master/src/collider/README.md\" target=\"_blank\" rel=\"external\">Collider</a></h2><h2 id=\"TURN（ICE）服务器-Coturn\"><a href=\"#TURN（ICE）服务器-Coturn\" class=\"headerlink\" title=\"TURN（ICE）服务器 Coturn\"></a>TURN（ICE）服务器 <a href=\"https://github.com/coturn\" target=\"_blank\" rel=\"external\">Coturn</a></h2><h1 id=\"AppRTC部署过程\"><a href=\"#AppRTC部署过程\" class=\"headerlink\" title=\"AppRTC部署过程\"></a>AppRTC部署过程</h1><h2 id=\"部署AppRTC-参考\"><a href=\"#部署AppRTC-参考\" class=\"headerlink\" title=\"部署AppRTC 参考\"></a>部署AppRTC <a href=\"https://github.com/webrtc/apprtc#deployment\" target=\"_blank\" rel=\"external\">参考</a></h2><blockquote>\n<p>AppRTC是需要用到<a href=\"https://cloud.google.com/appengine/downloads#Google_App_Engine_SDK_for_Python\" target=\"_blank\" rel=\"external\">Google App Engine SDK for Python </a>和<a href=\"http://gruntjs.com/\" target=\"_blank\" rel=\"external\">Grunt</a></p>\n</blockquote>\n<ol>\n<li><p>源码下载 </p>\n<blockquote>\n<p>git clone <a href=\"https://github.com/webrtc/apprtc.git\" target=\"_blank\" rel=\"external\">https://github.com/webrtc/apprtc.git</a></p>\n</blockquote>\n</li>\n<li></li>\n</ol>\n<h2 id=\"部署Collider-参考\"><a href=\"#部署Collider-参考\" class=\"headerlink\" title=\"部署Collider 参考\"></a>部署Collider <a href=\"https://github.com/webrtc/apprtc/blob/master/src/collider/README.md\" target=\"_blank\" rel=\"external\">参考</a></h2><blockquote>\n<p>Collider是GO开发的，所以需要安装Go环境，安装参考 <a href=\"http://golang.org/doc/install\" target=\"_blank\" rel=\"external\">http://golang.org/doc/install</a> and <a href=\"http://golang.org/doc/code.html\" target=\"_blank\" rel=\"external\">http://golang.org/doc/code.html</a></p>\n</blockquote>\n<ol>\n<li><p>源码位于apprtc/src/collider/collider</p>\n</li>\n<li><p>确定你已经设置<code>GOPATH</code>环境变量，例如：<code>export GOPATH=$HOME/goWorkspace</code></p>\n</li>\n<li><p>复制一份源码到$GOPATH/src</p>\n<blockquote>\n<p>cp -r apprtc/src/collider $GOPATH/src</p>\n</blockquote>\n</li>\n<li><p>安装依赖性 </p>\n<blockquote>\n<p>go get collidermain</p>\n</blockquote>\n</li>\n<li><p>安装 collidermain </p>\n<blockquote>\n<p>go install collidermain</p>\n</blockquote>\n</li>\n<li><p>启动 collidermain </p>\n<blockquote>\n<p>$GOPATH/bin/collidermain -port=8089 -tls=false -room-server=<a href=\"http://47.88.32.224:8080\" target=\"_blank\" rel=\"external\">http://47.88.32.224:8080</a></p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"部署Coturn\"><a href=\"#部署Coturn\" class=\"headerlink\" title=\"部署Coturn\"></a>部署Coturn</h2><ol>\n<li><p>源码下载 <code>http://turnserver.open-sys.org/downloads/v4.5.0.3/</code></p>\n</li>\n<li><p>生成加密用的密钥 </p>\n<blockquote>\n<p>sudo openssl req -x509 -newkey rsa:2048 -keyout /usr/local/etc/turn_server_pkey.pem -out /usr/local/etc/turn_server_cert.pem -days 99999 -nodes</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h1><h2 id=\"启动apprtc\"><a href=\"#启动apprtc\" class=\"headerlink\" title=\"启动apprtc\"></a>启动apprtc</h2><ol>\n<li>cd到apprtc目录，执行：<blockquote>\n<p>dev_appserver.py –host 0.0.0.0 ./out/app_engine</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"启动collider\"><a href=\"#启动collider\" class=\"headerlink\" title=\"启动collider\"></a>启动collider</h2><ol>\n<li>cd到$GOPATH/bin目录，执行：<blockquote>\n<p>$GOPATH/bin/collidermain -port=8089 -tls=false -room-server=”<a href=\"http://47.88.32.224:8080\" target=\"_blank\" rel=\"external\">http://47.88.32.224:8080</a>“</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"启动coturn\"><a href=\"#启动coturn\" class=\"headerlink\" title=\"启动coturn\"></a>启动coturn</h2><h3 id=\"命令行参数启动\"><a href=\"#命令行参数启动\" class=\"headerlink\" title=\"命令行参数启动\"></a>命令行参数启动</h3><blockquote>\n<p>turnserver -a -v -n –no-dtls –no-tls -u linzq:linzq -r “apprtc”</p>\n</blockquote>\n<h3 id=\"配置文件启动\"><a href=\"#配置文件启动\" class=\"headerlink\" title=\"配置文件启动\"></a>配置文件启动</h3><blockquote>\n<p>turnserver -c /etc/turnserver/turnserver.conf</p>\n</blockquote>\n<h3 id=\"服务启动\"><a href=\"#服务启动\" class=\"headerlink\" title=\"服务启动\"></a>服务启动</h3><blockquote>\n<p>service turnserver start</p>\n</blockquote>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><ul>\n<li><a href=\"https://test.webrtc.org/\" target=\"_blank\" rel=\"external\">https://test.webrtc.org/</a></li>\n</ul>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p>1.<a href=\"http://www.jianshu.com/p/c55ecf5a3fcf\" target=\"_blank\" rel=\"external\">自建 AppRTC</a><br>2.<a href=\"http://io.diveinedu.com/2015/02/05/%E7%AC%AC%E5%85%AD%E7%AB%A0-WebRTC%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA.html\" target=\"_blank\" rel=\"external\">第六章 WebRTC服务器搭建</a><br>3.<a href=\"http://www.hankcs.com/program/network/actual-rfc5766-turn-server-and-ice4j-wide-area-network-communication.html\" target=\"_blank\" rel=\"external\">实战rfc5766-turn-server和ice4j广域网通讯</a><br>4.<a href=\"https://webrtc.github.io/samples/\" target=\"_blank\" rel=\"external\">WebRTC samples</a></p>\n","excerpt":"","more":"<h1 id=\"AppRTC介绍\"><a href=\"#AppRTC介绍\" class=\"headerlink\" title=\"AppRTC介绍\"></a>AppRTC介绍</h1><h1 id=\"AppRTC服务组件\"><a href=\"#AppRTC服务组件\" class=\"headerlink\" title=\"AppRTC服务组件\"></a>AppRTC服务组件</h1><h2 id=\"业务服务器-AppRTC\"><a href=\"#业务服务器-AppRTC\" class=\"headerlink\" title=\"业务服务器 AppRTC\"></a>业务服务器 <a href=\"https://github.com/webrtc/apprtc\">AppRTC</a></h2><ul>\n<li>参数：<a href=\"https://appr.tc/params.html\">https://appr.tc/params.html</a></li>\n</ul>\n<h2 id=\"信令服务器-Collider\"><a href=\"#信令服务器-Collider\" class=\"headerlink\" title=\"信令服务器 Collider\"></a>信令服务器 <a href=\"https://github.com/webrtc/apprtc/blob/master/src/collider/README.md\">Collider</a></h2><h2 id=\"TURN（ICE）服务器-Coturn\"><a href=\"#TURN（ICE）服务器-Coturn\" class=\"headerlink\" title=\"TURN（ICE）服务器 Coturn\"></a>TURN（ICE）服务器 <a href=\"https://github.com/coturn\">Coturn</a></h2><h1 id=\"AppRTC部署过程\"><a href=\"#AppRTC部署过程\" class=\"headerlink\" title=\"AppRTC部署过程\"></a>AppRTC部署过程</h1><h2 id=\"部署AppRTC-参考\"><a href=\"#部署AppRTC-参考\" class=\"headerlink\" title=\"部署AppRTC 参考\"></a>部署AppRTC <a href=\"https://github.com/webrtc/apprtc#deployment\">参考</a></h2><blockquote>\n<p>AppRTC是需要用到<a href=\"https://cloud.google.com/appengine/downloads#Google_App_Engine_SDK_for_Python\">Google App Engine SDK for Python </a>和<a href=\"http://gruntjs.com/\">Grunt</a></p>\n</blockquote>\n<ol>\n<li><p>源码下载 </p>\n<blockquote>\n<p>git clone <a href=\"https://github.com/webrtc/apprtc.git\">https://github.com/webrtc/apprtc.git</a></p>\n</blockquote>\n</li>\n<li></li>\n</ol>\n<h2 id=\"部署Collider-参考\"><a href=\"#部署Collider-参考\" class=\"headerlink\" title=\"部署Collider 参考\"></a>部署Collider <a href=\"https://github.com/webrtc/apprtc/blob/master/src/collider/README.md\">参考</a></h2><blockquote>\n<p>Collider是GO开发的，所以需要安装Go环境，安装参考 <a href=\"http://golang.org/doc/install\">http://golang.org/doc/install</a> and <a href=\"http://golang.org/doc/code.html\">http://golang.org/doc/code.html</a></p>\n</blockquote>\n<ol>\n<li><p>源码位于apprtc/src/collider/collider</p>\n</li>\n<li><p>确定你已经设置<code>GOPATH</code>环境变量，例如：<code>export GOPATH=$HOME/goWorkspace</code></p>\n</li>\n<li><p>复制一份源码到$GOPATH/src</p>\n<blockquote>\n<p>cp -r apprtc/src/collider $GOPATH/src</p>\n</blockquote>\n</li>\n<li><p>安装依赖性 </p>\n<blockquote>\n<p>go get collidermain</p>\n</blockquote>\n</li>\n<li><p>安装 collidermain </p>\n<blockquote>\n<p>go install collidermain</p>\n</blockquote>\n</li>\n<li><p>启动 collidermain </p>\n<blockquote>\n<p>$GOPATH/bin/collidermain -port=8089 -tls=false -room-server=<a href=\"http://47.88.32.224:8080\">http://47.88.32.224:8080</a></p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"部署Coturn\"><a href=\"#部署Coturn\" class=\"headerlink\" title=\"部署Coturn\"></a>部署Coturn</h2><ol>\n<li><p>源码下载 <code>http://turnserver.open-sys.org/downloads/v4.5.0.3/</code></p>\n</li>\n<li><p>生成加密用的密钥 </p>\n<blockquote>\n<p>sudo openssl req -x509 -newkey rsa:2048 -keyout /usr/local/etc/turn_server_pkey.pem -out /usr/local/etc/turn_server_cert.pem -days 99999 -nodes</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h1><h2 id=\"启动apprtc\"><a href=\"#启动apprtc\" class=\"headerlink\" title=\"启动apprtc\"></a>启动apprtc</h2><ol>\n<li>cd到apprtc目录，执行：<blockquote>\n<p>dev_appserver.py –host 0.0.0.0 ./out/app_engine</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"启动collider\"><a href=\"#启动collider\" class=\"headerlink\" title=\"启动collider\"></a>启动collider</h2><ol>\n<li>cd到$GOPATH/bin目录，执行：<blockquote>\n<p>$GOPATH/bin/collidermain -port=8089 -tls=false -room-server=”<a href=\"http://47.88.32.224:8080\">http://47.88.32.224:8080</a>“</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"启动coturn\"><a href=\"#启动coturn\" class=\"headerlink\" title=\"启动coturn\"></a>启动coturn</h2><h3 id=\"命令行参数启动\"><a href=\"#命令行参数启动\" class=\"headerlink\" title=\"命令行参数启动\"></a>命令行参数启动</h3><blockquote>\n<p>turnserver -a -v -n –no-dtls –no-tls -u linzq:linzq -r “apprtc”</p>\n</blockquote>\n<h3 id=\"配置文件启动\"><a href=\"#配置文件启动\" class=\"headerlink\" title=\"配置文件启动\"></a>配置文件启动</h3><blockquote>\n<p>turnserver -c /etc/turnserver/turnserver.conf</p>\n</blockquote>\n<h3 id=\"服务启动\"><a href=\"#服务启动\" class=\"headerlink\" title=\"服务启动\"></a>服务启动</h3><blockquote>\n<p>service turnserver start</p>\n</blockquote>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><ul>\n<li><a href=\"https://test.webrtc.org/\">https://test.webrtc.org/</a></li>\n</ul>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p>1.<a href=\"http://www.jianshu.com/p/c55ecf5a3fcf\">自建 AppRTC</a><br>2.<a href=\"http://io.diveinedu.com/2015/02/05/%E7%AC%AC%E5%85%AD%E7%AB%A0-WebRTC%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA.html\">第六章 WebRTC服务器搭建</a><br>3.<a href=\"http://www.hankcs.com/program/network/actual-rfc5766-turn-server-and-ice4j-wide-area-network-communication.html\">实战rfc5766-turn-server和ice4j广域网通讯</a><br>4.<a href=\"https://webrtc.github.io/samples/\">WebRTC samples</a></p>\n"},{"title":"WebRTC 入门介绍","date":"2017-03-08T03:08:03.000Z","_content":"\n本文不涉及获编译相关，此类内容请看 [WebRTC 编译笔记](/blog/webrtc-build-cmd/)\n\n# 什么是WebRTC\n## 背景\n### 如何实现一个点对点的音视频通话\n* Native 实现  \n摄像头访问、编解码、降噪、信令、数据通讯、渲染、优化\n\n* web 实现  \nFlash\n\n### WebRTC是什么\n> 网页即时通信（英语：Web Real-Time Communication）的缩写，是一个支持网页浏览器进行**实时语音对话或视频对话的API**。它于2011年6月1日开源并在Google、Mozilla、Opera支持下被纳入万维网联盟的**W3C推荐标准**。\n\n### 我们说的WebRTC是\n> 2010年5月，Google以6820万美元收购VoIP软件开发商Global IP Solutions的**GIPS引擎**，并改为名为“**WebRTC**”。WebRTC使用GIPS引擎，实现了基于网页的视频会议，并支持722，PCM，ILBC，ISAC等编码，同时使用谷歌自家的VP8视频解码器；同时支持RTP/SRTP传输等。\n\n## 现状\n### 支持\n[检测是否支持](https://test.webrtc.org/)\n\n![API框架图](/blog/post_images/webrtc_support.png)\n\n<!-- more -->\n  \n  \n# WebRTC流程\n\n* API框架图\n\n![API框架图](/blog/post_images/WebRTCNativeAPIsDocument.png)\n\n* 发起序列图\n\n![发起序列图](/blog/post_images/WebRTCNativeAPIsDocument%20%281%29.png)\n\n* 接受序列图\n\n![接受序列图](/blog/post_images/WebRTCNativeAPIsDocument%20%282%29.png)\n\n* 结束序列图\n\n![结束序列图](/blog/post_images/WebRTCNativeAPIsDocument%20%283%29.png)\n\n## 说说ICE\n[互动式连接建立](https://zh.wikipedia.org/wiki/%E4%BA%92%E5%8B%95%E5%BC%8F%E9%80%A3%E6%8E%A5%E5%BB%BA%E7%AB%8B)\n> 互动式连接建立是由IETF的MMUSIC工作组开发出来的一种framework，可整合各种NAT穿透技术，如STUN、TURN（Traversal Using Relay NAT，中继NAT实现的穿透）、RSIP（Realm Specific IP，特定域IP）等。该framework可以让SIP的客户端利用各种NAT穿透方式打穿远程的防火墙。\n\n### [NAT](https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2) 网络地址转换\n> 也叫做网络掩蔽或者IP掩蔽（IP masquerading），是一种在IP数据包通过路由器或防火墙时重写来源IP地址或目的IP地址的技术。这种技术被普遍使用在有多台主机但只通过一个公有IP地址访问因特网的私有网络中。根据规范，路由器是不能这样工作的，但它的确是一个方便并得到了广泛应用的技术。当然，NAT也让主机之间的通信变得复杂，导致通信效率的降低。\n\n* 利用 [pystun](https://pypi.python.org/pypi/pystun) 检测NAT类型\n\n* Full cone NAT 全锥型NAT  \n**发过，谁都随便发**\n> 一旦一个内部地址（iAddr:port1）映射到外部地址（eAddr:port2），所有发自iAddr:port1的包都经由eAddr:port2向外发送。**任意外部主机都能通过给eAddr:port2发包到达iAddr:port1**\n\n\n* Address-Restricted cone NAT 限制锥型NAT  \n**发过给你，你随便发**\n> 一旦一个内部地址（iAddr:port1）映射到外部地址（eAddr:port2），所有发自iAddr:port1的包都经由eAddr:port2向外发送。**任意外部主机（hostAddr:any）都能通过给eAddr:port2发包到达iAddr:port1的前提是：iAddr:port1之前发送过包到hostAddr:any. \"any\"也就是说端口不受限制**\n\n* Port-Restricted cone NAT 端口限制锥型NAT  \n**发过你这个端口，这个端口随便发**\n> 一旦一个内部地址（iAddr:port1）映射到外部地址（eAddr:port2），所有发自iAddr:port1的包都经由eAddr:port2向外发送。**一个外部主机（hostAddr:port3）能够发包到达iAddr:port1的前提是：iAddr:port1之前发送过包到hostAddr:port3**\n\n* Symmetric NAT 对称型NAT **一一对应**\n> 每一个来自相同内部IP与端口，到一个特定目的地地址和端口的请求，都映射到一个独特的外部IP地址和端口。  \n**同一内部IP与端口发到不同的目的地和端口的信息包，都使用不同的映射**\n\n* 提问  \n问题1: A是全锥型NAT（手机），B是端口限制锥型NAT，A、B2个人有直接通讯的可能吗？  \n问题2: C是全锥型NAT，D是对称型NAT(公司)，C、D2个人有直接通讯的可能吗？\n\n### [STUN](https://zh.wikipedia.org/wiki/STUN) 穿透\n> STUN（Session Traversal Utilities for NAT，NAT会话穿越应用程序）是一种网络协议，它允许位于NAT（或多重NAT）后的客户端找出自己的公网地址，查出自己位于哪种类型的NAT之后以及NAT为某一个本地端口所绑定的Internet端端口。这些信息被用来在两个同时处于NAT路由器之后的主机之间建立UDP通信。该协议由RFC 5389定义。\n\nSTUN 算法过程  \n![STUN过程](/blog/post_images/stun-progress.png)\n\n### [TURN](https://zh.wikipedia.org/wiki/TURN) 中转\n> TURN是一个client-server协议。TURN的NAT穿透方法与STUN类似，都是通过取得应用层中的公有地址达到NAT穿透。但实现TURN client的终端必须在通讯开始前与TURN server进行交互，并要求TURN server产生\"relay port\"，也就是relayed-transport-address。这时TURN server会建立peer，即远端端点（remote endpoints），开始进行中继（relay）的动作，TURN client利用relay port将资料传送至peer，再由peer转传到另一方的TURN client。\n\nWebRTC源码中包含了STUN、TURN的客户端和服务端实现\n\n# 我们的目标\n\n* 实现基于WebRTC的，符合“联享家”和“景医卫”需求的，实时音视频框架。\n* 为什么用WebRTC，因为WebRTC实现很多我们需要的功能：音视频编解码，传输，复用等等，以及它的可靠性高，稳定性好，支持多个平台。\n\n## 我们要做什么\n\n* 首先，能够实现需求所需要的功能（**废话**）\n* 一套完整的音视频流程、机制，包括服务端\n\t* 独立（不和具体需求耦合）\n\t* 复用（能够重复用于多个项目）\n\t* 统一（所有平台尽量统一代码、API，减少维护学习成本）\n\t* 稳定\n* 基于一个稳定的WebRTC版本进行开发，持续更新合并新的代码\n* 实现DTMF收发，H264编解码\n* 完善的文档、学习资料\n* 小团队维护，持续迭代\n\n## 第一阶段目标\n\n* 各个开发人员学习WebRTC开发编译\n* 完善所有平台H264支持\n* 部署自己的ICE服务器\n* 编码实现各个平台的demo app，实现各个平台相互通讯\n* 输出相关笔记、文档等资料\n\n# 代码分析\n## 项目结构\n根目录 src/\n\n```\n├── base\n├── build  编译相关脚本\n├── build_overrides  覆盖编译参数\n├── buildtools\n├── data  测试数据\n├── infra\n├── resources 需要的资源文件\n├── testing\n├── third_party 用到的第三方库ffmpeg/openh264...代码，5G左右\n├── tools\n├── tools-webrtc 一些编译脚本\n└── webrtc 核心代码\n```\n\n核心代码目录 src/webrtc\n\n```\n├── api\n├── audio\n├── base\n├── call\n├── common_audio\n├── common_video\n│   ├── h264\n│   ├── include\n│   └── libyuv\n├── examples\n│   ├── androidapp Android版AppRTCMbile\n│   ├── androidjunit\n│   ├── androidtests\n│   ├── objc  iOS版AppRTCMbile\n│   ├── peerconnection\n│   ├── relayserver\n│   ├── stunprober\n│   ├── stunserver\n│   └── turnserver\n├── logging\n├── media\n├── modules\n│   ├── audio_coding\n│   ├── audio_conference_mixer\n│   ├── audio_device\n│   ├── audio_mixer\n│   ├── audio_processing\n│   ├── bitrate_controller\n│   ├── congestion_controller\n│   ├── desktop_capture\n│   ├── include\n│   ├── media_file\n│   ├── pacing\n│   ├── remote_bitrate_estimator\n│   ├── rtp_rtcp\n│   ├── utility\n│   ├── video_capture\n│   ├── video_coding\n│   └── video_processing\n├── p2p\n│   ├── base\n│   ├── client\n│   ├── quic\n│   └── stunprober\n├── pc\n├── sdk\n│   ├── android  Android sdk封转\n│   └── objc iOS sdk封转\n├── stats\n├── system_wrappers\n│   ├── include\n│   └── source\n├── test\n├── tools\n├── video\n└── voice_engine\n```\n\n## 编译\n* gn 生成编译脚本等\n* ninja 编译工具\n* 不论是 Xcode 还是 visual studio 最终还是调用了ninja进行编译\n* 增加、删除代码需要修改对应的 BUILD.gn 文件\n* 参考chromium的编译\t\n\t* [iOS 编译](https://chromium.googlesource.com/chromium/src/+/master/docs/ios/build_instructions.md#Setting-up-the-build)\n\t* [Android 编译](https://chromium.googlesource.com/chromium/src/+/master/docs/android_build_instructions.md)\n\t* [Windows 编译](https://chromium.googlesource.com/chromium/src/+/master/docs/windows_build_instructions.md)\n\n具体查看 [WebRTC 编译笔记](/blog/webrtc-build-cmd/)\n\n## 怎么看代码\n* [Android Studio](https://chromium.googlesource.com/chromium/src/+/master/docs/android_studio.md) + [AppRTCMobile can now be developed in Android Studio](https://groups.google.com/forum/#!topic/discuss-webrtc/b7yQjvPLHaM) + [Visual Studi Code](https://code.visualstudio.com/)\n* Xcode 加编译参数 --ide=xcode\n* Visual Studio 加编译参数 --ide=vs\n\n## 代码管理\n* 同步代码 `gclient sync`\n* 同步特点版本代码 `gclient sync -r git_commit_revision`\n* 创建分支 `git checkout -b linzq/dev/57 remotes/branch-heads/57`\n* 代码、分支管理建议用sourcetree + gitFlow流程\n* 翻墙建议用 shadowsocks，然后 proxifier 或者 proxyCap 来做全局代理\n* [webrtc CI日志](https://build.chromium.org/p/client.webrtc/waterfall) 当你不确定checkout的版本是否有问题的时候，看看CI日志的编译情况，可以减少很多查错的时间\n* [webrtc forum](https://groups.google.com/forum/#!forum/discuss-webrtc) 版本更新、有疑问这里找\n* [git 介绍](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001373962845513aefd77a99f4145f0a2c7a7ca057e7570000)\n\n## 典型模块\n* API [Java libjingle_peerconnection_java](https://chromium.googlesource.com/external/webrtc/+/master/webrtc/sdk/android/) **[objc rtc_sdk_framework](https://chromium.googlesource.com/external/webrtc/+/master/webrtc/sdk/objc/)**  **[C++ libjingle_peerconnection](https://chromium.googlesource.com/external/webrtc/+/master/webrtc/pc/)**\n\n* [H264](https://chromium.googlesource.com/external/webrtc/+/master/webrtc/modules/video_coding/codecs/h264/)\n\n## 演示\n* Android **[aar包](https://chromium.googlesource.com/external/webrtc/+/master/tools-webrtc/android/build_aar.py)**  **[AppRTCMobile](https://chromium.googlesource.com/external/webrtc/+/master/webrtc/examples/androidapp/)**\n\n* iOS **[FAT库](https://chromium.googlesource.com/external/webrtc/+/master/tools-webrtc/ios/build_ios_libs.py)**、**[AppRTCMobile](https://chromium.googlesource.com/external/webrtc/+/master/webrtc/examples/objc/AppRTCMobile/)**\n\n* Windows **[videoloopback](https://chromium.googlesource.com/external/webrtc/+/master/webrtc/video/video_loopback.cc)**\n\n> 遇到有坑的地方，记得做好笔记，**避免自己再次踩坑、后人受益**\n\n# H264与WebRTC的历史\n* 15年左右的版本是不只是H264的编解码的\n* 16年增加了openh264实现编码，沿用原来的ffmpeg代码来实现解码\n* 最新的是:\n\t* 非android/iOS已经实现了软编解码(openh264+ffmepg)\n\t* iOS 使用了硬编解码\n\t* Android针对高通、三星平台使用硬编解码，其他不支持\n\n# 初步计划\n1. 3月份，所有成员能够**编译、调试代码**\n2. 4月份，初步完成各个平台的**Demo APP，ICE服务器部署**\n3. 5月份，初步 完成可以与联享家APP、门口机APP**联调的版本**\n4. 6月份，完成第一个**基本的稳定版本**（各个平台）\n5. 7月份，**通用的稳定版本**\n\n# 怎么做\n* Just Do it\n* 把 [webrtc.org](http://www.webrtc.org) 上面的内容都仔细看看，会有很多收获的\n\n# 讨论\n1. 说说看你们的个人理解\n2. 有什么疑问\n\n\n# 参考\n* [wiki - WebRTC](https://zh.wikipedia.org/wiki/WebRTC)  \n* [Chromium docs](https://chromium.googlesource.com/chromium/src/+/master/docs/)\n","source":"_posts/webrtc-begin-intro.md","raw":"---\ntitle: WebRTC 入门介绍\ndate: 2017-03-08 11:08:03\ntags:\n  - WebRTC\n  - Android\n  - 混合iOS\n  - 编译\ncategories:\n  - WebRTC\n---\n\n本文不涉及获编译相关，此类内容请看 [WebRTC 编译笔记](/blog/webrtc-build-cmd/)\n\n# 什么是WebRTC\n## 背景\n### 如何实现一个点对点的音视频通话\n* Native 实现  \n摄像头访问、编解码、降噪、信令、数据通讯、渲染、优化\n\n* web 实现  \nFlash\n\n### WebRTC是什么\n> 网页即时通信（英语：Web Real-Time Communication）的缩写，是一个支持网页浏览器进行**实时语音对话或视频对话的API**。它于2011年6月1日开源并在Google、Mozilla、Opera支持下被纳入万维网联盟的**W3C推荐标准**。\n\n### 我们说的WebRTC是\n> 2010年5月，Google以6820万美元收购VoIP软件开发商Global IP Solutions的**GIPS引擎**，并改为名为“**WebRTC**”。WebRTC使用GIPS引擎，实现了基于网页的视频会议，并支持722，PCM，ILBC，ISAC等编码，同时使用谷歌自家的VP8视频解码器；同时支持RTP/SRTP传输等。\n\n## 现状\n### 支持\n[检测是否支持](https://test.webrtc.org/)\n\n![API框架图](/blog/post_images/webrtc_support.png)\n\n<!-- more -->\n  \n  \n# WebRTC流程\n\n* API框架图\n\n![API框架图](/blog/post_images/WebRTCNativeAPIsDocument.png)\n\n* 发起序列图\n\n![发起序列图](/blog/post_images/WebRTCNativeAPIsDocument%20%281%29.png)\n\n* 接受序列图\n\n![接受序列图](/blog/post_images/WebRTCNativeAPIsDocument%20%282%29.png)\n\n* 结束序列图\n\n![结束序列图](/blog/post_images/WebRTCNativeAPIsDocument%20%283%29.png)\n\n## 说说ICE\n[互动式连接建立](https://zh.wikipedia.org/wiki/%E4%BA%92%E5%8B%95%E5%BC%8F%E9%80%A3%E6%8E%A5%E5%BB%BA%E7%AB%8B)\n> 互动式连接建立是由IETF的MMUSIC工作组开发出来的一种framework，可整合各种NAT穿透技术，如STUN、TURN（Traversal Using Relay NAT，中继NAT实现的穿透）、RSIP（Realm Specific IP，特定域IP）等。该framework可以让SIP的客户端利用各种NAT穿透方式打穿远程的防火墙。\n\n### [NAT](https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2) 网络地址转换\n> 也叫做网络掩蔽或者IP掩蔽（IP masquerading），是一种在IP数据包通过路由器或防火墙时重写来源IP地址或目的IP地址的技术。这种技术被普遍使用在有多台主机但只通过一个公有IP地址访问因特网的私有网络中。根据规范，路由器是不能这样工作的，但它的确是一个方便并得到了广泛应用的技术。当然，NAT也让主机之间的通信变得复杂，导致通信效率的降低。\n\n* 利用 [pystun](https://pypi.python.org/pypi/pystun) 检测NAT类型\n\n* Full cone NAT 全锥型NAT  \n**发过，谁都随便发**\n> 一旦一个内部地址（iAddr:port1）映射到外部地址（eAddr:port2），所有发自iAddr:port1的包都经由eAddr:port2向外发送。**任意外部主机都能通过给eAddr:port2发包到达iAddr:port1**\n\n\n* Address-Restricted cone NAT 限制锥型NAT  \n**发过给你，你随便发**\n> 一旦一个内部地址（iAddr:port1）映射到外部地址（eAddr:port2），所有发自iAddr:port1的包都经由eAddr:port2向外发送。**任意外部主机（hostAddr:any）都能通过给eAddr:port2发包到达iAddr:port1的前提是：iAddr:port1之前发送过包到hostAddr:any. \"any\"也就是说端口不受限制**\n\n* Port-Restricted cone NAT 端口限制锥型NAT  \n**发过你这个端口，这个端口随便发**\n> 一旦一个内部地址（iAddr:port1）映射到外部地址（eAddr:port2），所有发自iAddr:port1的包都经由eAddr:port2向外发送。**一个外部主机（hostAddr:port3）能够发包到达iAddr:port1的前提是：iAddr:port1之前发送过包到hostAddr:port3**\n\n* Symmetric NAT 对称型NAT **一一对应**\n> 每一个来自相同内部IP与端口，到一个特定目的地地址和端口的请求，都映射到一个独特的外部IP地址和端口。  \n**同一内部IP与端口发到不同的目的地和端口的信息包，都使用不同的映射**\n\n* 提问  \n问题1: A是全锥型NAT（手机），B是端口限制锥型NAT，A、B2个人有直接通讯的可能吗？  \n问题2: C是全锥型NAT，D是对称型NAT(公司)，C、D2个人有直接通讯的可能吗？\n\n### [STUN](https://zh.wikipedia.org/wiki/STUN) 穿透\n> STUN（Session Traversal Utilities for NAT，NAT会话穿越应用程序）是一种网络协议，它允许位于NAT（或多重NAT）后的客户端找出自己的公网地址，查出自己位于哪种类型的NAT之后以及NAT为某一个本地端口所绑定的Internet端端口。这些信息被用来在两个同时处于NAT路由器之后的主机之间建立UDP通信。该协议由RFC 5389定义。\n\nSTUN 算法过程  \n![STUN过程](/blog/post_images/stun-progress.png)\n\n### [TURN](https://zh.wikipedia.org/wiki/TURN) 中转\n> TURN是一个client-server协议。TURN的NAT穿透方法与STUN类似，都是通过取得应用层中的公有地址达到NAT穿透。但实现TURN client的终端必须在通讯开始前与TURN server进行交互，并要求TURN server产生\"relay port\"，也就是relayed-transport-address。这时TURN server会建立peer，即远端端点（remote endpoints），开始进行中继（relay）的动作，TURN client利用relay port将资料传送至peer，再由peer转传到另一方的TURN client。\n\nWebRTC源码中包含了STUN、TURN的客户端和服务端实现\n\n# 我们的目标\n\n* 实现基于WebRTC的，符合“联享家”和“景医卫”需求的，实时音视频框架。\n* 为什么用WebRTC，因为WebRTC实现很多我们需要的功能：音视频编解码，传输，复用等等，以及它的可靠性高，稳定性好，支持多个平台。\n\n## 我们要做什么\n\n* 首先，能够实现需求所需要的功能（**废话**）\n* 一套完整的音视频流程、机制，包括服务端\n\t* 独立（不和具体需求耦合）\n\t* 复用（能够重复用于多个项目）\n\t* 统一（所有平台尽量统一代码、API，减少维护学习成本）\n\t* 稳定\n* 基于一个稳定的WebRTC版本进行开发，持续更新合并新的代码\n* 实现DTMF收发，H264编解码\n* 完善的文档、学习资料\n* 小团队维护，持续迭代\n\n## 第一阶段目标\n\n* 各个开发人员学习WebRTC开发编译\n* 完善所有平台H264支持\n* 部署自己的ICE服务器\n* 编码实现各个平台的demo app，实现各个平台相互通讯\n* 输出相关笔记、文档等资料\n\n# 代码分析\n## 项目结构\n根目录 src/\n\n```\n├── base\n├── build  编译相关脚本\n├── build_overrides  覆盖编译参数\n├── buildtools\n├── data  测试数据\n├── infra\n├── resources 需要的资源文件\n├── testing\n├── third_party 用到的第三方库ffmpeg/openh264...代码，5G左右\n├── tools\n├── tools-webrtc 一些编译脚本\n└── webrtc 核心代码\n```\n\n核心代码目录 src/webrtc\n\n```\n├── api\n├── audio\n├── base\n├── call\n├── common_audio\n├── common_video\n│   ├── h264\n│   ├── include\n│   └── libyuv\n├── examples\n│   ├── androidapp Android版AppRTCMbile\n│   ├── androidjunit\n│   ├── androidtests\n│   ├── objc  iOS版AppRTCMbile\n│   ├── peerconnection\n│   ├── relayserver\n│   ├── stunprober\n│   ├── stunserver\n│   └── turnserver\n├── logging\n├── media\n├── modules\n│   ├── audio_coding\n│   ├── audio_conference_mixer\n│   ├── audio_device\n│   ├── audio_mixer\n│   ├── audio_processing\n│   ├── bitrate_controller\n│   ├── congestion_controller\n│   ├── desktop_capture\n│   ├── include\n│   ├── media_file\n│   ├── pacing\n│   ├── remote_bitrate_estimator\n│   ├── rtp_rtcp\n│   ├── utility\n│   ├── video_capture\n│   ├── video_coding\n│   └── video_processing\n├── p2p\n│   ├── base\n│   ├── client\n│   ├── quic\n│   └── stunprober\n├── pc\n├── sdk\n│   ├── android  Android sdk封转\n│   └── objc iOS sdk封转\n├── stats\n├── system_wrappers\n│   ├── include\n│   └── source\n├── test\n├── tools\n├── video\n└── voice_engine\n```\n\n## 编译\n* gn 生成编译脚本等\n* ninja 编译工具\n* 不论是 Xcode 还是 visual studio 最终还是调用了ninja进行编译\n* 增加、删除代码需要修改对应的 BUILD.gn 文件\n* 参考chromium的编译\t\n\t* [iOS 编译](https://chromium.googlesource.com/chromium/src/+/master/docs/ios/build_instructions.md#Setting-up-the-build)\n\t* [Android 编译](https://chromium.googlesource.com/chromium/src/+/master/docs/android_build_instructions.md)\n\t* [Windows 编译](https://chromium.googlesource.com/chromium/src/+/master/docs/windows_build_instructions.md)\n\n具体查看 [WebRTC 编译笔记](/blog/webrtc-build-cmd/)\n\n## 怎么看代码\n* [Android Studio](https://chromium.googlesource.com/chromium/src/+/master/docs/android_studio.md) + [AppRTCMobile can now be developed in Android Studio](https://groups.google.com/forum/#!topic/discuss-webrtc/b7yQjvPLHaM) + [Visual Studi Code](https://code.visualstudio.com/)\n* Xcode 加编译参数 --ide=xcode\n* Visual Studio 加编译参数 --ide=vs\n\n## 代码管理\n* 同步代码 `gclient sync`\n* 同步特点版本代码 `gclient sync -r git_commit_revision`\n* 创建分支 `git checkout -b linzq/dev/57 remotes/branch-heads/57`\n* 代码、分支管理建议用sourcetree + gitFlow流程\n* 翻墙建议用 shadowsocks，然后 proxifier 或者 proxyCap 来做全局代理\n* [webrtc CI日志](https://build.chromium.org/p/client.webrtc/waterfall) 当你不确定checkout的版本是否有问题的时候，看看CI日志的编译情况，可以减少很多查错的时间\n* [webrtc forum](https://groups.google.com/forum/#!forum/discuss-webrtc) 版本更新、有疑问这里找\n* [git 介绍](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001373962845513aefd77a99f4145f0a2c7a7ca057e7570000)\n\n## 典型模块\n* API [Java libjingle_peerconnection_java](https://chromium.googlesource.com/external/webrtc/+/master/webrtc/sdk/android/) **[objc rtc_sdk_framework](https://chromium.googlesource.com/external/webrtc/+/master/webrtc/sdk/objc/)**  **[C++ libjingle_peerconnection](https://chromium.googlesource.com/external/webrtc/+/master/webrtc/pc/)**\n\n* [H264](https://chromium.googlesource.com/external/webrtc/+/master/webrtc/modules/video_coding/codecs/h264/)\n\n## 演示\n* Android **[aar包](https://chromium.googlesource.com/external/webrtc/+/master/tools-webrtc/android/build_aar.py)**  **[AppRTCMobile](https://chromium.googlesource.com/external/webrtc/+/master/webrtc/examples/androidapp/)**\n\n* iOS **[FAT库](https://chromium.googlesource.com/external/webrtc/+/master/tools-webrtc/ios/build_ios_libs.py)**、**[AppRTCMobile](https://chromium.googlesource.com/external/webrtc/+/master/webrtc/examples/objc/AppRTCMobile/)**\n\n* Windows **[videoloopback](https://chromium.googlesource.com/external/webrtc/+/master/webrtc/video/video_loopback.cc)**\n\n> 遇到有坑的地方，记得做好笔记，**避免自己再次踩坑、后人受益**\n\n# H264与WebRTC的历史\n* 15年左右的版本是不只是H264的编解码的\n* 16年增加了openh264实现编码，沿用原来的ffmpeg代码来实现解码\n* 最新的是:\n\t* 非android/iOS已经实现了软编解码(openh264+ffmepg)\n\t* iOS 使用了硬编解码\n\t* Android针对高通、三星平台使用硬编解码，其他不支持\n\n# 初步计划\n1. 3月份，所有成员能够**编译、调试代码**\n2. 4月份，初步完成各个平台的**Demo APP，ICE服务器部署**\n3. 5月份，初步 完成可以与联享家APP、门口机APP**联调的版本**\n4. 6月份，完成第一个**基本的稳定版本**（各个平台）\n5. 7月份，**通用的稳定版本**\n\n# 怎么做\n* Just Do it\n* 把 [webrtc.org](http://www.webrtc.org) 上面的内容都仔细看看，会有很多收获的\n\n# 讨论\n1. 说说看你们的个人理解\n2. 有什么疑问\n\n\n# 参考\n* [wiki - WebRTC](https://zh.wikipedia.org/wiki/WebRTC)  \n* [Chromium docs](https://chromium.googlesource.com/chromium/src/+/master/docs/)\n","slug":"webrtc-begin-intro","published":1,"updated":"2017-03-08T05:57:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0udktr40002z0uuy8mzmbbz","content":"<p>本文不涉及获编译相关，此类内容请看 <a href=\"/blog/webrtc-build-cmd/\">WebRTC 编译笔记</a></p>\n<h1 id=\"什么是WebRTC\"><a href=\"#什么是WebRTC\" class=\"headerlink\" title=\"什么是WebRTC\"></a>什么是WebRTC</h1><h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><h3 id=\"如何实现一个点对点的音视频通话\"><a href=\"#如何实现一个点对点的音视频通话\" class=\"headerlink\" title=\"如何实现一个点对点的音视频通话\"></a>如何实现一个点对点的音视频通话</h3><ul>\n<li><p>Native 实现<br>摄像头访问、编解码、降噪、信令、数据通讯、渲染、优化</p>\n</li>\n<li><p>web 实现<br>Flash</p>\n</li>\n</ul>\n<h3 id=\"WebRTC是什么\"><a href=\"#WebRTC是什么\" class=\"headerlink\" title=\"WebRTC是什么\"></a>WebRTC是什么</h3><blockquote>\n<p>网页即时通信（英语：Web Real-Time Communication）的缩写，是一个支持网页浏览器进行<strong>实时语音对话或视频对话的API</strong>。它于2011年6月1日开源并在Google、Mozilla、Opera支持下被纳入万维网联盟的<strong>W3C推荐标准</strong>。</p>\n</blockquote>\n<h3 id=\"我们说的WebRTC是\"><a href=\"#我们说的WebRTC是\" class=\"headerlink\" title=\"我们说的WebRTC是\"></a>我们说的WebRTC是</h3><blockquote>\n<p>2010年5月，Google以6820万美元收购VoIP软件开发商Global IP Solutions的<strong>GIPS引擎</strong>，并改为名为“<strong>WebRTC</strong>”。WebRTC使用GIPS引擎，实现了基于网页的视频会议，并支持722，PCM，ILBC，ISAC等编码，同时使用谷歌自家的VP8视频解码器；同时支持RTP/SRTP传输等。</p>\n</blockquote>\n<h2 id=\"现状\"><a href=\"#现状\" class=\"headerlink\" title=\"现状\"></a>现状</h2><h3 id=\"支持\"><a href=\"#支持\" class=\"headerlink\" title=\"支持\"></a>支持</h3><p><a href=\"https://test.webrtc.org/\" target=\"_blank\" rel=\"external\">检测是否支持</a></p>\n<p><img src=\"/blog/post_images/webrtc_support.png\" alt=\"API框架图\"></p>\n<a id=\"more\"></a>\n<h1 id=\"WebRTC流程\"><a href=\"#WebRTC流程\" class=\"headerlink\" title=\"WebRTC流程\"></a>WebRTC流程</h1><ul>\n<li>API框架图</li>\n</ul>\n<p><img src=\"/blog/post_images/WebRTCNativeAPIsDocument.png\" alt=\"API框架图\"></p>\n<ul>\n<li>发起序列图</li>\n</ul>\n<p><img src=\"/blog/post_images/WebRTCNativeAPIsDocument%20%281%29.png\" alt=\"发起序列图\"></p>\n<ul>\n<li>接受序列图</li>\n</ul>\n<p><img src=\"/blog/post_images/WebRTCNativeAPIsDocument%20%282%29.png\" alt=\"接受序列图\"></p>\n<ul>\n<li>结束序列图</li>\n</ul>\n<p><img src=\"/blog/post_images/WebRTCNativeAPIsDocument%20%283%29.png\" alt=\"结束序列图\"></p>\n<h2 id=\"说说ICE\"><a href=\"#说说ICE\" class=\"headerlink\" title=\"说说ICE\"></a>说说ICE</h2><p><a href=\"https://zh.wikipedia.org/wiki/%E4%BA%92%E5%8B%95%E5%BC%8F%E9%80%A3%E6%8E%A5%E5%BB%BA%E7%AB%8B\" target=\"_blank\" rel=\"external\">互动式连接建立</a></p>\n<blockquote>\n<p>互动式连接建立是由IETF的MMUSIC工作组开发出来的一种framework，可整合各种NAT穿透技术，如STUN、TURN（Traversal Using Relay NAT，中继NAT实现的穿透）、RSIP（Realm Specific IP，特定域IP）等。该framework可以让SIP的客户端利用各种NAT穿透方式打穿远程的防火墙。</p>\n</blockquote>\n<h3 id=\"NAT-网络地址转换\"><a href=\"#NAT-网络地址转换\" class=\"headerlink\" title=\"NAT 网络地址转换\"></a><a href=\"https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2\" target=\"_blank\" rel=\"external\">NAT</a> 网络地址转换</h3><blockquote>\n<p>也叫做网络掩蔽或者IP掩蔽（IP masquerading），是一种在IP数据包通过路由器或防火墙时重写来源IP地址或目的IP地址的技术。这种技术被普遍使用在有多台主机但只通过一个公有IP地址访问因特网的私有网络中。根据规范，路由器是不能这样工作的，但它的确是一个方便并得到了广泛应用的技术。当然，NAT也让主机之间的通信变得复杂，导致通信效率的降低。</p>\n</blockquote>\n<ul>\n<li><p>利用 <a href=\"https://pypi.python.org/pypi/pystun\" target=\"_blank\" rel=\"external\">pystun</a> 检测NAT类型</p>\n</li>\n<li><p>Full cone NAT 全锥型NAT<br><strong>发过，谁都随便发</strong></p>\n<blockquote>\n<p>一旦一个内部地址（iAddr:port1）映射到外部地址（eAddr:port2），所有发自iAddr:port1的包都经由eAddr:port2向外发送。<strong>任意外部主机都能通过给eAddr:port2发包到达iAddr:port1</strong></p>\n</blockquote>\n</li>\n</ul>\n<ul>\n<li><p>Address-Restricted cone NAT 限制锥型NAT<br><strong>发过给你，你随便发</strong></p>\n<blockquote>\n<p>一旦一个内部地址（iAddr:port1）映射到外部地址（eAddr:port2），所有发自iAddr:port1的包都经由eAddr:port2向外发送。<strong>任意外部主机（hostAddr:any）都能通过给eAddr:port2发包到达iAddr:port1的前提是：iAddr:port1之前发送过包到hostAddr:any. “any”也就是说端口不受限制</strong></p>\n</blockquote>\n</li>\n<li><p>Port-Restricted cone NAT 端口限制锥型NAT<br><strong>发过你这个端口，这个端口随便发</strong></p>\n<blockquote>\n<p>一旦一个内部地址（iAddr:port1）映射到外部地址（eAddr:port2），所有发自iAddr:port1的包都经由eAddr:port2向外发送。<strong>一个外部主机（hostAddr:port3）能够发包到达iAddr:port1的前提是：iAddr:port1之前发送过包到hostAddr:port3</strong></p>\n</blockquote>\n</li>\n<li><p>Symmetric NAT 对称型NAT <strong>一一对应</strong></p>\n<blockquote>\n<p>每一个来自相同内部IP与端口，到一个特定目的地地址和端口的请求，都映射到一个独特的外部IP地址和端口。<br><strong>同一内部IP与端口发到不同的目的地和端口的信息包，都使用不同的映射</strong></p>\n</blockquote>\n</li>\n<li><p>提问<br>问题1: A是全锥型NAT（手机），B是端口限制锥型NAT，A、B2个人有直接通讯的可能吗？<br>问题2: C是全锥型NAT，D是对称型NAT(公司)，C、D2个人有直接通讯的可能吗？</p>\n</li>\n</ul>\n<h3 id=\"STUN-穿透\"><a href=\"#STUN-穿透\" class=\"headerlink\" title=\"STUN 穿透\"></a><a href=\"https://zh.wikipedia.org/wiki/STUN\" target=\"_blank\" rel=\"external\">STUN</a> 穿透</h3><blockquote>\n<p>STUN（Session Traversal Utilities for NAT，NAT会话穿越应用程序）是一种网络协议，它允许位于NAT（或多重NAT）后的客户端找出自己的公网地址，查出自己位于哪种类型的NAT之后以及NAT为某一个本地端口所绑定的Internet端端口。这些信息被用来在两个同时处于NAT路由器之后的主机之间建立UDP通信。该协议由RFC 5389定义。</p>\n</blockquote>\n<p>STUN 算法过程<br><img src=\"/blog/post_images/stun-progress.png\" alt=\"STUN过程\"></p>\n<h3 id=\"TURN-中转\"><a href=\"#TURN-中转\" class=\"headerlink\" title=\"TURN 中转\"></a><a href=\"https://zh.wikipedia.org/wiki/TURN\" target=\"_blank\" rel=\"external\">TURN</a> 中转</h3><blockquote>\n<p>TURN是一个client-server协议。TURN的NAT穿透方法与STUN类似，都是通过取得应用层中的公有地址达到NAT穿透。但实现TURN client的终端必须在通讯开始前与TURN server进行交互，并要求TURN server产生”relay port”，也就是relayed-transport-address。这时TURN server会建立peer，即远端端点（remote endpoints），开始进行中继（relay）的动作，TURN client利用relay port将资料传送至peer，再由peer转传到另一方的TURN client。</p>\n</blockquote>\n<p>WebRTC源码中包含了STUN、TURN的客户端和服务端实现</p>\n<h1 id=\"我们的目标\"><a href=\"#我们的目标\" class=\"headerlink\" title=\"我们的目标\"></a>我们的目标</h1><ul>\n<li>实现基于WebRTC的，符合“联享家”和“景医卫”需求的，实时音视频框架。</li>\n<li>为什么用WebRTC，因为WebRTC实现很多我们需要的功能：音视频编解码，传输，复用等等，以及它的可靠性高，稳定性好，支持多个平台。</li>\n</ul>\n<h2 id=\"我们要做什么\"><a href=\"#我们要做什么\" class=\"headerlink\" title=\"我们要做什么\"></a>我们要做什么</h2><ul>\n<li>首先，能够实现需求所需要的功能（<strong>废话</strong>）</li>\n<li>一套完整的音视频流程、机制，包括服务端<ul>\n<li>独立（不和具体需求耦合）</li>\n<li>复用（能够重复用于多个项目）</li>\n<li>统一（所有平台尽量统一代码、API，减少维护学习成本）</li>\n<li>稳定</li>\n</ul>\n</li>\n<li>基于一个稳定的WebRTC版本进行开发，持续更新合并新的代码</li>\n<li>实现DTMF收发，H264编解码</li>\n<li>完善的文档、学习资料</li>\n<li>小团队维护，持续迭代</li>\n</ul>\n<h2 id=\"第一阶段目标\"><a href=\"#第一阶段目标\" class=\"headerlink\" title=\"第一阶段目标\"></a>第一阶段目标</h2><ul>\n<li>各个开发人员学习WebRTC开发编译</li>\n<li>完善所有平台H264支持</li>\n<li>部署自己的ICE服务器</li>\n<li>编码实现各个平台的demo app，实现各个平台相互通讯</li>\n<li>输出相关笔记、文档等资料</li>\n</ul>\n<h1 id=\"代码分析\"><a href=\"#代码分析\" class=\"headerlink\" title=\"代码分析\"></a>代码分析</h1><h2 id=\"项目结构\"><a href=\"#项目结构\" class=\"headerlink\" title=\"项目结构\"></a>项目结构</h2><p>根目录 src/</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">├── base</div><div class=\"line\">├── build  编译相关脚本</div><div class=\"line\">├── build_overrides  覆盖编译参数</div><div class=\"line\">├── buildtools</div><div class=\"line\">├── data  测试数据</div><div class=\"line\">├── infra</div><div class=\"line\">├── resources 需要的资源文件</div><div class=\"line\">├── testing</div><div class=\"line\">├── third_party 用到的第三方库ffmpeg/openh264...代码，5G左右</div><div class=\"line\">├── tools</div><div class=\"line\">├── tools-webrtc 一些编译脚本</div><div class=\"line\">└── webrtc 核心代码</div></pre></td></tr></table></figure>\n<p>核心代码目录 src/webrtc</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div></pre></td><td class=\"code\"><pre><div class=\"line\">├── api</div><div class=\"line\">├── audio</div><div class=\"line\">├── base</div><div class=\"line\">├── call</div><div class=\"line\">├── common_audio</div><div class=\"line\">├── common_video</div><div class=\"line\">│   ├── h264</div><div class=\"line\">│   ├── include</div><div class=\"line\">│   └── libyuv</div><div class=\"line\">├── examples</div><div class=\"line\">│   ├── androidapp Android版AppRTCMbile</div><div class=\"line\">│   ├── androidjunit</div><div class=\"line\">│   ├── androidtests</div><div class=\"line\">│   ├── objc  iOS版AppRTCMbile</div><div class=\"line\">│   ├── peerconnection</div><div class=\"line\">│   ├── relayserver</div><div class=\"line\">│   ├── stunprober</div><div class=\"line\">│   ├── stunserver</div><div class=\"line\">│   └── turnserver</div><div class=\"line\">├── logging</div><div class=\"line\">├── media</div><div class=\"line\">├── modules</div><div class=\"line\">│   ├── audio_coding</div><div class=\"line\">│   ├── audio_conference_mixer</div><div class=\"line\">│   ├── audio_device</div><div class=\"line\">│   ├── audio_mixer</div><div class=\"line\">│   ├── audio_processing</div><div class=\"line\">│   ├── bitrate_controller</div><div class=\"line\">│   ├── congestion_controller</div><div class=\"line\">│   ├── desktop_capture</div><div class=\"line\">│   ├── include</div><div class=\"line\">│   ├── media_file</div><div class=\"line\">│   ├── pacing</div><div class=\"line\">│   ├── remote_bitrate_estimator</div><div class=\"line\">│   ├── rtp_rtcp</div><div class=\"line\">│   ├── utility</div><div class=\"line\">│   ├── video_capture</div><div class=\"line\">│   ├── video_coding</div><div class=\"line\">│   └── video_processing</div><div class=\"line\">├── p2p</div><div class=\"line\">│   ├── base</div><div class=\"line\">│   ├── client</div><div class=\"line\">│   ├── quic</div><div class=\"line\">│   └── stunprober</div><div class=\"line\">├── pc</div><div class=\"line\">├── sdk</div><div class=\"line\">│   ├── android  Android sdk封转</div><div class=\"line\">│   └── objc iOS sdk封转</div><div class=\"line\">├── stats</div><div class=\"line\">├── system_wrappers</div><div class=\"line\">│   ├── include</div><div class=\"line\">│   └── source</div><div class=\"line\">├── test</div><div class=\"line\">├── tools</div><div class=\"line\">├── video</div><div class=\"line\">└── voice_engine</div></pre></td></tr></table></figure>\n<h2 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h2><ul>\n<li>gn 生成编译脚本等</li>\n<li>ninja 编译工具</li>\n<li>不论是 Xcode 还是 visual studio 最终还是调用了ninja进行编译</li>\n<li>增加、删除代码需要修改对应的 BUILD.gn 文件</li>\n<li>参考chromium的编译    <ul>\n<li><a href=\"https://chromium.googlesource.com/chromium/src/+/master/docs/ios/build_instructions.md#Setting-up-the-build\" target=\"_blank\" rel=\"external\">iOS 编译</a></li>\n<li><a href=\"https://chromium.googlesource.com/chromium/src/+/master/docs/android_build_instructions.md\" target=\"_blank\" rel=\"external\">Android 编译</a></li>\n<li><a href=\"https://chromium.googlesource.com/chromium/src/+/master/docs/windows_build_instructions.md\" target=\"_blank\" rel=\"external\">Windows 编译</a></li>\n</ul>\n</li>\n</ul>\n<p>具体查看 <a href=\"/blog/webrtc-build-cmd/\">WebRTC 编译笔记</a></p>\n<h2 id=\"怎么看代码\"><a href=\"#怎么看代码\" class=\"headerlink\" title=\"怎么看代码\"></a>怎么看代码</h2><ul>\n<li><a href=\"https://chromium.googlesource.com/chromium/src/+/master/docs/android_studio.md\" target=\"_blank\" rel=\"external\">Android Studio</a> + <a href=\"https://groups.google.com/forum/#!topic/discuss-webrtc/b7yQjvPLHaM\" target=\"_blank\" rel=\"external\">AppRTCMobile can now be developed in Android Studio</a> + <a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"external\">Visual Studi Code</a></li>\n<li>Xcode 加编译参数 –ide=xcode</li>\n<li>Visual Studio 加编译参数 –ide=vs</li>\n</ul>\n<h2 id=\"代码管理\"><a href=\"#代码管理\" class=\"headerlink\" title=\"代码管理\"></a>代码管理</h2><ul>\n<li>同步代码 <code>gclient sync</code></li>\n<li>同步特点版本代码 <code>gclient sync -r git_commit_revision</code></li>\n<li>创建分支 <code>git checkout -b linzq/dev/57 remotes/branch-heads/57</code></li>\n<li>代码、分支管理建议用sourcetree + gitFlow流程</li>\n<li>翻墙建议用 shadowsocks，然后 proxifier 或者 proxyCap 来做全局代理</li>\n<li><a href=\"https://build.chromium.org/p/client.webrtc/waterfall\" target=\"_blank\" rel=\"external\">webrtc CI日志</a> 当你不确定checkout的版本是否有问题的时候，看看CI日志的编译情况，可以减少很多查错的时间</li>\n<li><a href=\"https://groups.google.com/forum/#!forum/discuss-webrtc\" target=\"_blank\" rel=\"external\">webrtc forum</a> 版本更新、有疑问这里找</li>\n<li><a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001373962845513aefd77a99f4145f0a2c7a7ca057e7570000\" target=\"_blank\" rel=\"external\">git 介绍</a></li>\n</ul>\n<h2 id=\"典型模块\"><a href=\"#典型模块\" class=\"headerlink\" title=\"典型模块\"></a>典型模块</h2><ul>\n<li><p>API <a href=\"https://chromium.googlesource.com/external/webrtc/+/master/webrtc/sdk/android/\" target=\"_blank\" rel=\"external\">Java libjingle_peerconnection_java</a> <strong><a href=\"https://chromium.googlesource.com/external/webrtc/+/master/webrtc/sdk/objc/\" target=\"_blank\" rel=\"external\">objc rtc_sdk_framework</a></strong>  <strong><a href=\"https://chromium.googlesource.com/external/webrtc/+/master/webrtc/pc/\" target=\"_blank\" rel=\"external\">C++ libjingle_peerconnection</a></strong></p>\n</li>\n<li><p><a href=\"https://chromium.googlesource.com/external/webrtc/+/master/webrtc/modules/video_coding/codecs/h264/\" target=\"_blank\" rel=\"external\">H264</a></p>\n</li>\n</ul>\n<h2 id=\"演示\"><a href=\"#演示\" class=\"headerlink\" title=\"演示\"></a>演示</h2><ul>\n<li><p>Android <strong><a href=\"https://chromium.googlesource.com/external/webrtc/+/master/tools-webrtc/android/build_aar.py\" target=\"_blank\" rel=\"external\">aar包</a></strong>  <strong><a href=\"https://chromium.googlesource.com/external/webrtc/+/master/webrtc/examples/androidapp/\" target=\"_blank\" rel=\"external\">AppRTCMobile</a></strong></p>\n</li>\n<li><p>iOS <strong><a href=\"https://chromium.googlesource.com/external/webrtc/+/master/tools-webrtc/ios/build_ios_libs.py\" target=\"_blank\" rel=\"external\">FAT库</a></strong>、<strong><a href=\"https://chromium.googlesource.com/external/webrtc/+/master/webrtc/examples/objc/AppRTCMobile/\" target=\"_blank\" rel=\"external\">AppRTCMobile</a></strong></p>\n</li>\n<li><p>Windows <strong><a href=\"https://chromium.googlesource.com/external/webrtc/+/master/webrtc/video/video_loopback.cc\" target=\"_blank\" rel=\"external\">videoloopback</a></strong></p>\n</li>\n</ul>\n<blockquote>\n<p>遇到有坑的地方，记得做好笔记，<strong>避免自己再次踩坑、后人受益</strong></p>\n</blockquote>\n<h1 id=\"H264与WebRTC的历史\"><a href=\"#H264与WebRTC的历史\" class=\"headerlink\" title=\"H264与WebRTC的历史\"></a>H264与WebRTC的历史</h1><ul>\n<li>15年左右的版本是不只是H264的编解码的</li>\n<li>16年增加了openh264实现编码，沿用原来的ffmpeg代码来实现解码</li>\n<li>最新的是:<ul>\n<li>非android/iOS已经实现了软编解码(openh264+ffmepg)</li>\n<li>iOS 使用了硬编解码</li>\n<li>Android针对高通、三星平台使用硬编解码，其他不支持</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"初步计划\"><a href=\"#初步计划\" class=\"headerlink\" title=\"初步计划\"></a>初步计划</h1><ol>\n<li>3月份，所有成员能够<strong>编译、调试代码</strong></li>\n<li>4月份，初步完成各个平台的<strong>Demo APP，ICE服务器部署</strong></li>\n<li>5月份，初步 完成可以与联享家APP、门口机APP<strong>联调的版本</strong></li>\n<li>6月份，完成第一个<strong>基本的稳定版本</strong>（各个平台）</li>\n<li>7月份，<strong>通用的稳定版本</strong></li>\n</ol>\n<h1 id=\"怎么做\"><a href=\"#怎么做\" class=\"headerlink\" title=\"怎么做\"></a>怎么做</h1><ul>\n<li>Just Do it</li>\n<li>把 <a href=\"http://www.webrtc.org\" target=\"_blank\" rel=\"external\">webrtc.org</a> 上面的内容都仔细看看，会有很多收获的</li>\n</ul>\n<h1 id=\"讨论\"><a href=\"#讨论\" class=\"headerlink\" title=\"讨论\"></a>讨论</h1><ol>\n<li>说说看你们的个人理解</li>\n<li>有什么疑问</li>\n</ol>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://zh.wikipedia.org/wiki/WebRTC\" target=\"_blank\" rel=\"external\">wiki - WebRTC</a>  </li>\n<li><a href=\"https://chromium.googlesource.com/chromium/src/+/master/docs/\" target=\"_blank\" rel=\"external\">Chromium docs</a></li>\n</ul>\n","excerpt":"<p>本文不涉及获编译相关，此类内容请看 <a href=\"/blog/webrtc-build-cmd/\">WebRTC 编译笔记</a></p>\n<h1 id=\"什么是WebRTC\"><a href=\"#什么是WebRTC\" class=\"headerlink\" title=\"什么是WebRTC\"></a>什么是WebRTC</h1><h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><h3 id=\"如何实现一个点对点的音视频通话\"><a href=\"#如何实现一个点对点的音视频通话\" class=\"headerlink\" title=\"如何实现一个点对点的音视频通话\"></a>如何实现一个点对点的音视频通话</h3><ul>\n<li><p>Native 实现<br>摄像头访问、编解码、降噪、信令、数据通讯、渲染、优化</p>\n</li>\n<li><p>web 实现<br>Flash</p>\n</li>\n</ul>\n<h3 id=\"WebRTC是什么\"><a href=\"#WebRTC是什么\" class=\"headerlink\" title=\"WebRTC是什么\"></a>WebRTC是什么</h3><blockquote>\n<p>网页即时通信（英语：Web Real-Time Communication）的缩写，是一个支持网页浏览器进行<strong>实时语音对话或视频对话的API</strong>。它于2011年6月1日开源并在Google、Mozilla、Opera支持下被纳入万维网联盟的<strong>W3C推荐标准</strong>。</p>\n</blockquote>\n<h3 id=\"我们说的WebRTC是\"><a href=\"#我们说的WebRTC是\" class=\"headerlink\" title=\"我们说的WebRTC是\"></a>我们说的WebRTC是</h3><blockquote>\n<p>2010年5月，Google以6820万美元收购VoIP软件开发商Global IP Solutions的<strong>GIPS引擎</strong>，并改为名为“<strong>WebRTC</strong>”。WebRTC使用GIPS引擎，实现了基于网页的视频会议，并支持722，PCM，ILBC，ISAC等编码，同时使用谷歌自家的VP8视频解码器；同时支持RTP/SRTP传输等。</p>\n</blockquote>\n<h2 id=\"现状\"><a href=\"#现状\" class=\"headerlink\" title=\"现状\"></a>现状</h2><h3 id=\"支持\"><a href=\"#支持\" class=\"headerlink\" title=\"支持\"></a>支持</h3><p><a href=\"https://test.webrtc.org/\">检测是否支持</a></p>\n<p><img src=\"/blog/post_images/webrtc_support.png\" alt=\"API框架图\"></p>","more":"<h1 id=\"WebRTC流程\"><a href=\"#WebRTC流程\" class=\"headerlink\" title=\"WebRTC流程\"></a>WebRTC流程</h1><ul>\n<li>API框架图</li>\n</ul>\n<p><img src=\"/blog/post_images/WebRTCNativeAPIsDocument.png\" alt=\"API框架图\"></p>\n<ul>\n<li>发起序列图</li>\n</ul>\n<p><img src=\"/blog/post_images/WebRTCNativeAPIsDocument%20%281%29.png\" alt=\"发起序列图\"></p>\n<ul>\n<li>接受序列图</li>\n</ul>\n<p><img src=\"/blog/post_images/WebRTCNativeAPIsDocument%20%282%29.png\" alt=\"接受序列图\"></p>\n<ul>\n<li>结束序列图</li>\n</ul>\n<p><img src=\"/blog/post_images/WebRTCNativeAPIsDocument%20%283%29.png\" alt=\"结束序列图\"></p>\n<h2 id=\"说说ICE\"><a href=\"#说说ICE\" class=\"headerlink\" title=\"说说ICE\"></a>说说ICE</h2><p><a href=\"https://zh.wikipedia.org/wiki/%E4%BA%92%E5%8B%95%E5%BC%8F%E9%80%A3%E6%8E%A5%E5%BB%BA%E7%AB%8B\">互动式连接建立</a></p>\n<blockquote>\n<p>互动式连接建立是由IETF的MMUSIC工作组开发出来的一种framework，可整合各种NAT穿透技术，如STUN、TURN（Traversal Using Relay NAT，中继NAT实现的穿透）、RSIP（Realm Specific IP，特定域IP）等。该framework可以让SIP的客户端利用各种NAT穿透方式打穿远程的防火墙。</p>\n</blockquote>\n<h3 id=\"NAT-网络地址转换\"><a href=\"#NAT-网络地址转换\" class=\"headerlink\" title=\"NAT 网络地址转换\"></a><a href=\"https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2\">NAT</a> 网络地址转换</h3><blockquote>\n<p>也叫做网络掩蔽或者IP掩蔽（IP masquerading），是一种在IP数据包通过路由器或防火墙时重写来源IP地址或目的IP地址的技术。这种技术被普遍使用在有多台主机但只通过一个公有IP地址访问因特网的私有网络中。根据规范，路由器是不能这样工作的，但它的确是一个方便并得到了广泛应用的技术。当然，NAT也让主机之间的通信变得复杂，导致通信效率的降低。</p>\n</blockquote>\n<ul>\n<li><p>利用 <a href=\"https://pypi.python.org/pypi/pystun\">pystun</a> 检测NAT类型</p>\n</li>\n<li><p>Full cone NAT 全锥型NAT<br><strong>发过，谁都随便发</strong></p>\n<blockquote>\n<p>一旦一个内部地址（iAddr:port1）映射到外部地址（eAddr:port2），所有发自iAddr:port1的包都经由eAddr:port2向外发送。<strong>任意外部主机都能通过给eAddr:port2发包到达iAddr:port1</strong></p>\n</blockquote>\n</li>\n</ul>\n<ul>\n<li><p>Address-Restricted cone NAT 限制锥型NAT<br><strong>发过给你，你随便发</strong></p>\n<blockquote>\n<p>一旦一个内部地址（iAddr:port1）映射到外部地址（eAddr:port2），所有发自iAddr:port1的包都经由eAddr:port2向外发送。<strong>任意外部主机（hostAddr:any）都能通过给eAddr:port2发包到达iAddr:port1的前提是：iAddr:port1之前发送过包到hostAddr:any. “any”也就是说端口不受限制</strong></p>\n</blockquote>\n</li>\n<li><p>Port-Restricted cone NAT 端口限制锥型NAT<br><strong>发过你这个端口，这个端口随便发</strong></p>\n<blockquote>\n<p>一旦一个内部地址（iAddr:port1）映射到外部地址（eAddr:port2），所有发自iAddr:port1的包都经由eAddr:port2向外发送。<strong>一个外部主机（hostAddr:port3）能够发包到达iAddr:port1的前提是：iAddr:port1之前发送过包到hostAddr:port3</strong></p>\n</blockquote>\n</li>\n<li><p>Symmetric NAT 对称型NAT <strong>一一对应</strong></p>\n<blockquote>\n<p>每一个来自相同内部IP与端口，到一个特定目的地地址和端口的请求，都映射到一个独特的外部IP地址和端口。<br><strong>同一内部IP与端口发到不同的目的地和端口的信息包，都使用不同的映射</strong></p>\n</blockquote>\n</li>\n<li><p>提问<br>问题1: A是全锥型NAT（手机），B是端口限制锥型NAT，A、B2个人有直接通讯的可能吗？<br>问题2: C是全锥型NAT，D是对称型NAT(公司)，C、D2个人有直接通讯的可能吗？</p>\n</li>\n</ul>\n<h3 id=\"STUN-穿透\"><a href=\"#STUN-穿透\" class=\"headerlink\" title=\"STUN 穿透\"></a><a href=\"https://zh.wikipedia.org/wiki/STUN\">STUN</a> 穿透</h3><blockquote>\n<p>STUN（Session Traversal Utilities for NAT，NAT会话穿越应用程序）是一种网络协议，它允许位于NAT（或多重NAT）后的客户端找出自己的公网地址，查出自己位于哪种类型的NAT之后以及NAT为某一个本地端口所绑定的Internet端端口。这些信息被用来在两个同时处于NAT路由器之后的主机之间建立UDP通信。该协议由RFC 5389定义。</p>\n</blockquote>\n<p>STUN 算法过程<br><img src=\"/blog/post_images/stun-progress.png\" alt=\"STUN过程\"></p>\n<h3 id=\"TURN-中转\"><a href=\"#TURN-中转\" class=\"headerlink\" title=\"TURN 中转\"></a><a href=\"https://zh.wikipedia.org/wiki/TURN\">TURN</a> 中转</h3><blockquote>\n<p>TURN是一个client-server协议。TURN的NAT穿透方法与STUN类似，都是通过取得应用层中的公有地址达到NAT穿透。但实现TURN client的终端必须在通讯开始前与TURN server进行交互，并要求TURN server产生”relay port”，也就是relayed-transport-address。这时TURN server会建立peer，即远端端点（remote endpoints），开始进行中继（relay）的动作，TURN client利用relay port将资料传送至peer，再由peer转传到另一方的TURN client。</p>\n</blockquote>\n<p>WebRTC源码中包含了STUN、TURN的客户端和服务端实现</p>\n<h1 id=\"我们的目标\"><a href=\"#我们的目标\" class=\"headerlink\" title=\"我们的目标\"></a>我们的目标</h1><ul>\n<li>实现基于WebRTC的，符合“联享家”和“景医卫”需求的，实时音视频框架。</li>\n<li>为什么用WebRTC，因为WebRTC实现很多我们需要的功能：音视频编解码，传输，复用等等，以及它的可靠性高，稳定性好，支持多个平台。</li>\n</ul>\n<h2 id=\"我们要做什么\"><a href=\"#我们要做什么\" class=\"headerlink\" title=\"我们要做什么\"></a>我们要做什么</h2><ul>\n<li>首先，能够实现需求所需要的功能（<strong>废话</strong>）</li>\n<li>一套完整的音视频流程、机制，包括服务端<ul>\n<li>独立（不和具体需求耦合）</li>\n<li>复用（能够重复用于多个项目）</li>\n<li>统一（所有平台尽量统一代码、API，减少维护学习成本）</li>\n<li>稳定</li>\n</ul>\n</li>\n<li>基于一个稳定的WebRTC版本进行开发，持续更新合并新的代码</li>\n<li>实现DTMF收发，H264编解码</li>\n<li>完善的文档、学习资料</li>\n<li>小团队维护，持续迭代</li>\n</ul>\n<h2 id=\"第一阶段目标\"><a href=\"#第一阶段目标\" class=\"headerlink\" title=\"第一阶段目标\"></a>第一阶段目标</h2><ul>\n<li>各个开发人员学习WebRTC开发编译</li>\n<li>完善所有平台H264支持</li>\n<li>部署自己的ICE服务器</li>\n<li>编码实现各个平台的demo app，实现各个平台相互通讯</li>\n<li>输出相关笔记、文档等资料</li>\n</ul>\n<h1 id=\"代码分析\"><a href=\"#代码分析\" class=\"headerlink\" title=\"代码分析\"></a>代码分析</h1><h2 id=\"项目结构\"><a href=\"#项目结构\" class=\"headerlink\" title=\"项目结构\"></a>项目结构</h2><p>根目录 src/</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">├── base</div><div class=\"line\">├── build  编译相关脚本</div><div class=\"line\">├── build_overrides  覆盖编译参数</div><div class=\"line\">├── buildtools</div><div class=\"line\">├── data  测试数据</div><div class=\"line\">├── infra</div><div class=\"line\">├── resources 需要的资源文件</div><div class=\"line\">├── testing</div><div class=\"line\">├── third_party 用到的第三方库ffmpeg/openh264...代码，5G左右</div><div class=\"line\">├── tools</div><div class=\"line\">├── tools-webrtc 一些编译脚本</div><div class=\"line\">└── webrtc 核心代码</div></pre></td></tr></table></figure>\n<p>核心代码目录 src/webrtc</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div></pre></td><td class=\"code\"><pre><div class=\"line\">├── api</div><div class=\"line\">├── audio</div><div class=\"line\">├── base</div><div class=\"line\">├── call</div><div class=\"line\">├── common_audio</div><div class=\"line\">├── common_video</div><div class=\"line\">│   ├── h264</div><div class=\"line\">│   ├── include</div><div class=\"line\">│   └── libyuv</div><div class=\"line\">├── examples</div><div class=\"line\">│   ├── androidapp Android版AppRTCMbile</div><div class=\"line\">│   ├── androidjunit</div><div class=\"line\">│   ├── androidtests</div><div class=\"line\">│   ├── objc  iOS版AppRTCMbile</div><div class=\"line\">│   ├── peerconnection</div><div class=\"line\">│   ├── relayserver</div><div class=\"line\">│   ├── stunprober</div><div class=\"line\">│   ├── stunserver</div><div class=\"line\">│   └── turnserver</div><div class=\"line\">├── logging</div><div class=\"line\">├── media</div><div class=\"line\">├── modules</div><div class=\"line\">│   ├── audio_coding</div><div class=\"line\">│   ├── audio_conference_mixer</div><div class=\"line\">│   ├── audio_device</div><div class=\"line\">│   ├── audio_mixer</div><div class=\"line\">│   ├── audio_processing</div><div class=\"line\">│   ├── bitrate_controller</div><div class=\"line\">│   ├── congestion_controller</div><div class=\"line\">│   ├── desktop_capture</div><div class=\"line\">│   ├── include</div><div class=\"line\">│   ├── media_file</div><div class=\"line\">│   ├── pacing</div><div class=\"line\">│   ├── remote_bitrate_estimator</div><div class=\"line\">│   ├── rtp_rtcp</div><div class=\"line\">│   ├── utility</div><div class=\"line\">│   ├── video_capture</div><div class=\"line\">│   ├── video_coding</div><div class=\"line\">│   └── video_processing</div><div class=\"line\">├── p2p</div><div class=\"line\">│   ├── base</div><div class=\"line\">│   ├── client</div><div class=\"line\">│   ├── quic</div><div class=\"line\">│   └── stunprober</div><div class=\"line\">├── pc</div><div class=\"line\">├── sdk</div><div class=\"line\">│   ├── android  Android sdk封转</div><div class=\"line\">│   └── objc iOS sdk封转</div><div class=\"line\">├── stats</div><div class=\"line\">├── system_wrappers</div><div class=\"line\">│   ├── include</div><div class=\"line\">│   └── source</div><div class=\"line\">├── test</div><div class=\"line\">├── tools</div><div class=\"line\">├── video</div><div class=\"line\">└── voice_engine</div></pre></td></tr></table></figure>\n<h2 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h2><ul>\n<li>gn 生成编译脚本等</li>\n<li>ninja 编译工具</li>\n<li>不论是 Xcode 还是 visual studio 最终还是调用了ninja进行编译</li>\n<li>增加、删除代码需要修改对应的 BUILD.gn 文件</li>\n<li>参考chromium的编译    <ul>\n<li><a href=\"https://chromium.googlesource.com/chromium/src/+/master/docs/ios/build_instructions.md#Setting-up-the-build\">iOS 编译</a></li>\n<li><a href=\"https://chromium.googlesource.com/chromium/src/+/master/docs/android_build_instructions.md\">Android 编译</a></li>\n<li><a href=\"https://chromium.googlesource.com/chromium/src/+/master/docs/windows_build_instructions.md\">Windows 编译</a></li>\n</ul>\n</li>\n</ul>\n<p>具体查看 <a href=\"/blog/webrtc-build-cmd/\">WebRTC 编译笔记</a></p>\n<h2 id=\"怎么看代码\"><a href=\"#怎么看代码\" class=\"headerlink\" title=\"怎么看代码\"></a>怎么看代码</h2><ul>\n<li><a href=\"https://chromium.googlesource.com/chromium/src/+/master/docs/android_studio.md\">Android Studio</a> + <a href=\"https://groups.google.com/forum/#!topic/discuss-webrtc/b7yQjvPLHaM\">AppRTCMobile can now be developed in Android Studio</a> + <a href=\"https://code.visualstudio.com/\">Visual Studi Code</a></li>\n<li>Xcode 加编译参数 –ide=xcode</li>\n<li>Visual Studio 加编译参数 –ide=vs</li>\n</ul>\n<h2 id=\"代码管理\"><a href=\"#代码管理\" class=\"headerlink\" title=\"代码管理\"></a>代码管理</h2><ul>\n<li>同步代码 <code>gclient sync</code></li>\n<li>同步特点版本代码 <code>gclient sync -r git_commit_revision</code></li>\n<li>创建分支 <code>git checkout -b linzq/dev/57 remotes/branch-heads/57</code></li>\n<li>代码、分支管理建议用sourcetree + gitFlow流程</li>\n<li>翻墙建议用 shadowsocks，然后 proxifier 或者 proxyCap 来做全局代理</li>\n<li><a href=\"https://build.chromium.org/p/client.webrtc/waterfall\">webrtc CI日志</a> 当你不确定checkout的版本是否有问题的时候，看看CI日志的编译情况，可以减少很多查错的时间</li>\n<li><a href=\"https://groups.google.com/forum/#!forum/discuss-webrtc\">webrtc forum</a> 版本更新、有疑问这里找</li>\n<li><a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001373962845513aefd77a99f4145f0a2c7a7ca057e7570000\">git 介绍</a></li>\n</ul>\n<h2 id=\"典型模块\"><a href=\"#典型模块\" class=\"headerlink\" title=\"典型模块\"></a>典型模块</h2><ul>\n<li><p>API <a href=\"https://chromium.googlesource.com/external/webrtc/+/master/webrtc/sdk/android/\">Java libjingle_peerconnection_java</a> <strong><a href=\"https://chromium.googlesource.com/external/webrtc/+/master/webrtc/sdk/objc/\">objc rtc_sdk_framework</a></strong>  <strong><a href=\"https://chromium.googlesource.com/external/webrtc/+/master/webrtc/pc/\">C++ libjingle_peerconnection</a></strong></p>\n</li>\n<li><p><a href=\"https://chromium.googlesource.com/external/webrtc/+/master/webrtc/modules/video_coding/codecs/h264/\">H264</a></p>\n</li>\n</ul>\n<h2 id=\"演示\"><a href=\"#演示\" class=\"headerlink\" title=\"演示\"></a>演示</h2><ul>\n<li><p>Android <strong><a href=\"https://chromium.googlesource.com/external/webrtc/+/master/tools-webrtc/android/build_aar.py\">aar包</a></strong>  <strong><a href=\"https://chromium.googlesource.com/external/webrtc/+/master/webrtc/examples/androidapp/\">AppRTCMobile</a></strong></p>\n</li>\n<li><p>iOS <strong><a href=\"https://chromium.googlesource.com/external/webrtc/+/master/tools-webrtc/ios/build_ios_libs.py\">FAT库</a></strong>、<strong><a href=\"https://chromium.googlesource.com/external/webrtc/+/master/webrtc/examples/objc/AppRTCMobile/\">AppRTCMobile</a></strong></p>\n</li>\n<li><p>Windows <strong><a href=\"https://chromium.googlesource.com/external/webrtc/+/master/webrtc/video/video_loopback.cc\">videoloopback</a></strong></p>\n</li>\n</ul>\n<blockquote>\n<p>遇到有坑的地方，记得做好笔记，<strong>避免自己再次踩坑、后人受益</strong></p>\n</blockquote>\n<h1 id=\"H264与WebRTC的历史\"><a href=\"#H264与WebRTC的历史\" class=\"headerlink\" title=\"H264与WebRTC的历史\"></a>H264与WebRTC的历史</h1><ul>\n<li>15年左右的版本是不只是H264的编解码的</li>\n<li>16年增加了openh264实现编码，沿用原来的ffmpeg代码来实现解码</li>\n<li>最新的是:<ul>\n<li>非android/iOS已经实现了软编解码(openh264+ffmepg)</li>\n<li>iOS 使用了硬编解码</li>\n<li>Android针对高通、三星平台使用硬编解码，其他不支持</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"初步计划\"><a href=\"#初步计划\" class=\"headerlink\" title=\"初步计划\"></a>初步计划</h1><ol>\n<li>3月份，所有成员能够<strong>编译、调试代码</strong></li>\n<li>4月份，初步完成各个平台的<strong>Demo APP，ICE服务器部署</strong></li>\n<li>5月份，初步 完成可以与联享家APP、门口机APP<strong>联调的版本</strong></li>\n<li>6月份，完成第一个<strong>基本的稳定版本</strong>（各个平台）</li>\n<li>7月份，<strong>通用的稳定版本</strong></li>\n</ol>\n<h1 id=\"怎么做\"><a href=\"#怎么做\" class=\"headerlink\" title=\"怎么做\"></a>怎么做</h1><ul>\n<li>Just Do it</li>\n<li>把 <a href=\"http://www.webrtc.org\">webrtc.org</a> 上面的内容都仔细看看，会有很多收获的</li>\n</ul>\n<h1 id=\"讨论\"><a href=\"#讨论\" class=\"headerlink\" title=\"讨论\"></a>讨论</h1><ol>\n<li>说说看你们的个人理解</li>\n<li>有什么疑问</li>\n</ol>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://zh.wikipedia.org/wiki/WebRTC\">wiki - WebRTC</a>  </li>\n<li><a href=\"https://chromium.googlesource.com/chromium/src/+/master/docs/\">Chromium docs</a></li>\n</ul>"},{"title":"Highcharts Demo","date":"2016-07-29T06:40:34.000Z","_content":"\n最近在项目中用到了highcharts来实现图表功能，做了几个demo给相关的同事\n\n* [最近7日数据](/demo/charts/charts_demo.html)\n\n<iframe style=\"border:none;width:100%;height:250px;\" src=\"/demo/charts/charts_demo.html\"></iframe>\n\n* [血压数据](/demo/bp-charts/bp-charts.html?show=14&amp;dl=1)\n\n<iframe style=\"border:none;width:100%;height:250px;\" src=\"/demo/bp-charts/bp-charts.html?show=14&amp;dl=1\"></iframe>\n\n* [血氧饱和度](/demo/bp-charts/ss-charts.html?show=21&type=%E8%A1%80%E6%B0%A7%E9%A5%B1%E5%92%8C%E5%BA%A6)\n\n<iframe style=\"border:none;width:100%;height:250px;\" src=\"/demo/bp-charts/ss-charts.html?show=21&type=%E8%A1%80%E6%B0%A7%E9%A5%B1%E5%92%8C%E5%BA%A6\"></iframe>\n\n","source":"_posts/highcharts-2-demo.md","raw":"\ntitle: Highcharts Demo\ndate: 2016-07-29 14:40:34\ntags:\n  - Highcharts\n  - Demo\n  - 图表\ncategories:\n  - Demo\n---\n\n最近在项目中用到了highcharts来实现图表功能，做了几个demo给相关的同事\n\n* [最近7日数据](/demo/charts/charts_demo.html)\n\n<iframe style=\"border:none;width:100%;height:250px;\" src=\"/demo/charts/charts_demo.html\"></iframe>\n\n* [血压数据](/demo/bp-charts/bp-charts.html?show=14&amp;dl=1)\n\n<iframe style=\"border:none;width:100%;height:250px;\" src=\"/demo/bp-charts/bp-charts.html?show=14&amp;dl=1\"></iframe>\n\n* [血氧饱和度](/demo/bp-charts/ss-charts.html?show=21&type=%E8%A1%80%E6%B0%A7%E9%A5%B1%E5%92%8C%E5%BA%A6)\n\n<iframe style=\"border:none;width:100%;height:250px;\" src=\"/demo/bp-charts/ss-charts.html?show=21&type=%E8%A1%80%E6%B0%A7%E9%A5%B1%E5%92%8C%E5%BA%A6\"></iframe>\n\n","slug":"highcharts-2-demo","published":1,"updated":"2016-10-28T06:59:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0udktrd0006z0uut0k0vfhm","content":"<p>最近在项目中用到了highcharts来实现图表功能，做了几个demo给相关的同事</p>\n<ul>\n<li><a href=\"/demo/charts/charts_demo.html\">最近7日数据</a></li>\n</ul>\n<iframe style=\"border:none;width:100%;height:250px;\" src=\"/demo/charts/charts_demo.html\"></iframe>\n\n<ul>\n<li><a href=\"/demo/bp-charts/bp-charts.html?show=14&amp;dl=1\">血压数据</a></li>\n</ul>\n<iframe style=\"border:none;width:100%;height:250px;\" src=\"/demo/bp-charts/bp-charts.html?show=14&amp;dl=1\"></iframe>\n\n<ul>\n<li><a href=\"/demo/bp-charts/ss-charts.html?show=21&amp;type=%E8%A1%80%E6%B0%A7%E9%A5%B1%E5%92%8C%E5%BA%A6\">血氧饱和度</a></li>\n</ul>\n<iframe style=\"border:none;width:100%;height:250px;\" src=\"/demo/bp-charts/ss-charts.html?show=21&type=%E8%A1%80%E6%B0%A7%E9%A5%B1%E5%92%8C%E5%BA%A6\"></iframe>\n\n","excerpt":"","more":"<p>最近在项目中用到了highcharts来实现图表功能，做了几个demo给相关的同事</p>\n<ul>\n<li><a href=\"/demo/charts/charts_demo.html\">最近7日数据</a></li>\n</ul>\n<iframe style=\"border:none;width:100%;height:250px;\" src=\"/demo/charts/charts_demo.html\"></iframe>\n\n<ul>\n<li><a href=\"/demo/bp-charts/bp-charts.html?show=14&amp;dl=1\">血压数据</a></li>\n</ul>\n<iframe style=\"border:none;width:100%;height:250px;\" src=\"/demo/bp-charts/bp-charts.html?show=14&amp;dl=1\"></iframe>\n\n<ul>\n<li><a href=\"/demo/bp-charts/ss-charts.html?show=21&amp;type=%E8%A1%80%E6%B0%A7%E9%A5%B1%E5%92%8C%E5%BA%A6\">血氧饱和度</a></li>\n</ul>\n<iframe style=\"border:none;width:100%;height:250px;\" src=\"/demo/bp-charts/ss-charts.html?show=21&type=%E8%A1%80%E6%B0%A7%E9%A5%B1%E5%92%8C%E5%BA%A6\"></iframe>\n\n"},{"title":"浅谈Hybrid App","date":"2016-07-18T03:44:06.000Z","_content":"\n# 浅谈Hybrid App开发 \n> 我们常说的：在Android、iOS上的用H5来做界面\n\n我们把档次稍微提高一下：\n> 今天和大家分享的是** Hybrid App 的开发**\n\n**Hybrid App开发**\n\n* 它不是手机网页开发、不是html、不是h5，但又都是\n* 做这个需要懂iOS、Android，还要懂html、js、css\n* 最麻烦的还是兼容性，主要的工作还是在web开发上\n* 已是主流了\n \n![](/blog/post_images/hybrid-app-brief-talk-01.png)\n\n# 为什么要谈Hybrid App开发\n* ## 我们现在的App就是Hybrid App\n  > 所以我们做得比较简单\n  \n* ## 主流，基本上现在常用的App都是Hybrid App\n  > AppStore、Instagram、微信(公众号、钱包)、支付宝（城市服务、电影、）、美团、滴滴、京东、汽车之家、联通手机营业厅……\n  \n* ## 快速迭代，在不更新APP的情况下，修改、新增功能\n  > 例如：我们的新版首页，只要在服务器更新了，我的APP可以很快增加一个弱交互的模块；发现一些bug，也可以直接热修复\n  \n* ## 开发统一，不管是Android、iOS，甚至是WP都可以统一开发，减少各个平台功能不统一的问题\n  > 1.原生开发专注于底层核心模块的开发、优化，封装好与web的交互接口。web实现功能模块后，所有端都无需重新开发\n  \n  > 2.例如：视频直播。原生开发专注与视频推流、视频播放、聊天功能的开发、优化，消息推送等，用web实现直播列表、直播创建等展示、数据编辑功能开发。相互之间定义好调用接口即可。\n  \n* ## 总结我们现在混合开发发现的问题，优化我们的App \n  > 我们可以做得更好\n\n<!-- more -->\n\n# 常见App开发模式\n\n## Native App\n> Native App，原生APP，一般依托于操作系统，有很强的交互，是一个完整的App，可拓展性强。需要用户下载安装使用。**原生开发人员数量众多，技术已成熟**。Android用Java语言，开发环境用android studio或Eclips等IDE；iOS用oc、swift，Mac+Xcode开发环境；WP用C#/C++，windows+Visual studio环境。\n\n### 优点\n\n> 1. 性能好，用户体验最贴近系统\n> 2. 能够访问本地资源（通讯录，相册、存储空间……）\n> 3. 能够实现大部分的功能\n\n### 缺点：\n\n> 1. 无法跨平台：Android和iOS都需要开发各自平台的版本——开发成本高；\n> 2. 升级麻烦：每次升级都要下载安装包，Android还好，反正不需要审核，下载就下载吧，但iOS就麻烦了，发布每个版本还得经过App Store的审核，这导致第三个问题；\n> 3. Android和iOS很难同步发布。\n\n\n## Web App\n> 基本上H5写出的App，不需要下载安装。类似于现在所说的轻应用。生存在浏览器中的应用，基本上可以说是触屏版的网页应用。但也有电脑网页版的Web App，例如微软的office 365，Gmail等。\n\n### 优点\n> 1. 无需升级、更新快\n> 2. 同时跨多个平台、多个端\n> 3. 用户使用方便\n\n### 缺点\n> 1. 体验较差、设计受限制诸多\n> 2. 设计受限制诸多\n> 2. 无法获取系统级别的通知，提醒，动效等等\n\n\n## Hybrid App\n> 半原生半Web的混合类App。需要下载安装，看上去类似Native App，部分是用WebView，访问的内容是Web。但**涉及到的技术成本、开发成本、学习成本比Web App高**，它综合了**Web App的开发速度和Native App的高性能体验**。\n\n> 不管是Native还是Web，都具有各自的UI和布局能力、数据交互能力和脚本调用能力等。所以，**Hybrid App更是一种开发模式，如何有效混合使用是个很大的技巧**。\n\n## 特性对比\n> \n|   | Native | Hybrid | web |\n| -- | -- | -- | -- |\n| 用户体验 | 很好 | 好 | 一般 |\n| 图像渲染 | 本地API | html、Canvas、css | 混合 |\n| 性能 | 非常快 | 快 | 慢 |\n| 跨平台成本 | 高 | 合理 | 低 |\n| 碎片化 | **非常严重** | 严重 | 严重 |\n| 版本维护 | 保守 | 低延时 | 开放 |\n| 网络要求 | 支持离线 | 大部分依赖网络 | 完全依赖网络 |\n\n<!--\n## 技术特性对比\n![技术特性](duibi.png)\n-->\n\n\n# Hybrid App误区\n\n## 为了H5而Hybrid App\n\nHTML5在Hybrid App模式中是一个最常被提起的概念。HTML确实强大，但HTML5处在目前的发展阶段，受到浏览器兼容性和手机硬件性能水平的影响，它所能提供的功能与Native仍然有很大差距。\n\n要明确一款App采用Hybrid App模式的根本原因是什么。**作为一款App其最根本的功能是满足使用者的需求，而并不是服务某项新技术**。\n\n## 忽略关键因素\n\n谈到Hybrid App我们更多提及的是它有诸多优点，会被忽略的一些因素少被提起，**这些因素又恰恰经常是一个Web页面能否正常运行在App中的决定性因素**。\n\n> 无论是iOS还是Android，最敏感的一个问题莫过于内存管理，而在Web开发则对这个问题没有过多注意。\n\n在网络环境方面，App在Wifi、3G的切换，基站变化等诸多因素都会导致网络间歇性断开，但Web开发总是默认有一个稳定的网络环境,因此在对于不稳定网络环境问题的处理上也有所欠缺。\n\n> **没有明确的对于低速网络或不稳定网络访问的处理，在很多情况下这些页面的用户体验是很差的。**\n\n## 富交互导致体验差\n\n1. 平台(Android/iOS/WP/PC)默认交互习惯不一致的体验。\n2. 同样功能和Native界面存在的体验差距。\n> 无论在Android还是iOS平台上，都有各自的一套交互习惯，包括视觉风格，界面切换，操作习惯等，与Web习惯完全不同。\n> \n> 当然Web方式也可模拟Native的交互方式，但**这样的模拟首先提高了开发成本，有悖于最初的高效原则，从效果上看，也很难达到Native的流畅性**。\n\n## 跨平台\n1. 一次开发，跨平台运行是Web的优势，这也是很多App采用Hybrid模式的重要原因之一。但是**兼容性绝对是一个不容忽视的问题。**\n2. 无论是机型、版本众多的Android，还是相对统一的iOS,不同版本之间的差异还是不容忽视的。\n\nHybrid App方案是一把双刃剑，一方面它平衡了Native App和Web页面的优缺点，一定程度上解决了迭代慢，版本依赖的问题，但另一个方面**过度依赖Hybrid方案会造成Web前端开发成本快速上升，甚至造成App整体体验下降，甚至造成功能缺失。**\n\n## 注意\n> 不要为了H5而Hybrid，控制好App中Native与Web的边界是重中之重。\n\n\n# 常见的Hybrid App开发解决方案\n\n## Cordova/PhoneGap\n2010年将PhoneGap代码贡献给Apache软件基金（ASF），PhoneGap核心引擎成为新的开源项目Cordova。\n\n提供Hybrid API，可由JavaScript直接调用诸如加速度、摄像头、指南针、GPS、联系人等系统级API，完整的API列表请访问PhoneGap API Reference。\n侧重于JS与原生的交互，**开发简单，但性能差**，如触摸时反应不灵敏。\n\n用户列表：[维基百科客户端](https://github.com/wikimedia/WikipediaMobile) [LinkedIn iPad客户端](https://mobile.linkedin.com/zh-cn) \n\n## Ionic Framework\n\n我们现在正在用\n\n## MUI和HTML5+ SDK\n\n> 定位：最接近原生体验的移动App的UI框架 [mui产品概述](http://ask.dcloud.net.cn/docs/#http://ask.dcloud.net.cn/article/91)\n> \n> 以iOS平台UI为基础，补充部分Android平台特有的UI控件\n\nHTML5+ SDK\n> 1. 使用HTML5+ SDK实现本地打包。\n1. 通过原生代码扩展HTML5+ runtime的功能。\n1. 在现有原生项目中使用HTML5+ SDK**替换原有的webview，以获得更强的web增强表现**。\n>  [HTML5+ SDK 功能概述](http://ask.dcloud.net.cn/docs/#http://ask.dcloud.net.cn/article/104)\n\n用户列表：360生活助手 [明道OA](https://itunes.apple.com/cn/app/id468630782) [会留学](https://itunes.apple.com/cn/app/hui-liu-xue-kou-dai-li-liu/id1044958285?mt=8)\n\n## React Native\n\n[React Native @ github](http://facebook.github.io/react-native/)\n\nFacebook出品，初次学习成本很高，但优势是“Learn once, write anywhere”。React Native仍然不完善。iOS版本比较完善，Android版本还是实验性产品。\n\n优势：\n1. 实际上没有用到Webview，彻底摆脱了Webview让人不爽的交互和性能问题\n2. 有较强的扩展性，这是因为Native端提供的是基本控件，JS可以自由组合使用\n3. 可以直接使用Native原生的「牛逼」动画（在FB Group这个app里面，面板滑出带一点果冻弹动，面板基于某个点展开这种动画随处可见，这种动画用Native code来做小菜一碟，但是用Web来做就难上加难）。\n\n\n# 我们怎么做\n\n## 目标\n\n1. 能够快速更新，但不需要更新App\n2. 减少不同平台重复开发的工作量\n3. 尽可能在UX上贴近原生\n4. 用户无感知，用户不会感觉到就是打开一个网页\n\n## 用户体验\n\n1. 流畅性一定要好\n2. 完美兼容Android4.0以上、iOS7.0以上系统\n2. 不要出现这种情况\n   * 网络不好的情况下完全空白的现实 ![空白](/blog/post_images/hybrid-app-brief-talk-02.jpg)\n * 404，502之类的不直观提示   ![502](/blog/post_images/hybrid-app-brief-talk-03.png)\n\n\n## 缓存\n\n> 1. 使用http请求头部的[If-Modified-Since](http://www.cnblogs.com/zh2000g/archive/2010/03/22/1692002.html)、[If-None-Match](http://baike.baidu.com/item/ETag)\n> ；使用http响应头部的Last-Modify、Cache-Control\n> 2. 重要的界面，App本身最好缓存一份，避免网络原因造成的界面空白\n> 3. App端的缓存机制尽量按http响应头里参数来设置，除非用户强制刷新\n> 4. 大的第三方js库、字体最好App本身就已经集成，不需要从网络下载\n> 5. 对于一些不常变化的文件，可以集成在App内\n<!--  6. 使用*suppressesIncrementalRendering:YES*  -->\n\n## 这样做\n\n1. 现阶段只针对交互较少的节目才考虑试用web实现，\n1. 使用○转圈圈之类的加载动画代替进度条加载，这样会感觉更像原生\n1. 将一些App本身的业务封装好，以统一的js方法暴露给web，并形成API文档。这样web能够通过这些API文档，实现更多的功能，达到App不更新的情况下，实现更多需求。\n> 例如：是否登录is_login；账号类型account_type；跳转登录do_login；跳转到某个分类的视频列表：show_video_categary，等等\n\n1. 引入JSBridge实现Hybrid API（iOS:[WebViewJavascriptBridge](https://github.com/marcuswestin/WebViewJavascriptBridge) / Android:[jsBridge](https://github.com/lzyzsd/JsBridge)）简化原生和web之间的交互调用 \n\n1. 在Url里面定义好需要原生展示的内容、或执行的方法，例如： \n> Url: **loadData.php?id=abcd&title=Title&title_buttons=Add**\n> \n> 那么当App加载这个地址时服务器会返回**id=abcd**的数据，同时App检测到title和buttons参数，会显示**Title标题**，然后在标题栏上加上**新增按钮**。这些都不用等到网页加载出来。\n![加载中](/blog/post_images/hybrid-app-brief-talk-04.png)\n1. 在加载的过程中把webview隐藏，等到web加载成功后，在通过动画效果之类的把webview展示出来，避免用户看到整个web的渲染过程。特别是html已经渲染出来，但是css或js还没有完成，用户看到的就是一个**不正常的界面**了。\n![渲染中](/blog/post_images/hybrid-app-brief-talk-05.jpg)\n\n1. App中web部分的实现，要更多考虑细节的，因为web实现的界面，天生就缺乏一些原生自带的特性。细节处理不到位，会显得App很粗糙。\n\n1. **App必须更多的考虑用户网络不稳定的问题**，并针对性的在模拟不同网络环境去测试、优化Hybrid模块的功能。\n\n\n# 参考\n1. [真正的Hybrid APP没你想的那么简单](http://software.it168.com/a2014/0925/1669/000001669385.shtml)\n2. [别闯进Hybrid App的误区](http://www.infoq.com/cn/articles/hybridapp-misunderstanding/)\n3. [在微信还没统一所有应用前，Hybrid APP或许会先吃掉你的整个手机](http://36kr.com/p/5036836.html)\n4. [聊聊WEB APP、HYBRID APP与NATIVE APP的设计差异](http://mux.baidu.com/?p=6750)\n5. [混合模式(Hybrid)App开发概述](http://www.cnblogs.com/yeahui/p/5026587.html)\n6. [如何区别一个 App 是 Native App， Web App 还是 Hybrid app？](https://www.zhihu.com/question/23622875)\n7. [淘宝app属于hybrid app吗？](https://www.zhihu.com/question/28469978)\n8. [how to build fast hybrid ios apps](http://sssslide.com/speakerdeck.com/lokimeyburg/how-to-build-fast-hybrid-ios-apps)\n9. [跨终端Web之Hybrid App](http://www.infoq.com/cn/articles/hybrid-app)\n10. [如何评价 React Native？](https://www.zhihu.com/question/27852694)\n11. [豆瓣混合开发实践](http://lincode.github.io/Hybrid-Rexxar)\n12. [Hybrid APP架构设计思路](https://segmentfault.com/a/1190000004263182)\n","source":"_posts/hybrid-app-brief-talk.md","raw":"title: 浅谈Hybrid App\ndate: 2016-07-18 11:44:06\ntags:\n  - Hybrid\n  - H5\n  - 混合开发\ncategories:\n  - App\n---\n\n# 浅谈Hybrid App开发 \n> 我们常说的：在Android、iOS上的用H5来做界面\n\n我们把档次稍微提高一下：\n> 今天和大家分享的是** Hybrid App 的开发**\n\n**Hybrid App开发**\n\n* 它不是手机网页开发、不是html、不是h5，但又都是\n* 做这个需要懂iOS、Android，还要懂html、js、css\n* 最麻烦的还是兼容性，主要的工作还是在web开发上\n* 已是主流了\n \n![](/blog/post_images/hybrid-app-brief-talk-01.png)\n\n# 为什么要谈Hybrid App开发\n* ## 我们现在的App就是Hybrid App\n  > 所以我们做得比较简单\n  \n* ## 主流，基本上现在常用的App都是Hybrid App\n  > AppStore、Instagram、微信(公众号、钱包)、支付宝（城市服务、电影、）、美团、滴滴、京东、汽车之家、联通手机营业厅……\n  \n* ## 快速迭代，在不更新APP的情况下，修改、新增功能\n  > 例如：我们的新版首页，只要在服务器更新了，我的APP可以很快增加一个弱交互的模块；发现一些bug，也可以直接热修复\n  \n* ## 开发统一，不管是Android、iOS，甚至是WP都可以统一开发，减少各个平台功能不统一的问题\n  > 1.原生开发专注于底层核心模块的开发、优化，封装好与web的交互接口。web实现功能模块后，所有端都无需重新开发\n  \n  > 2.例如：视频直播。原生开发专注与视频推流、视频播放、聊天功能的开发、优化，消息推送等，用web实现直播列表、直播创建等展示、数据编辑功能开发。相互之间定义好调用接口即可。\n  \n* ## 总结我们现在混合开发发现的问题，优化我们的App \n  > 我们可以做得更好\n\n<!-- more -->\n\n# 常见App开发模式\n\n## Native App\n> Native App，原生APP，一般依托于操作系统，有很强的交互，是一个完整的App，可拓展性强。需要用户下载安装使用。**原生开发人员数量众多，技术已成熟**。Android用Java语言，开发环境用android studio或Eclips等IDE；iOS用oc、swift，Mac+Xcode开发环境；WP用C#/C++，windows+Visual studio环境。\n\n### 优点\n\n> 1. 性能好，用户体验最贴近系统\n> 2. 能够访问本地资源（通讯录，相册、存储空间……）\n> 3. 能够实现大部分的功能\n\n### 缺点：\n\n> 1. 无法跨平台：Android和iOS都需要开发各自平台的版本——开发成本高；\n> 2. 升级麻烦：每次升级都要下载安装包，Android还好，反正不需要审核，下载就下载吧，但iOS就麻烦了，发布每个版本还得经过App Store的审核，这导致第三个问题；\n> 3. Android和iOS很难同步发布。\n\n\n## Web App\n> 基本上H5写出的App，不需要下载安装。类似于现在所说的轻应用。生存在浏览器中的应用，基本上可以说是触屏版的网页应用。但也有电脑网页版的Web App，例如微软的office 365，Gmail等。\n\n### 优点\n> 1. 无需升级、更新快\n> 2. 同时跨多个平台、多个端\n> 3. 用户使用方便\n\n### 缺点\n> 1. 体验较差、设计受限制诸多\n> 2. 设计受限制诸多\n> 2. 无法获取系统级别的通知，提醒，动效等等\n\n\n## Hybrid App\n> 半原生半Web的混合类App。需要下载安装，看上去类似Native App，部分是用WebView，访问的内容是Web。但**涉及到的技术成本、开发成本、学习成本比Web App高**，它综合了**Web App的开发速度和Native App的高性能体验**。\n\n> 不管是Native还是Web，都具有各自的UI和布局能力、数据交互能力和脚本调用能力等。所以，**Hybrid App更是一种开发模式，如何有效混合使用是个很大的技巧**。\n\n## 特性对比\n> \n|   | Native | Hybrid | web |\n| -- | -- | -- | -- |\n| 用户体验 | 很好 | 好 | 一般 |\n| 图像渲染 | 本地API | html、Canvas、css | 混合 |\n| 性能 | 非常快 | 快 | 慢 |\n| 跨平台成本 | 高 | 合理 | 低 |\n| 碎片化 | **非常严重** | 严重 | 严重 |\n| 版本维护 | 保守 | 低延时 | 开放 |\n| 网络要求 | 支持离线 | 大部分依赖网络 | 完全依赖网络 |\n\n<!--\n## 技术特性对比\n![技术特性](duibi.png)\n-->\n\n\n# Hybrid App误区\n\n## 为了H5而Hybrid App\n\nHTML5在Hybrid App模式中是一个最常被提起的概念。HTML确实强大，但HTML5处在目前的发展阶段，受到浏览器兼容性和手机硬件性能水平的影响，它所能提供的功能与Native仍然有很大差距。\n\n要明确一款App采用Hybrid App模式的根本原因是什么。**作为一款App其最根本的功能是满足使用者的需求，而并不是服务某项新技术**。\n\n## 忽略关键因素\n\n谈到Hybrid App我们更多提及的是它有诸多优点，会被忽略的一些因素少被提起，**这些因素又恰恰经常是一个Web页面能否正常运行在App中的决定性因素**。\n\n> 无论是iOS还是Android，最敏感的一个问题莫过于内存管理，而在Web开发则对这个问题没有过多注意。\n\n在网络环境方面，App在Wifi、3G的切换，基站变化等诸多因素都会导致网络间歇性断开，但Web开发总是默认有一个稳定的网络环境,因此在对于不稳定网络环境问题的处理上也有所欠缺。\n\n> **没有明确的对于低速网络或不稳定网络访问的处理，在很多情况下这些页面的用户体验是很差的。**\n\n## 富交互导致体验差\n\n1. 平台(Android/iOS/WP/PC)默认交互习惯不一致的体验。\n2. 同样功能和Native界面存在的体验差距。\n> 无论在Android还是iOS平台上，都有各自的一套交互习惯，包括视觉风格，界面切换，操作习惯等，与Web习惯完全不同。\n> \n> 当然Web方式也可模拟Native的交互方式，但**这样的模拟首先提高了开发成本，有悖于最初的高效原则，从效果上看，也很难达到Native的流畅性**。\n\n## 跨平台\n1. 一次开发，跨平台运行是Web的优势，这也是很多App采用Hybrid模式的重要原因之一。但是**兼容性绝对是一个不容忽视的问题。**\n2. 无论是机型、版本众多的Android，还是相对统一的iOS,不同版本之间的差异还是不容忽视的。\n\nHybrid App方案是一把双刃剑，一方面它平衡了Native App和Web页面的优缺点，一定程度上解决了迭代慢，版本依赖的问题，但另一个方面**过度依赖Hybrid方案会造成Web前端开发成本快速上升，甚至造成App整体体验下降，甚至造成功能缺失。**\n\n## 注意\n> 不要为了H5而Hybrid，控制好App中Native与Web的边界是重中之重。\n\n\n# 常见的Hybrid App开发解决方案\n\n## Cordova/PhoneGap\n2010年将PhoneGap代码贡献给Apache软件基金（ASF），PhoneGap核心引擎成为新的开源项目Cordova。\n\n提供Hybrid API，可由JavaScript直接调用诸如加速度、摄像头、指南针、GPS、联系人等系统级API，完整的API列表请访问PhoneGap API Reference。\n侧重于JS与原生的交互，**开发简单，但性能差**，如触摸时反应不灵敏。\n\n用户列表：[维基百科客户端](https://github.com/wikimedia/WikipediaMobile) [LinkedIn iPad客户端](https://mobile.linkedin.com/zh-cn) \n\n## Ionic Framework\n\n我们现在正在用\n\n## MUI和HTML5+ SDK\n\n> 定位：最接近原生体验的移动App的UI框架 [mui产品概述](http://ask.dcloud.net.cn/docs/#http://ask.dcloud.net.cn/article/91)\n> \n> 以iOS平台UI为基础，补充部分Android平台特有的UI控件\n\nHTML5+ SDK\n> 1. 使用HTML5+ SDK实现本地打包。\n1. 通过原生代码扩展HTML5+ runtime的功能。\n1. 在现有原生项目中使用HTML5+ SDK**替换原有的webview，以获得更强的web增强表现**。\n>  [HTML5+ SDK 功能概述](http://ask.dcloud.net.cn/docs/#http://ask.dcloud.net.cn/article/104)\n\n用户列表：360生活助手 [明道OA](https://itunes.apple.com/cn/app/id468630782) [会留学](https://itunes.apple.com/cn/app/hui-liu-xue-kou-dai-li-liu/id1044958285?mt=8)\n\n## React Native\n\n[React Native @ github](http://facebook.github.io/react-native/)\n\nFacebook出品，初次学习成本很高，但优势是“Learn once, write anywhere”。React Native仍然不完善。iOS版本比较完善，Android版本还是实验性产品。\n\n优势：\n1. 实际上没有用到Webview，彻底摆脱了Webview让人不爽的交互和性能问题\n2. 有较强的扩展性，这是因为Native端提供的是基本控件，JS可以自由组合使用\n3. 可以直接使用Native原生的「牛逼」动画（在FB Group这个app里面，面板滑出带一点果冻弹动，面板基于某个点展开这种动画随处可见，这种动画用Native code来做小菜一碟，但是用Web来做就难上加难）。\n\n\n# 我们怎么做\n\n## 目标\n\n1. 能够快速更新，但不需要更新App\n2. 减少不同平台重复开发的工作量\n3. 尽可能在UX上贴近原生\n4. 用户无感知，用户不会感觉到就是打开一个网页\n\n## 用户体验\n\n1. 流畅性一定要好\n2. 完美兼容Android4.0以上、iOS7.0以上系统\n2. 不要出现这种情况\n   * 网络不好的情况下完全空白的现实 ![空白](/blog/post_images/hybrid-app-brief-talk-02.jpg)\n * 404，502之类的不直观提示   ![502](/blog/post_images/hybrid-app-brief-talk-03.png)\n\n\n## 缓存\n\n> 1. 使用http请求头部的[If-Modified-Since](http://www.cnblogs.com/zh2000g/archive/2010/03/22/1692002.html)、[If-None-Match](http://baike.baidu.com/item/ETag)\n> ；使用http响应头部的Last-Modify、Cache-Control\n> 2. 重要的界面，App本身最好缓存一份，避免网络原因造成的界面空白\n> 3. App端的缓存机制尽量按http响应头里参数来设置，除非用户强制刷新\n> 4. 大的第三方js库、字体最好App本身就已经集成，不需要从网络下载\n> 5. 对于一些不常变化的文件，可以集成在App内\n<!--  6. 使用*suppressesIncrementalRendering:YES*  -->\n\n## 这样做\n\n1. 现阶段只针对交互较少的节目才考虑试用web实现，\n1. 使用○转圈圈之类的加载动画代替进度条加载，这样会感觉更像原生\n1. 将一些App本身的业务封装好，以统一的js方法暴露给web，并形成API文档。这样web能够通过这些API文档，实现更多的功能，达到App不更新的情况下，实现更多需求。\n> 例如：是否登录is_login；账号类型account_type；跳转登录do_login；跳转到某个分类的视频列表：show_video_categary，等等\n\n1. 引入JSBridge实现Hybrid API（iOS:[WebViewJavascriptBridge](https://github.com/marcuswestin/WebViewJavascriptBridge) / Android:[jsBridge](https://github.com/lzyzsd/JsBridge)）简化原生和web之间的交互调用 \n\n1. 在Url里面定义好需要原生展示的内容、或执行的方法，例如： \n> Url: **loadData.php?id=abcd&title=Title&title_buttons=Add**\n> \n> 那么当App加载这个地址时服务器会返回**id=abcd**的数据，同时App检测到title和buttons参数，会显示**Title标题**，然后在标题栏上加上**新增按钮**。这些都不用等到网页加载出来。\n![加载中](/blog/post_images/hybrid-app-brief-talk-04.png)\n1. 在加载的过程中把webview隐藏，等到web加载成功后，在通过动画效果之类的把webview展示出来，避免用户看到整个web的渲染过程。特别是html已经渲染出来，但是css或js还没有完成，用户看到的就是一个**不正常的界面**了。\n![渲染中](/blog/post_images/hybrid-app-brief-talk-05.jpg)\n\n1. App中web部分的实现，要更多考虑细节的，因为web实现的界面，天生就缺乏一些原生自带的特性。细节处理不到位，会显得App很粗糙。\n\n1. **App必须更多的考虑用户网络不稳定的问题**，并针对性的在模拟不同网络环境去测试、优化Hybrid模块的功能。\n\n\n# 参考\n1. [真正的Hybrid APP没你想的那么简单](http://software.it168.com/a2014/0925/1669/000001669385.shtml)\n2. [别闯进Hybrid App的误区](http://www.infoq.com/cn/articles/hybridapp-misunderstanding/)\n3. [在微信还没统一所有应用前，Hybrid APP或许会先吃掉你的整个手机](http://36kr.com/p/5036836.html)\n4. [聊聊WEB APP、HYBRID APP与NATIVE APP的设计差异](http://mux.baidu.com/?p=6750)\n5. [混合模式(Hybrid)App开发概述](http://www.cnblogs.com/yeahui/p/5026587.html)\n6. [如何区别一个 App 是 Native App， Web App 还是 Hybrid app？](https://www.zhihu.com/question/23622875)\n7. [淘宝app属于hybrid app吗？](https://www.zhihu.com/question/28469978)\n8. [how to build fast hybrid ios apps](http://sssslide.com/speakerdeck.com/lokimeyburg/how-to-build-fast-hybrid-ios-apps)\n9. [跨终端Web之Hybrid App](http://www.infoq.com/cn/articles/hybrid-app)\n10. [如何评价 React Native？](https://www.zhihu.com/question/27852694)\n11. [豆瓣混合开发实践](http://lincode.github.io/Hybrid-Rexxar)\n12. [Hybrid APP架构设计思路](https://segmentfault.com/a/1190000004263182)\n","slug":"hybrid-app-brief-talk","published":1,"updated":"2016-07-18T08:05:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0udktre0007z0uuth1gqc8j","content":"<h1 id=\"浅谈Hybrid-App开发\"><a href=\"#浅谈Hybrid-App开发\" class=\"headerlink\" title=\"浅谈Hybrid App开发\"></a>浅谈Hybrid App开发</h1><blockquote>\n<p>我们常说的：在Android、iOS上的用H5来做界面</p>\n</blockquote>\n<p>我们把档次稍微提高一下：</p>\n<blockquote>\n<p>今天和大家分享的是<strong> Hybrid App 的开发</strong></p>\n</blockquote>\n<p><strong>Hybrid App开发</strong></p>\n<ul>\n<li>它不是手机网页开发、不是html、不是h5，但又都是</li>\n<li>做这个需要懂iOS、Android，还要懂html、js、css</li>\n<li>最麻烦的还是兼容性，主要的工作还是在web开发上</li>\n<li>已是主流了</li>\n</ul>\n<p><img src=\"/blog/post_images/hybrid-app-brief-talk-01.png\" alt=\"\"></p>\n<h1 id=\"为什么要谈Hybrid-App开发\"><a href=\"#为什么要谈Hybrid-App开发\" class=\"headerlink\" title=\"为什么要谈Hybrid App开发\"></a>为什么要谈Hybrid App开发</h1><ul>\n<li><h2 id=\"我们现在的App就是Hybrid-App\"><a href=\"#我们现在的App就是Hybrid-App\" class=\"headerlink\" title=\"我们现在的App就是Hybrid App\"></a>我们现在的App就是Hybrid App</h2><blockquote>\n<p>所以我们做得比较简单</p>\n</blockquote>\n</li>\n<li><h2 id=\"主流，基本上现在常用的App都是Hybrid-App\"><a href=\"#主流，基本上现在常用的App都是Hybrid-App\" class=\"headerlink\" title=\"主流，基本上现在常用的App都是Hybrid App\"></a>主流，基本上现在常用的App都是Hybrid App</h2><blockquote>\n<p>AppStore、Instagram、微信(公众号、钱包)、支付宝（城市服务、电影、）、美团、滴滴、京东、汽车之家、联通手机营业厅……</p>\n</blockquote>\n</li>\n<li><h2 id=\"快速迭代，在不更新APP的情况下，修改、新增功能\"><a href=\"#快速迭代，在不更新APP的情况下，修改、新增功能\" class=\"headerlink\" title=\"快速迭代，在不更新APP的情况下，修改、新增功能\"></a>快速迭代，在不更新APP的情况下，修改、新增功能</h2><blockquote>\n<p>例如：我们的新版首页，只要在服务器更新了，我的APP可以很快增加一个弱交互的模块；发现一些bug，也可以直接热修复</p>\n</blockquote>\n</li>\n<li><h2 id=\"开发统一，不管是Android、iOS，甚至是WP都可以统一开发，减少各个平台功能不统一的问题\"><a href=\"#开发统一，不管是Android、iOS，甚至是WP都可以统一开发，减少各个平台功能不统一的问题\" class=\"headerlink\" title=\"开发统一，不管是Android、iOS，甚至是WP都可以统一开发，减少各个平台功能不统一的问题\"></a>开发统一，不管是Android、iOS，甚至是WP都可以统一开发，减少各个平台功能不统一的问题</h2><blockquote>\n<p>1.原生开发专注于底层核心模块的开发、优化，封装好与web的交互接口。web实现功能模块后，所有端都无需重新开发</p>\n<p>2.例如：视频直播。原生开发专注与视频推流、视频播放、聊天功能的开发、优化，消息推送等，用web实现直播列表、直播创建等展示、数据编辑功能开发。相互之间定义好调用接口即可。</p>\n</blockquote>\n</li>\n<li><h2 id=\"总结我们现在混合开发发现的问题，优化我们的App\"><a href=\"#总结我们现在混合开发发现的问题，优化我们的App\" class=\"headerlink\" title=\"总结我们现在混合开发发现的问题，优化我们的App\"></a>总结我们现在混合开发发现的问题，优化我们的App</h2><blockquote>\n<p>我们可以做得更好</p>\n</blockquote>\n</li>\n</ul>\n<a id=\"more\"></a>\n<h1 id=\"常见App开发模式\"><a href=\"#常见App开发模式\" class=\"headerlink\" title=\"常见App开发模式\"></a>常见App开发模式</h1><h2 id=\"Native-App\"><a href=\"#Native-App\" class=\"headerlink\" title=\"Native App\"></a>Native App</h2><blockquote>\n<p>Native App，原生APP，一般依托于操作系统，有很强的交互，是一个完整的App，可拓展性强。需要用户下载安装使用。<strong>原生开发人员数量众多，技术已成熟</strong>。Android用Java语言，开发环境用android studio或Eclips等IDE；iOS用oc、swift，Mac+Xcode开发环境；WP用C#/C++，windows+Visual studio环境。</p>\n</blockquote>\n<h3 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h3><blockquote>\n<ol>\n<li>性能好，用户体验最贴近系统</li>\n<li>能够访问本地资源（通讯录，相册、存储空间……）</li>\n<li>能够实现大部分的功能</li>\n</ol>\n</blockquote>\n<h3 id=\"缺点：\"><a href=\"#缺点：\" class=\"headerlink\" title=\"缺点：\"></a>缺点：</h3><blockquote>\n<ol>\n<li>无法跨平台：Android和iOS都需要开发各自平台的版本——开发成本高；</li>\n<li>升级麻烦：每次升级都要下载安装包，Android还好，反正不需要审核，下载就下载吧，但iOS就麻烦了，发布每个版本还得经过App Store的审核，这导致第三个问题；</li>\n<li>Android和iOS很难同步发布。</li>\n</ol>\n</blockquote>\n<h2 id=\"Web-App\"><a href=\"#Web-App\" class=\"headerlink\" title=\"Web App\"></a>Web App</h2><blockquote>\n<p>基本上H5写出的App，不需要下载安装。类似于现在所说的轻应用。生存在浏览器中的应用，基本上可以说是触屏版的网页应用。但也有电脑网页版的Web App，例如微软的office 365，Gmail等。</p>\n</blockquote>\n<h3 id=\"优点-1\"><a href=\"#优点-1\" class=\"headerlink\" title=\"优点\"></a>优点</h3><blockquote>\n<ol>\n<li>无需升级、更新快</li>\n<li>同时跨多个平台、多个端</li>\n<li>用户使用方便</li>\n</ol>\n</blockquote>\n<h3 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h3><blockquote>\n<ol>\n<li>体验较差、设计受限制诸多</li>\n<li>设计受限制诸多</li>\n<li>无法获取系统级别的通知，提醒，动效等等</li>\n</ol>\n</blockquote>\n<h2 id=\"Hybrid-App\"><a href=\"#Hybrid-App\" class=\"headerlink\" title=\"Hybrid App\"></a>Hybrid App</h2><blockquote>\n<p>半原生半Web的混合类App。需要下载安装，看上去类似Native App，部分是用WebView，访问的内容是Web。但<strong>涉及到的技术成本、开发成本、学习成本比Web App高</strong>，它综合了<strong>Web App的开发速度和Native App的高性能体验</strong>。</p>\n<p>不管是Native还是Web，都具有各自的UI和布局能力、数据交互能力和脚本调用能力等。所以，<strong>Hybrid App更是一种开发模式，如何有效混合使用是个很大的技巧</strong>。</p>\n</blockquote>\n<h2 id=\"特性对比\"><a href=\"#特性对比\" class=\"headerlink\" title=\"特性对比\"></a>特性对比</h2><blockquote>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Native</th>\n<th>Hybrid</th>\n<th>web</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>用户体验</td>\n<td>很好</td>\n<td>好</td>\n<td>一般</td>\n</tr>\n<tr>\n<td>图像渲染</td>\n<td>本地API</td>\n<td>html、Canvas、css</td>\n<td>混合</td>\n</tr>\n<tr>\n<td>性能</td>\n<td>非常快</td>\n<td>快</td>\n<td>慢</td>\n</tr>\n<tr>\n<td>跨平台成本</td>\n<td>高</td>\n<td>合理</td>\n<td>低</td>\n</tr>\n<tr>\n<td>碎片化</td>\n<td><strong>非常严重</strong></td>\n<td>严重</td>\n<td>严重</td>\n</tr>\n<tr>\n<td>版本维护</td>\n<td>保守</td>\n<td>低延时</td>\n<td>开放</td>\n</tr>\n<tr>\n<td>网络要求</td>\n<td>支持离线</td>\n<td>大部分依赖网络</td>\n<td>完全依赖网络</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<!--\n## 技术特性对比\n![技术特性](duibi.png)\n-->\n<h1 id=\"Hybrid-App误区\"><a href=\"#Hybrid-App误区\" class=\"headerlink\" title=\"Hybrid App误区\"></a>Hybrid App误区</h1><h2 id=\"为了H5而Hybrid-App\"><a href=\"#为了H5而Hybrid-App\" class=\"headerlink\" title=\"为了H5而Hybrid App\"></a>为了H5而Hybrid App</h2><p>HTML5在Hybrid App模式中是一个最常被提起的概念。HTML确实强大，但HTML5处在目前的发展阶段，受到浏览器兼容性和手机硬件性能水平的影响，它所能提供的功能与Native仍然有很大差距。</p>\n<p>要明确一款App采用Hybrid App模式的根本原因是什么。<strong>作为一款App其最根本的功能是满足使用者的需求，而并不是服务某项新技术</strong>。</p>\n<h2 id=\"忽略关键因素\"><a href=\"#忽略关键因素\" class=\"headerlink\" title=\"忽略关键因素\"></a>忽略关键因素</h2><p>谈到Hybrid App我们更多提及的是它有诸多优点，会被忽略的一些因素少被提起，<strong>这些因素又恰恰经常是一个Web页面能否正常运行在App中的决定性因素</strong>。</p>\n<blockquote>\n<p>无论是iOS还是Android，最敏感的一个问题莫过于内存管理，而在Web开发则对这个问题没有过多注意。</p>\n</blockquote>\n<p>在网络环境方面，App在Wifi、3G的切换，基站变化等诸多因素都会导致网络间歇性断开，但Web开发总是默认有一个稳定的网络环境,因此在对于不稳定网络环境问题的处理上也有所欠缺。</p>\n<blockquote>\n<p><strong>没有明确的对于低速网络或不稳定网络访问的处理，在很多情况下这些页面的用户体验是很差的。</strong></p>\n</blockquote>\n<h2 id=\"富交互导致体验差\"><a href=\"#富交互导致体验差\" class=\"headerlink\" title=\"富交互导致体验差\"></a>富交互导致体验差</h2><ol>\n<li>平台(Android/iOS/WP/PC)默认交互习惯不一致的体验。</li>\n<li>同样功能和Native界面存在的体验差距。<blockquote>\n<p>无论在Android还是iOS平台上，都有各自的一套交互习惯，包括视觉风格，界面切换，操作习惯等，与Web习惯完全不同。</p>\n<p>当然Web方式也可模拟Native的交互方式，但<strong>这样的模拟首先提高了开发成本，有悖于最初的高效原则，从效果上看，也很难达到Native的流畅性</strong>。</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"跨平台\"><a href=\"#跨平台\" class=\"headerlink\" title=\"跨平台\"></a>跨平台</h2><ol>\n<li>一次开发，跨平台运行是Web的优势，这也是很多App采用Hybrid模式的重要原因之一。但是<strong>兼容性绝对是一个不容忽视的问题。</strong></li>\n<li>无论是机型、版本众多的Android，还是相对统一的iOS,不同版本之间的差异还是不容忽视的。</li>\n</ol>\n<p>Hybrid App方案是一把双刃剑，一方面它平衡了Native App和Web页面的优缺点，一定程度上解决了迭代慢，版本依赖的问题，但另一个方面<strong>过度依赖Hybrid方案会造成Web前端开发成本快速上升，甚至造成App整体体验下降，甚至造成功能缺失。</strong></p>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><blockquote>\n<p>不要为了H5而Hybrid，控制好App中Native与Web的边界是重中之重。</p>\n</blockquote>\n<h1 id=\"常见的Hybrid-App开发解决方案\"><a href=\"#常见的Hybrid-App开发解决方案\" class=\"headerlink\" title=\"常见的Hybrid App开发解决方案\"></a>常见的Hybrid App开发解决方案</h1><h2 id=\"Cordova-PhoneGap\"><a href=\"#Cordova-PhoneGap\" class=\"headerlink\" title=\"Cordova/PhoneGap\"></a>Cordova/PhoneGap</h2><p>2010年将PhoneGap代码贡献给Apache软件基金（ASF），PhoneGap核心引擎成为新的开源项目Cordova。</p>\n<p>提供Hybrid API，可由JavaScript直接调用诸如加速度、摄像头、指南针、GPS、联系人等系统级API，完整的API列表请访问PhoneGap API Reference。<br>侧重于JS与原生的交互，<strong>开发简单，但性能差</strong>，如触摸时反应不灵敏。</p>\n<p>用户列表：<a href=\"https://github.com/wikimedia/WikipediaMobile\" target=\"_blank\" rel=\"external\">维基百科客户端</a> <a href=\"https://mobile.linkedin.com/zh-cn\" target=\"_blank\" rel=\"external\">LinkedIn iPad客户端</a> </p>\n<h2 id=\"Ionic-Framework\"><a href=\"#Ionic-Framework\" class=\"headerlink\" title=\"Ionic Framework\"></a>Ionic Framework</h2><p>我们现在正在用</p>\n<h2 id=\"MUI和HTML5-SDK\"><a href=\"#MUI和HTML5-SDK\" class=\"headerlink\" title=\"MUI和HTML5+ SDK\"></a>MUI和HTML5+ SDK</h2><blockquote>\n<p>定位：最接近原生体验的移动App的UI框架 <a href=\"http://ask.dcloud.net.cn/docs/#http://ask.dcloud.net.cn/article/91\" target=\"_blank\" rel=\"external\">mui产品概述</a></p>\n<p>以iOS平台UI为基础，补充部分Android平台特有的UI控件</p>\n</blockquote>\n<p>HTML5+ SDK</p>\n<blockquote>\n<ol>\n<li>使用HTML5+ SDK实现本地打包。</li>\n<li>通过原生代码扩展HTML5+ runtime的功能。</li>\n<li>在现有原生项目中使用HTML5+ SDK<strong>替换原有的webview，以获得更强的web增强表现</strong>。<br><a href=\"http://ask.dcloud.net.cn/docs/#http://ask.dcloud.net.cn/article/104\" target=\"_blank\" rel=\"external\">HTML5+ SDK 功能概述</a></li>\n</ol>\n</blockquote>\n<p>用户列表：360生活助手 <a href=\"https://itunes.apple.com/cn/app/id468630782\" target=\"_blank\" rel=\"external\">明道OA</a> <a href=\"https://itunes.apple.com/cn/app/hui-liu-xue-kou-dai-li-liu/id1044958285?mt=8\" target=\"_blank\" rel=\"external\">会留学</a></p>\n<h2 id=\"React-Native\"><a href=\"#React-Native\" class=\"headerlink\" title=\"React Native\"></a>React Native</h2><p><a href=\"http://facebook.github.io/react-native/\" target=\"_blank\" rel=\"external\">React Native @ github</a></p>\n<p>Facebook出品，初次学习成本很高，但优势是“Learn once, write anywhere”。React Native仍然不完善。iOS版本比较完善，Android版本还是实验性产品。</p>\n<p>优势：</p>\n<ol>\n<li>实际上没有用到Webview，彻底摆脱了Webview让人不爽的交互和性能问题</li>\n<li>有较强的扩展性，这是因为Native端提供的是基本控件，JS可以自由组合使用</li>\n<li>可以直接使用Native原生的「牛逼」动画（在FB Group这个app里面，面板滑出带一点果冻弹动，面板基于某个点展开这种动画随处可见，这种动画用Native code来做小菜一碟，但是用Web来做就难上加难）。</li>\n</ol>\n<h1 id=\"我们怎么做\"><a href=\"#我们怎么做\" class=\"headerlink\" title=\"我们怎么做\"></a>我们怎么做</h1><h2 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h2><ol>\n<li>能够快速更新，但不需要更新App</li>\n<li>减少不同平台重复开发的工作量</li>\n<li>尽可能在UX上贴近原生</li>\n<li>用户无感知，用户不会感觉到就是打开一个网页</li>\n</ol>\n<h2 id=\"用户体验\"><a href=\"#用户体验\" class=\"headerlink\" title=\"用户体验\"></a>用户体验</h2><ol>\n<li>流畅性一定要好</li>\n<li>完美兼容Android4.0以上、iOS7.0以上系统</li>\n<li>不要出现这种情况<ul>\n<li>网络不好的情况下完全空白的现实 <img src=\"/blog/post_images/hybrid-app-brief-talk-02.jpg\" alt=\"空白\"></li>\n<li>404，502之类的不直观提示   <img src=\"/blog/post_images/hybrid-app-brief-talk-03.png\" alt=\"502\"></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"缓存\"><a href=\"#缓存\" class=\"headerlink\" title=\"缓存\"></a>缓存</h2><blockquote>\n<ol>\n<li>使用http请求头部的<a href=\"http://www.cnblogs.com/zh2000g/archive/2010/03/22/1692002.html\" target=\"_blank\" rel=\"external\">If-Modified-Since</a>、<a href=\"http://baike.baidu.com/item/ETag\" target=\"_blank\" rel=\"external\">If-None-Match</a><br>；使用http响应头部的Last-Modify、Cache-Control</li>\n<li>重要的界面，App本身最好缓存一份，避免网络原因造成的界面空白</li>\n<li>App端的缓存机制尽量按http响应头里参数来设置，除非用户强制刷新</li>\n<li>大的第三方js库、字体最好App本身就已经集成，不需要从网络下载</li>\n<li>对于一些不常变化的文件，可以集成在App内<!--  6. 使用*suppressesIncrementalRendering:YES*  -->\n</li>\n</ol>\n</blockquote>\n<h2 id=\"这样做\"><a href=\"#这样做\" class=\"headerlink\" title=\"这样做\"></a>这样做</h2><ol>\n<li>现阶段只针对交互较少的节目才考虑试用web实现，</li>\n<li>使用○转圈圈之类的加载动画代替进度条加载，这样会感觉更像原生</li>\n<li><p>将一些App本身的业务封装好，以统一的js方法暴露给web，并形成API文档。这样web能够通过这些API文档，实现更多的功能，达到App不更新的情况下，实现更多需求。</p>\n<blockquote>\n<p>例如：是否登录is_login；账号类型account_type；跳转登录do_login；跳转到某个分类的视频列表：show_video_categary，等等</p>\n</blockquote>\n</li>\n<li><p>引入JSBridge实现Hybrid API（iOS:<a href=\"https://github.com/marcuswestin/WebViewJavascriptBridge\" target=\"_blank\" rel=\"external\">WebViewJavascriptBridge</a> / Android:<a href=\"https://github.com/lzyzsd/JsBridge\" target=\"_blank\" rel=\"external\">jsBridge</a>）简化原生和web之间的交互调用 </p>\n</li>\n<li><p>在Url里面定义好需要原生展示的内容、或执行的方法，例如： </p>\n<blockquote>\n<p>Url: <strong>loadData.php?id=abcd&amp;title=Title&amp;title_buttons=Add</strong></p>\n<p>那么当App加载这个地址时服务器会返回<strong>id=abcd</strong>的数据，同时App检测到title和buttons参数，会显示<strong>Title标题</strong>，然后在标题栏上加上<strong>新增按钮</strong>。这些都不用等到网页加载出来。<br><img src=\"/blog/post_images/hybrid-app-brief-talk-04.png\" alt=\"加载中\"></p>\n</blockquote>\n</li>\n<li><p>在加载的过程中把webview隐藏，等到web加载成功后，在通过动画效果之类的把webview展示出来，避免用户看到整个web的渲染过程。特别是html已经渲染出来，但是css或js还没有完成，用户看到的就是一个<strong>不正常的界面</strong>了。<br><img src=\"/blog/post_images/hybrid-app-brief-talk-05.jpg\" alt=\"渲染中\"></p>\n</li>\n<li><p>App中web部分的实现，要更多考虑细节的，因为web实现的界面，天生就缺乏一些原生自带的特性。细节处理不到位，会显得App很粗糙。</p>\n</li>\n<li><p><strong>App必须更多的考虑用户网络不稳定的问题</strong>，并针对性的在模拟不同网络环境去测试、优化Hybrid模块的功能。</p>\n</li>\n</ol>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ol>\n<li><a href=\"http://software.it168.com/a2014/0925/1669/000001669385.shtml\" target=\"_blank\" rel=\"external\">真正的Hybrid APP没你想的那么简单</a></li>\n<li><a href=\"http://www.infoq.com/cn/articles/hybridapp-misunderstanding/\" target=\"_blank\" rel=\"external\">别闯进Hybrid App的误区</a></li>\n<li><a href=\"http://36kr.com/p/5036836.html\" target=\"_blank\" rel=\"external\">在微信还没统一所有应用前，Hybrid APP或许会先吃掉你的整个手机</a></li>\n<li><a href=\"http://mux.baidu.com/?p=6750\" target=\"_blank\" rel=\"external\">聊聊WEB APP、HYBRID APP与NATIVE APP的设计差异</a></li>\n<li><a href=\"http://www.cnblogs.com/yeahui/p/5026587.html\" target=\"_blank\" rel=\"external\">混合模式(Hybrid)App开发概述</a></li>\n<li><a href=\"https://www.zhihu.com/question/23622875\" target=\"_blank\" rel=\"external\">如何区别一个 App 是 Native App， Web App 还是 Hybrid app？</a></li>\n<li><a href=\"https://www.zhihu.com/question/28469978\" target=\"_blank\" rel=\"external\">淘宝app属于hybrid app吗？</a></li>\n<li><a href=\"http://sssslide.com/speakerdeck.com/lokimeyburg/how-to-build-fast-hybrid-ios-apps\" target=\"_blank\" rel=\"external\">how to build fast hybrid ios apps</a></li>\n<li><a href=\"http://www.infoq.com/cn/articles/hybrid-app\" target=\"_blank\" rel=\"external\">跨终端Web之Hybrid App</a></li>\n<li><a href=\"https://www.zhihu.com/question/27852694\" target=\"_blank\" rel=\"external\">如何评价 React Native？</a></li>\n<li><a href=\"http://lincode.github.io/Hybrid-Rexxar\" target=\"_blank\" rel=\"external\">豆瓣混合开发实践</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000004263182\" target=\"_blank\" rel=\"external\">Hybrid APP架构设计思路</a></li>\n</ol>\n","excerpt":"<h1 id=\"浅谈Hybrid-App开发\"><a href=\"#浅谈Hybrid-App开发\" class=\"headerlink\" title=\"浅谈Hybrid App开发\"></a>浅谈Hybrid App开发</h1><blockquote>\n<p>我们常说的：在Android、iOS上的用H5来做界面</p>\n</blockquote>\n<p>我们把档次稍微提高一下：</p>\n<blockquote>\n<p>今天和大家分享的是<strong> Hybrid App 的开发</strong></p>\n</blockquote>\n<p><strong>Hybrid App开发</strong></p>\n<ul>\n<li>它不是手机网页开发、不是html、不是h5，但又都是</li>\n<li>做这个需要懂iOS、Android，还要懂html、js、css</li>\n<li>最麻烦的还是兼容性，主要的工作还是在web开发上</li>\n<li>已是主流了</li>\n</ul>\n<p><img src=\"/blog/post_images/hybrid-app-brief-talk-01.png\" alt=\"\"></p>\n<h1 id=\"为什么要谈Hybrid-App开发\"><a href=\"#为什么要谈Hybrid-App开发\" class=\"headerlink\" title=\"为什么要谈Hybrid App开发\"></a>为什么要谈Hybrid App开发</h1><ul>\n<li><h2 id=\"我们现在的App就是Hybrid-App\"><a href=\"#我们现在的App就是Hybrid-App\" class=\"headerlink\" title=\"我们现在的App就是Hybrid App\"></a>我们现在的App就是Hybrid App</h2><blockquote>\n<p>所以我们做得比较简单</p>\n</blockquote>\n</li>\n<li><h2 id=\"主流，基本上现在常用的App都是Hybrid-App\"><a href=\"#主流，基本上现在常用的App都是Hybrid-App\" class=\"headerlink\" title=\"主流，基本上现在常用的App都是Hybrid App\"></a>主流，基本上现在常用的App都是Hybrid App</h2><blockquote>\n<p>AppStore、Instagram、微信(公众号、钱包)、支付宝（城市服务、电影、）、美团、滴滴、京东、汽车之家、联通手机营业厅……</p>\n</blockquote>\n</li>\n<li><h2 id=\"快速迭代，在不更新APP的情况下，修改、新增功能\"><a href=\"#快速迭代，在不更新APP的情况下，修改、新增功能\" class=\"headerlink\" title=\"快速迭代，在不更新APP的情况下，修改、新增功能\"></a>快速迭代，在不更新APP的情况下，修改、新增功能</h2><blockquote>\n<p>例如：我们的新版首页，只要在服务器更新了，我的APP可以很快增加一个弱交互的模块；发现一些bug，也可以直接热修复</p>\n</blockquote>\n</li>\n<li><h2 id=\"开发统一，不管是Android、iOS，甚至是WP都可以统一开发，减少各个平台功能不统一的问题\"><a href=\"#开发统一，不管是Android、iOS，甚至是WP都可以统一开发，减少各个平台功能不统一的问题\" class=\"headerlink\" title=\"开发统一，不管是Android、iOS，甚至是WP都可以统一开发，减少各个平台功能不统一的问题\"></a>开发统一，不管是Android、iOS，甚至是WP都可以统一开发，减少各个平台功能不统一的问题</h2><blockquote>\n<p>1.原生开发专注于底层核心模块的开发、优化，封装好与web的交互接口。web实现功能模块后，所有端都无需重新开发</p>\n<p>2.例如：视频直播。原生开发专注与视频推流、视频播放、聊天功能的开发、优化，消息推送等，用web实现直播列表、直播创建等展示、数据编辑功能开发。相互之间定义好调用接口即可。</p>\n</blockquote>\n</li>\n<li><h2 id=\"总结我们现在混合开发发现的问题，优化我们的App\"><a href=\"#总结我们现在混合开发发现的问题，优化我们的App\" class=\"headerlink\" title=\"总结我们现在混合开发发现的问题，优化我们的App\"></a>总结我们现在混合开发发现的问题，优化我们的App</h2><blockquote>\n<p>我们可以做得更好</p>\n</blockquote>\n</li>\n</ul>","more":"<h1 id=\"常见App开发模式\"><a href=\"#常见App开发模式\" class=\"headerlink\" title=\"常见App开发模式\"></a>常见App开发模式</h1><h2 id=\"Native-App\"><a href=\"#Native-App\" class=\"headerlink\" title=\"Native App\"></a>Native App</h2><blockquote>\n<p>Native App，原生APP，一般依托于操作系统，有很强的交互，是一个完整的App，可拓展性强。需要用户下载安装使用。<strong>原生开发人员数量众多，技术已成熟</strong>。Android用Java语言，开发环境用android studio或Eclips等IDE；iOS用oc、swift，Mac+Xcode开发环境；WP用C#/C++，windows+Visual studio环境。</p>\n</blockquote>\n<h3 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h3><blockquote>\n<ol>\n<li>性能好，用户体验最贴近系统</li>\n<li>能够访问本地资源（通讯录，相册、存储空间……）</li>\n<li>能够实现大部分的功能</li>\n</ol>\n</blockquote>\n<h3 id=\"缺点：\"><a href=\"#缺点：\" class=\"headerlink\" title=\"缺点：\"></a>缺点：</h3><blockquote>\n<ol>\n<li>无法跨平台：Android和iOS都需要开发各自平台的版本——开发成本高；</li>\n<li>升级麻烦：每次升级都要下载安装包，Android还好，反正不需要审核，下载就下载吧，但iOS就麻烦了，发布每个版本还得经过App Store的审核，这导致第三个问题；</li>\n<li>Android和iOS很难同步发布。</li>\n</ol>\n</blockquote>\n<h2 id=\"Web-App\"><a href=\"#Web-App\" class=\"headerlink\" title=\"Web App\"></a>Web App</h2><blockquote>\n<p>基本上H5写出的App，不需要下载安装。类似于现在所说的轻应用。生存在浏览器中的应用，基本上可以说是触屏版的网页应用。但也有电脑网页版的Web App，例如微软的office 365，Gmail等。</p>\n</blockquote>\n<h3 id=\"优点-1\"><a href=\"#优点-1\" class=\"headerlink\" title=\"优点\"></a>优点</h3><blockquote>\n<ol>\n<li>无需升级、更新快</li>\n<li>同时跨多个平台、多个端</li>\n<li>用户使用方便</li>\n</ol>\n</blockquote>\n<h3 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h3><blockquote>\n<ol>\n<li>体验较差、设计受限制诸多</li>\n<li>设计受限制诸多</li>\n<li>无法获取系统级别的通知，提醒，动效等等</li>\n</ol>\n</blockquote>\n<h2 id=\"Hybrid-App\"><a href=\"#Hybrid-App\" class=\"headerlink\" title=\"Hybrid App\"></a>Hybrid App</h2><blockquote>\n<p>半原生半Web的混合类App。需要下载安装，看上去类似Native App，部分是用WebView，访问的内容是Web。但<strong>涉及到的技术成本、开发成本、学习成本比Web App高</strong>，它综合了<strong>Web App的开发速度和Native App的高性能体验</strong>。</p>\n<p>不管是Native还是Web，都具有各自的UI和布局能力、数据交互能力和脚本调用能力等。所以，<strong>Hybrid App更是一种开发模式，如何有效混合使用是个很大的技巧</strong>。</p>\n</blockquote>\n<h2 id=\"特性对比\"><a href=\"#特性对比\" class=\"headerlink\" title=\"特性对比\"></a>特性对比</h2><blockquote>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Native</th>\n<th>Hybrid</th>\n<th>web</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>用户体验</td>\n<td>很好</td>\n<td>好</td>\n<td>一般</td>\n</tr>\n<tr>\n<td>图像渲染</td>\n<td>本地API</td>\n<td>html、Canvas、css</td>\n<td>混合</td>\n</tr>\n<tr>\n<td>性能</td>\n<td>非常快</td>\n<td>快</td>\n<td>慢</td>\n</tr>\n<tr>\n<td>跨平台成本</td>\n<td>高</td>\n<td>合理</td>\n<td>低</td>\n</tr>\n<tr>\n<td>碎片化</td>\n<td><strong>非常严重</strong></td>\n<td>严重</td>\n<td>严重</td>\n</tr>\n<tr>\n<td>版本维护</td>\n<td>保守</td>\n<td>低延时</td>\n<td>开放</td>\n</tr>\n<tr>\n<td>网络要求</td>\n<td>支持离线</td>\n<td>大部分依赖网络</td>\n<td>完全依赖网络</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<!--\n## 技术特性对比\n![技术特性](duibi.png)\n-->\n<h1 id=\"Hybrid-App误区\"><a href=\"#Hybrid-App误区\" class=\"headerlink\" title=\"Hybrid App误区\"></a>Hybrid App误区</h1><h2 id=\"为了H5而Hybrid-App\"><a href=\"#为了H5而Hybrid-App\" class=\"headerlink\" title=\"为了H5而Hybrid App\"></a>为了H5而Hybrid App</h2><p>HTML5在Hybrid App模式中是一个最常被提起的概念。HTML确实强大，但HTML5处在目前的发展阶段，受到浏览器兼容性和手机硬件性能水平的影响，它所能提供的功能与Native仍然有很大差距。</p>\n<p>要明确一款App采用Hybrid App模式的根本原因是什么。<strong>作为一款App其最根本的功能是满足使用者的需求，而并不是服务某项新技术</strong>。</p>\n<h2 id=\"忽略关键因素\"><a href=\"#忽略关键因素\" class=\"headerlink\" title=\"忽略关键因素\"></a>忽略关键因素</h2><p>谈到Hybrid App我们更多提及的是它有诸多优点，会被忽略的一些因素少被提起，<strong>这些因素又恰恰经常是一个Web页面能否正常运行在App中的决定性因素</strong>。</p>\n<blockquote>\n<p>无论是iOS还是Android，最敏感的一个问题莫过于内存管理，而在Web开发则对这个问题没有过多注意。</p>\n</blockquote>\n<p>在网络环境方面，App在Wifi、3G的切换，基站变化等诸多因素都会导致网络间歇性断开，但Web开发总是默认有一个稳定的网络环境,因此在对于不稳定网络环境问题的处理上也有所欠缺。</p>\n<blockquote>\n<p><strong>没有明确的对于低速网络或不稳定网络访问的处理，在很多情况下这些页面的用户体验是很差的。</strong></p>\n</blockquote>\n<h2 id=\"富交互导致体验差\"><a href=\"#富交互导致体验差\" class=\"headerlink\" title=\"富交互导致体验差\"></a>富交互导致体验差</h2><ol>\n<li>平台(Android/iOS/WP/PC)默认交互习惯不一致的体验。</li>\n<li>同样功能和Native界面存在的体验差距。<blockquote>\n<p>无论在Android还是iOS平台上，都有各自的一套交互习惯，包括视觉风格，界面切换，操作习惯等，与Web习惯完全不同。</p>\n<p>当然Web方式也可模拟Native的交互方式，但<strong>这样的模拟首先提高了开发成本，有悖于最初的高效原则，从效果上看，也很难达到Native的流畅性</strong>。</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"跨平台\"><a href=\"#跨平台\" class=\"headerlink\" title=\"跨平台\"></a>跨平台</h2><ol>\n<li>一次开发，跨平台运行是Web的优势，这也是很多App采用Hybrid模式的重要原因之一。但是<strong>兼容性绝对是一个不容忽视的问题。</strong></li>\n<li>无论是机型、版本众多的Android，还是相对统一的iOS,不同版本之间的差异还是不容忽视的。</li>\n</ol>\n<p>Hybrid App方案是一把双刃剑，一方面它平衡了Native App和Web页面的优缺点，一定程度上解决了迭代慢，版本依赖的问题，但另一个方面<strong>过度依赖Hybrid方案会造成Web前端开发成本快速上升，甚至造成App整体体验下降，甚至造成功能缺失。</strong></p>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><blockquote>\n<p>不要为了H5而Hybrid，控制好App中Native与Web的边界是重中之重。</p>\n</blockquote>\n<h1 id=\"常见的Hybrid-App开发解决方案\"><a href=\"#常见的Hybrid-App开发解决方案\" class=\"headerlink\" title=\"常见的Hybrid App开发解决方案\"></a>常见的Hybrid App开发解决方案</h1><h2 id=\"Cordova-PhoneGap\"><a href=\"#Cordova-PhoneGap\" class=\"headerlink\" title=\"Cordova/PhoneGap\"></a>Cordova/PhoneGap</h2><p>2010年将PhoneGap代码贡献给Apache软件基金（ASF），PhoneGap核心引擎成为新的开源项目Cordova。</p>\n<p>提供Hybrid API，可由JavaScript直接调用诸如加速度、摄像头、指南针、GPS、联系人等系统级API，完整的API列表请访问PhoneGap API Reference。<br>侧重于JS与原生的交互，<strong>开发简单，但性能差</strong>，如触摸时反应不灵敏。</p>\n<p>用户列表：<a href=\"https://github.com/wikimedia/WikipediaMobile\">维基百科客户端</a> <a href=\"https://mobile.linkedin.com/zh-cn\">LinkedIn iPad客户端</a> </p>\n<h2 id=\"Ionic-Framework\"><a href=\"#Ionic-Framework\" class=\"headerlink\" title=\"Ionic Framework\"></a>Ionic Framework</h2><p>我们现在正在用</p>\n<h2 id=\"MUI和HTML5-SDK\"><a href=\"#MUI和HTML5-SDK\" class=\"headerlink\" title=\"MUI和HTML5+ SDK\"></a>MUI和HTML5+ SDK</h2><blockquote>\n<p>定位：最接近原生体验的移动App的UI框架 <a href=\"http://ask.dcloud.net.cn/docs/#http://ask.dcloud.net.cn/article/91\">mui产品概述</a></p>\n<p>以iOS平台UI为基础，补充部分Android平台特有的UI控件</p>\n</blockquote>\n<p>HTML5+ SDK</p>\n<blockquote>\n<ol>\n<li>使用HTML5+ SDK实现本地打包。</li>\n<li>通过原生代码扩展HTML5+ runtime的功能。</li>\n<li>在现有原生项目中使用HTML5+ SDK<strong>替换原有的webview，以获得更强的web增强表现</strong>。<br><a href=\"http://ask.dcloud.net.cn/docs/#http://ask.dcloud.net.cn/article/104\">HTML5+ SDK 功能概述</a></li>\n</ol>\n</blockquote>\n<p>用户列表：360生活助手 <a href=\"https://itunes.apple.com/cn/app/id468630782\">明道OA</a> <a href=\"https://itunes.apple.com/cn/app/hui-liu-xue-kou-dai-li-liu/id1044958285?mt=8\">会留学</a></p>\n<h2 id=\"React-Native\"><a href=\"#React-Native\" class=\"headerlink\" title=\"React Native\"></a>React Native</h2><p><a href=\"http://facebook.github.io/react-native/\">React Native @ github</a></p>\n<p>Facebook出品，初次学习成本很高，但优势是“Learn once, write anywhere”。React Native仍然不完善。iOS版本比较完善，Android版本还是实验性产品。</p>\n<p>优势：</p>\n<ol>\n<li>实际上没有用到Webview，彻底摆脱了Webview让人不爽的交互和性能问题</li>\n<li>有较强的扩展性，这是因为Native端提供的是基本控件，JS可以自由组合使用</li>\n<li>可以直接使用Native原生的「牛逼」动画（在FB Group这个app里面，面板滑出带一点果冻弹动，面板基于某个点展开这种动画随处可见，这种动画用Native code来做小菜一碟，但是用Web来做就难上加难）。</li>\n</ol>\n<h1 id=\"我们怎么做\"><a href=\"#我们怎么做\" class=\"headerlink\" title=\"我们怎么做\"></a>我们怎么做</h1><h2 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h2><ol>\n<li>能够快速更新，但不需要更新App</li>\n<li>减少不同平台重复开发的工作量</li>\n<li>尽可能在UX上贴近原生</li>\n<li>用户无感知，用户不会感觉到就是打开一个网页</li>\n</ol>\n<h2 id=\"用户体验\"><a href=\"#用户体验\" class=\"headerlink\" title=\"用户体验\"></a>用户体验</h2><ol>\n<li>流畅性一定要好</li>\n<li>完美兼容Android4.0以上、iOS7.0以上系统</li>\n<li>不要出现这种情况<ul>\n<li>网络不好的情况下完全空白的现实 <img src=\"/blog/post_images/hybrid-app-brief-talk-02.jpg\" alt=\"空白\"></li>\n<li>404，502之类的不直观提示   <img src=\"/blog/post_images/hybrid-app-brief-talk-03.png\" alt=\"502\"></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"缓存\"><a href=\"#缓存\" class=\"headerlink\" title=\"缓存\"></a>缓存</h2><blockquote>\n<ol>\n<li>使用http请求头部的<a href=\"http://www.cnblogs.com/zh2000g/archive/2010/03/22/1692002.html\">If-Modified-Since</a>、<a href=\"http://baike.baidu.com/item/ETag\">If-None-Match</a><br>；使用http响应头部的Last-Modify、Cache-Control</li>\n<li>重要的界面，App本身最好缓存一份，避免网络原因造成的界面空白</li>\n<li>App端的缓存机制尽量按http响应头里参数来设置，除非用户强制刷新</li>\n<li>大的第三方js库、字体最好App本身就已经集成，不需要从网络下载</li>\n<li>对于一些不常变化的文件，可以集成在App内<!--  6. 使用*suppressesIncrementalRendering:YES*  -->\n</li>\n</ol>\n</blockquote>\n<h2 id=\"这样做\"><a href=\"#这样做\" class=\"headerlink\" title=\"这样做\"></a>这样做</h2><ol>\n<li>现阶段只针对交互较少的节目才考虑试用web实现，</li>\n<li>使用○转圈圈之类的加载动画代替进度条加载，这样会感觉更像原生</li>\n<li><p>将一些App本身的业务封装好，以统一的js方法暴露给web，并形成API文档。这样web能够通过这些API文档，实现更多的功能，达到App不更新的情况下，实现更多需求。</p>\n<blockquote>\n<p>例如：是否登录is_login；账号类型account_type；跳转登录do_login；跳转到某个分类的视频列表：show_video_categary，等等</p>\n</blockquote>\n</li>\n<li><p>引入JSBridge实现Hybrid API（iOS:<a href=\"https://github.com/marcuswestin/WebViewJavascriptBridge\">WebViewJavascriptBridge</a> / Android:<a href=\"https://github.com/lzyzsd/JsBridge\">jsBridge</a>）简化原生和web之间的交互调用 </p>\n</li>\n<li><p>在Url里面定义好需要原生展示的内容、或执行的方法，例如： </p>\n<blockquote>\n<p>Url: <strong>loadData.php?id=abcd&amp;title=Title&amp;title_buttons=Add</strong></p>\n<p>那么当App加载这个地址时服务器会返回<strong>id=abcd</strong>的数据，同时App检测到title和buttons参数，会显示<strong>Title标题</strong>，然后在标题栏上加上<strong>新增按钮</strong>。这些都不用等到网页加载出来。<br><img src=\"/blog/post_images/hybrid-app-brief-talk-04.png\" alt=\"加载中\"></p>\n</blockquote>\n</li>\n<li><p>在加载的过程中把webview隐藏，等到web加载成功后，在通过动画效果之类的把webview展示出来，避免用户看到整个web的渲染过程。特别是html已经渲染出来，但是css或js还没有完成，用户看到的就是一个<strong>不正常的界面</strong>了。<br><img src=\"/blog/post_images/hybrid-app-brief-talk-05.jpg\" alt=\"渲染中\"></p>\n</li>\n<li><p>App中web部分的实现，要更多考虑细节的，因为web实现的界面，天生就缺乏一些原生自带的特性。细节处理不到位，会显得App很粗糙。</p>\n</li>\n<li><p><strong>App必须更多的考虑用户网络不稳定的问题</strong>，并针对性的在模拟不同网络环境去测试、优化Hybrid模块的功能。</p>\n</li>\n</ol>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ol>\n<li><a href=\"http://software.it168.com/a2014/0925/1669/000001669385.shtml\">真正的Hybrid APP没你想的那么简单</a></li>\n<li><a href=\"http://www.infoq.com/cn/articles/hybridapp-misunderstanding/\">别闯进Hybrid App的误区</a></li>\n<li><a href=\"http://36kr.com/p/5036836.html\">在微信还没统一所有应用前，Hybrid APP或许会先吃掉你的整个手机</a></li>\n<li><a href=\"http://mux.baidu.com/?p=6750\">聊聊WEB APP、HYBRID APP与NATIVE APP的设计差异</a></li>\n<li><a href=\"http://www.cnblogs.com/yeahui/p/5026587.html\">混合模式(Hybrid)App开发概述</a></li>\n<li><a href=\"https://www.zhihu.com/question/23622875\">如何区别一个 App 是 Native App， Web App 还是 Hybrid app？</a></li>\n<li><a href=\"https://www.zhihu.com/question/28469978\">淘宝app属于hybrid app吗？</a></li>\n<li><a href=\"http://sssslide.com/speakerdeck.com/lokimeyburg/how-to-build-fast-hybrid-ios-apps\">how to build fast hybrid ios apps</a></li>\n<li><a href=\"http://www.infoq.com/cn/articles/hybrid-app\">跨终端Web之Hybrid App</a></li>\n<li><a href=\"https://www.zhihu.com/question/27852694\">如何评价 React Native？</a></li>\n<li><a href=\"http://lincode.github.io/Hybrid-Rexxar\">豆瓣混合开发实践</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000004263182\">Hybrid APP架构设计思路</a></li>\n</ol>"},{"title":"思而不学则die","date":"2016-07-20T04:04:11.000Z","_content":"\n王小波最推崇的一段台词，来自英若诚翻译的萧伯纳名剧《芭芭拉少校》\n\n>  大军火商安德谢夫与儿子斯蒂文的对白。安德谢夫：“你到底知道什么？，关心什么？”斯蒂文：“我知道什么是对的，什么是错的。”安德谢夫：“不可思议！对工商业深恶痛绝，对法律一无所知，和文学艺术无缘，对哲学毫无野心，可是掌握了人世间最大的秘密，叫历代哲学家猜不透的，叫古今律师无法解释的，叫工商业大亨糊里糊涂的，叫艺术家走投无路的，你居然掌握了这个秘密，你知道什么是对的，什么是错的。天哪，你是天才，你是大师中的大师，你是神！才二十四岁！”","source":"_posts/思而不学则die.md","raw":"\ntitle: 思而不学则die\ndate: 2016-07-20 12:04:11\ntags:\n  - 台词\n  - 王小波\ncategories:\n  - 杂文\n---\n\n王小波最推崇的一段台词，来自英若诚翻译的萧伯纳名剧《芭芭拉少校》\n\n>  大军火商安德谢夫与儿子斯蒂文的对白。安德谢夫：“你到底知道什么？，关心什么？”斯蒂文：“我知道什么是对的，什么是错的。”安德谢夫：“不可思议！对工商业深恶痛绝，对法律一无所知，和文学艺术无缘，对哲学毫无野心，可是掌握了人世间最大的秘密，叫历代哲学家猜不透的，叫古今律师无法解释的，叫工商业大亨糊里糊涂的，叫艺术家走投无路的，你居然掌握了这个秘密，你知道什么是对的，什么是错的。天哪，你是天才，你是大师中的大师，你是神！才二十四岁！”","slug":"思而不学则die","published":1,"updated":"2016-07-20T04:31:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0udktrg0009z0uukdkkhvqv","content":"<p>王小波最推崇的一段台词，来自英若诚翻译的萧伯纳名剧《芭芭拉少校》</p>\n<blockquote>\n<p> 大军火商安德谢夫与儿子斯蒂文的对白。安德谢夫：“你到底知道什么？，关心什么？”斯蒂文：“我知道什么是对的，什么是错的。”安德谢夫：“不可思议！对工商业深恶痛绝，对法律一无所知，和文学艺术无缘，对哲学毫无野心，可是掌握了人世间最大的秘密，叫历代哲学家猜不透的，叫古今律师无法解释的，叫工商业大亨糊里糊涂的，叫艺术家走投无路的，你居然掌握了这个秘密，你知道什么是对的，什么是错的。天哪，你是天才，你是大师中的大师，你是神！才二十四岁！”</p>\n</blockquote>\n","excerpt":"","more":"<p>王小波最推崇的一段台词，来自英若诚翻译的萧伯纳名剧《芭芭拉少校》</p>\n<blockquote>\n<p> 大军火商安德谢夫与儿子斯蒂文的对白。安德谢夫：“你到底知道什么？，关心什么？”斯蒂文：“我知道什么是对的，什么是错的。”安德谢夫：“不可思议！对工商业深恶痛绝，对法律一无所知，和文学艺术无缘，对哲学毫无野心，可是掌握了人世间最大的秘密，叫历代哲学家猜不透的，叫古今律师无法解释的，叫工商业大亨糊里糊涂的，叫艺术家走投无路的，你居然掌握了这个秘密，你知道什么是对的，什么是错的。天哪，你是天才，你是大师中的大师，你是神！才二十四岁！”</p>\n</blockquote>\n"},{"title":"WebRTC 编译笔记","date":"2017-03-02T01:52:01.000Z","_content":"\n# iOS产生xcode项目\n\n``` shell\ngn gen out/ios64 -args=\"target_os=\\\"ios\\\" target_cpu=\\\"x64\\\" is_component_build=false proprietary_codecs=true ios_enable_code_signing=false\" --ide=xcode\n```\nxcode项目文件位置 out/ios64/all.workspace ，项目包含多个TARGETS,其中AppRTCMobile是apprtc的ios版本\n\n**iOS真机调试必须ios_enable_code_signing=true，target_cpu=arm或target_cpu=arm64。<br />\n如果存在多个签名要增加参数ios_code_signing_identity=[UUID]，具体这个UUID请 [查看iOS本地签名uuid](#查看iOS本地签名uuid)**\n\n# iOS FAT库打包（57后面的版本才可用）\n\n``` shell\n./tools-webrtc/ios/build_ios_libs.sh --extra-gn-args='proprietary_codecs=true'\n```\n\n默认生成根目录下 out_ios_libs/WebRTC.framework 文件\n\n# windows产生vs2015编译配置\n\n``` shell\ngn gen out/win_x64 -args=\"target_cpu=\\\"x64\\\" proprietary_codecs=true use_openh264=true ffmpeg_branding=\\\"Chrome\\\"\" --ide=vs\ngn gen out/win_x86 -args=\"target_cpu=\\\"x86\\\" proprietary_codecs=true use_openh264=true ffmpeg_branding=\\\"Chrome\\\"\" --ide=vs\n```\n\nvs项目文件位置 out/win_x64/all.sln\n\n# Android产生编译配置\n\n``` shell\ngn gen out/android_arm -args='target_os=\"android\" target_cpu=\"arm\" is_componnent_build=false proprietary_codecs=true use_openh264=true ffmpeg_branding=\"Chrome\"'\n```\n\n<!-- more -->\n\n# Android aar打包（57后面的版本才可用）\n\n``` shell\n./tools-webrtc/android/build_aar.py --verbose --extra-gn-args='proprietary_codecs=true use_openh264=true ffmpeg_branding=\"Chrome\"'\n```\n\n默认生成根目录下 libwebrtc.aar 文件\n\n# Android产生Android Studio编译配置\n\n**`2017-02-23` 更新**  \n最新的WebRTC项目已经支持生成AS项目，链接 [PSA: AppRTCMobile can now be developed in Android Studio](https://groups.google.com/forum/#!topic/discuss-webrtc/b7yQjvPLHaM)  ，具体做法如下：\n\n执行如下命令：\n\n```shell\nbuild/android/gradle/generate_gradle.py --output-directory $PWD/out/Debug --target \"//webrtc/examples:AppRTCMobile\" --use-gradle-process-resources\n```\n\n生成的项目目录`out/Debug/gradle`，需要Android Studio 2.2及以上版本\n\n具体编译方法查看 [android_studio.md](https://chromium.googlesource.com/chromium/src.git/+/master/docs/android_studio.md)\n\n**如下内容已被废弃↓**\n\n---\n\n由于WebRTC本身没有可以产生AS项目的脚本，我们需要自己手动生成  \n1.先执行 `Android aar打包` 命令，产生 `libwebrtc.aar`  \n2.新建一个 `Android Studio Project`  \n3.在新建的 `Projec`  新建一个 `Module` ，选择 `Import .JAR/.AAR Package` ，选择 `步骤1` 生成的 `libwebrtc.aar` ，Subproject Name设为`libwebrtc`  \n4.在 `app` Module的 `build.gradle` 的 `dependencies` 节点增加 `compile project(\":libwebrtc\")`  \n5.把 `webrtc/examples/androidapp` 目录下的 `res` 、 `src` 文件夹及 `AndroidMainifest` 文件复制到 `app` Module，还有 `webrtc/examples/androidapp/third_party/autobanh/lib/autobanh.jar` 复制到 `app` Module的 `libs` 目录\n\n---\n\n# 编译\n\n``` shell\nninja -C out/debug\n```\n\n# 查看编译配置参数\n\n``` shell\ngn args out/debug --list\n```\n\n# 查看可用的target\n\n``` shell\ngn ls out/debug\n```\n\n# 查看iOS本地签名uuid\n``` shell\nxcrun security find-identity -v -p codesigning\n```\n\n# 查看iOS app签名信息\n``` shell\ncodesign -vv -d AppRTCMobile.app \n```\n\n# 查看iOS app provisoning信息\n``` shell\nmobileprovision-read -f AppRTCMobile.app/embedded.mobileprovision\n```\n\n# 获取特定版本\n\n* 获取正式的版本：使用 `gclient sync` 下载完全部代码后，在代码目录下用 `git branch -a` 查看所有版本，并用`git checkout remotes/branch-heads/57` 获取57这个版本。\n* 获取某次commit的版本：使用 `gclient sync -r src@037ee92455a6e7fc01efb4397a6cdcf8e49389b4` 获取037ee92455a6e7fc01efb4397a6cdcf8e49389b4这个commit id的版本。\n\n# 参考\n\n* [WebRTC Development](https://webrtc.org/native-code/development/)\n* [Building a Fat WebRTC framework on iOS](https://medium.com/@atsakiridis/building-a-fat-webrtc-framework-on-ios-8610fffb2224#.v7zqct8v9)\n* [Checking out and Building Chromium for Windows](https://chromium.googlesource.com/chromium/src/+/master/docs/windows_build_instructions.md)\n* [查看chromium项目用的WebRTC版本](https://chromium.googlesource.com/chromium/src/+/master/DEPS#234)\n","source":"_posts/webrtc-build-cmd.md","raw":"---\ntitle: WebRTC 编译笔记\ndate: 2017-03-02 09:52:01\ntags:\n  - WebRTC\n  - Android\n  - 混合iOS\n  - 编译\ncategories:\n  - WebRTC\n---\n\n# iOS产生xcode项目\n\n``` shell\ngn gen out/ios64 -args=\"target_os=\\\"ios\\\" target_cpu=\\\"x64\\\" is_component_build=false proprietary_codecs=true ios_enable_code_signing=false\" --ide=xcode\n```\nxcode项目文件位置 out/ios64/all.workspace ，项目包含多个TARGETS,其中AppRTCMobile是apprtc的ios版本\n\n**iOS真机调试必须ios_enable_code_signing=true，target_cpu=arm或target_cpu=arm64。<br />\n如果存在多个签名要增加参数ios_code_signing_identity=[UUID]，具体这个UUID请 [查看iOS本地签名uuid](#查看iOS本地签名uuid)**\n\n# iOS FAT库打包（57后面的版本才可用）\n\n``` shell\n./tools-webrtc/ios/build_ios_libs.sh --extra-gn-args='proprietary_codecs=true'\n```\n\n默认生成根目录下 out_ios_libs/WebRTC.framework 文件\n\n# windows产生vs2015编译配置\n\n``` shell\ngn gen out/win_x64 -args=\"target_cpu=\\\"x64\\\" proprietary_codecs=true use_openh264=true ffmpeg_branding=\\\"Chrome\\\"\" --ide=vs\ngn gen out/win_x86 -args=\"target_cpu=\\\"x86\\\" proprietary_codecs=true use_openh264=true ffmpeg_branding=\\\"Chrome\\\"\" --ide=vs\n```\n\nvs项目文件位置 out/win_x64/all.sln\n\n# Android产生编译配置\n\n``` shell\ngn gen out/android_arm -args='target_os=\"android\" target_cpu=\"arm\" is_componnent_build=false proprietary_codecs=true use_openh264=true ffmpeg_branding=\"Chrome\"'\n```\n\n<!-- more -->\n\n# Android aar打包（57后面的版本才可用）\n\n``` shell\n./tools-webrtc/android/build_aar.py --verbose --extra-gn-args='proprietary_codecs=true use_openh264=true ffmpeg_branding=\"Chrome\"'\n```\n\n默认生成根目录下 libwebrtc.aar 文件\n\n# Android产生Android Studio编译配置\n\n**`2017-02-23` 更新**  \n最新的WebRTC项目已经支持生成AS项目，链接 [PSA: AppRTCMobile can now be developed in Android Studio](https://groups.google.com/forum/#!topic/discuss-webrtc/b7yQjvPLHaM)  ，具体做法如下：\n\n执行如下命令：\n\n```shell\nbuild/android/gradle/generate_gradle.py --output-directory $PWD/out/Debug --target \"//webrtc/examples:AppRTCMobile\" --use-gradle-process-resources\n```\n\n生成的项目目录`out/Debug/gradle`，需要Android Studio 2.2及以上版本\n\n具体编译方法查看 [android_studio.md](https://chromium.googlesource.com/chromium/src.git/+/master/docs/android_studio.md)\n\n**如下内容已被废弃↓**\n\n---\n\n由于WebRTC本身没有可以产生AS项目的脚本，我们需要自己手动生成  \n1.先执行 `Android aar打包` 命令，产生 `libwebrtc.aar`  \n2.新建一个 `Android Studio Project`  \n3.在新建的 `Projec`  新建一个 `Module` ，选择 `Import .JAR/.AAR Package` ，选择 `步骤1` 生成的 `libwebrtc.aar` ，Subproject Name设为`libwebrtc`  \n4.在 `app` Module的 `build.gradle` 的 `dependencies` 节点增加 `compile project(\":libwebrtc\")`  \n5.把 `webrtc/examples/androidapp` 目录下的 `res` 、 `src` 文件夹及 `AndroidMainifest` 文件复制到 `app` Module，还有 `webrtc/examples/androidapp/third_party/autobanh/lib/autobanh.jar` 复制到 `app` Module的 `libs` 目录\n\n---\n\n# 编译\n\n``` shell\nninja -C out/debug\n```\n\n# 查看编译配置参数\n\n``` shell\ngn args out/debug --list\n```\n\n# 查看可用的target\n\n``` shell\ngn ls out/debug\n```\n\n# 查看iOS本地签名uuid\n``` shell\nxcrun security find-identity -v -p codesigning\n```\n\n# 查看iOS app签名信息\n``` shell\ncodesign -vv -d AppRTCMobile.app \n```\n\n# 查看iOS app provisoning信息\n``` shell\nmobileprovision-read -f AppRTCMobile.app/embedded.mobileprovision\n```\n\n# 获取特定版本\n\n* 获取正式的版本：使用 `gclient sync` 下载完全部代码后，在代码目录下用 `git branch -a` 查看所有版本，并用`git checkout remotes/branch-heads/57` 获取57这个版本。\n* 获取某次commit的版本：使用 `gclient sync -r src@037ee92455a6e7fc01efb4397a6cdcf8e49389b4` 获取037ee92455a6e7fc01efb4397a6cdcf8e49389b4这个commit id的版本。\n\n# 参考\n\n* [WebRTC Development](https://webrtc.org/native-code/development/)\n* [Building a Fat WebRTC framework on iOS](https://medium.com/@atsakiridis/building-a-fat-webrtc-framework-on-ios-8610fffb2224#.v7zqct8v9)\n* [Checking out and Building Chromium for Windows](https://chromium.googlesource.com/chromium/src/+/master/docs/windows_build_instructions.md)\n* [查看chromium项目用的WebRTC版本](https://chromium.googlesource.com/chromium/src/+/master/DEPS#234)\n","slug":"webrtc-build-cmd","published":1,"updated":"2017-03-13T06:23:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0udktrn000bz0uuc6sgw93r","content":"<h1 id=\"iOS产生xcode项目\"><a href=\"#iOS产生xcode项目\" class=\"headerlink\" title=\"iOS产生xcode项目\"></a>iOS产生xcode项目</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gn gen out/ios64 -args=&quot;target_os=\\&quot;ios\\&quot; target_cpu=\\&quot;x64\\&quot; is_component_build=false proprietary_codecs=true ios_enable_code_signing=false&quot; --ide=xcode</div></pre></td></tr></table></figure>\n<p>xcode项目文件位置 out/ios64/all.workspace ，项目包含多个TARGETS,其中AppRTCMobile是apprtc的ios版本</p>\n<p><strong>iOS真机调试必须ios_enable_code_signing=true，target_cpu=arm或target_cpu=arm64。<br><br>如果存在多个签名要增加参数ios_code_signing_identity=[UUID]，具体这个UUID请 <a href=\"#查看iOS本地签名uuid\">查看iOS本地签名uuid</a></strong></p>\n<h1 id=\"iOS-FAT库打包（57后面的版本才可用）\"><a href=\"#iOS-FAT库打包（57后面的版本才可用）\" class=\"headerlink\" title=\"iOS FAT库打包（57后面的版本才可用）\"></a>iOS FAT库打包（57后面的版本才可用）</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./tools-webrtc/ios/build_ios_libs.sh --extra-gn-args=&apos;proprietary_codecs=true&apos;</div></pre></td></tr></table></figure>\n<p>默认生成根目录下 out_ios_libs/WebRTC.framework 文件</p>\n<h1 id=\"windows产生vs2015编译配置\"><a href=\"#windows产生vs2015编译配置\" class=\"headerlink\" title=\"windows产生vs2015编译配置\"></a>windows产生vs2015编译配置</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">gn gen out/win_x64 -args=&quot;target_cpu=\\&quot;x64\\&quot; proprietary_codecs=true use_openh264=true ffmpeg_branding=\\&quot;Chrome\\&quot;&quot; --ide=vs</div><div class=\"line\">gn gen out/win_x86 -args=&quot;target_cpu=\\&quot;x86\\&quot; proprietary_codecs=true use_openh264=true ffmpeg_branding=\\&quot;Chrome\\&quot;&quot; --ide=vs</div></pre></td></tr></table></figure>\n<p>vs项目文件位置 out/win_x64/all.sln</p>\n<h1 id=\"Android产生编译配置\"><a href=\"#Android产生编译配置\" class=\"headerlink\" title=\"Android产生编译配置\"></a>Android产生编译配置</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gn gen out/android_arm -args=&apos;target_os=&quot;android&quot; target_cpu=&quot;arm&quot; is_componnent_build=false proprietary_codecs=true use_openh264=true ffmpeg_branding=&quot;Chrome&quot;&apos;</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h1 id=\"Android-aar打包（57后面的版本才可用）\"><a href=\"#Android-aar打包（57后面的版本才可用）\" class=\"headerlink\" title=\"Android aar打包（57后面的版本才可用）\"></a>Android aar打包（57后面的版本才可用）</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./tools-webrtc/android/build_aar.py --verbose --extra-gn-args=&apos;proprietary_codecs=true use_openh264=true ffmpeg_branding=&quot;Chrome&quot;&apos;</div></pre></td></tr></table></figure>\n<p>默认生成根目录下 libwebrtc.aar 文件</p>\n<h1 id=\"Android产生Android-Studio编译配置\"><a href=\"#Android产生Android-Studio编译配置\" class=\"headerlink\" title=\"Android产生Android Studio编译配置\"></a>Android产生Android Studio编译配置</h1><p><strong><code>2017-02-23</code> 更新</strong><br>最新的WebRTC项目已经支持生成AS项目，链接 <a href=\"https://groups.google.com/forum/#!topic/discuss-webrtc/b7yQjvPLHaM\" target=\"_blank\" rel=\"external\">PSA: AppRTCMobile can now be developed in Android Studio</a>  ，具体做法如下：</p>\n<p>执行如下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">build/android/gradle/generate_gradle.py --output-directory $PWD/out/Debug --target &quot;//webrtc/examples:AppRTCMobile&quot; --use-gradle-process-resources</div></pre></td></tr></table></figure>\n<p>生成的项目目录<code>out/Debug/gradle</code>，需要Android Studio 2.2及以上版本</p>\n<p>具体编译方法查看 <a href=\"https://chromium.googlesource.com/chromium/src.git/+/master/docs/android_studio.md\" target=\"_blank\" rel=\"external\">android_studio.md</a></p>\n<p><strong>如下内容已被废弃↓</strong></p>\n<hr>\n<p>由于WebRTC本身没有可以产生AS项目的脚本，我们需要自己手动生成<br>1.先执行 <code>Android aar打包</code> 命令，产生 <code>libwebrtc.aar</code><br>2.新建一个 <code>Android Studio Project</code><br>3.在新建的 <code>Projec</code>  新建一个 <code>Module</code> ，选择 <code>Import .JAR/.AAR Package</code> ，选择 <code>步骤1</code> 生成的 <code>libwebrtc.aar</code> ，Subproject Name设为<code>libwebrtc</code><br>4.在 <code>app</code> Module的 <code>build.gradle</code> 的 <code>dependencies</code> 节点增加 <code>compile project(&quot;:libwebrtc&quot;)</code><br>5.把 <code>webrtc/examples/androidapp</code> 目录下的 <code>res</code> 、 <code>src</code> 文件夹及 <code>AndroidMainifest</code> 文件复制到 <code>app</code> Module，还有 <code>webrtc/examples/androidapp/third_party/autobanh/lib/autobanh.jar</code> 复制到 <code>app</code> Module的 <code>libs</code> 目录</p>\n<hr>\n<h1 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ninja -C out/debug</div></pre></td></tr></table></figure>\n<h1 id=\"查看编译配置参数\"><a href=\"#查看编译配置参数\" class=\"headerlink\" title=\"查看编译配置参数\"></a>查看编译配置参数</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gn args out/debug --list</div></pre></td></tr></table></figure>\n<h1 id=\"查看可用的target\"><a href=\"#查看可用的target\" class=\"headerlink\" title=\"查看可用的target\"></a>查看可用的target</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gn ls out/debug</div></pre></td></tr></table></figure>\n<h1 id=\"查看iOS本地签名uuid\"><a href=\"#查看iOS本地签名uuid\" class=\"headerlink\" title=\"查看iOS本地签名uuid\"></a>查看iOS本地签名uuid</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">xcrun security find-identity -v -p codesigning</div></pre></td></tr></table></figure>\n<h1 id=\"查看iOS-app签名信息\"><a href=\"#查看iOS-app签名信息\" class=\"headerlink\" title=\"查看iOS app签名信息\"></a>查看iOS app签名信息</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">codesign -vv -d AppRTCMobile.app</div></pre></td></tr></table></figure>\n<h1 id=\"查看iOS-app-provisoning信息\"><a href=\"#查看iOS-app-provisoning信息\" class=\"headerlink\" title=\"查看iOS app provisoning信息\"></a>查看iOS app provisoning信息</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mobileprovision-read -f AppRTCMobile.app/embedded.mobileprovision</div></pre></td></tr></table></figure>\n<h1 id=\"获取特定版本\"><a href=\"#获取特定版本\" class=\"headerlink\" title=\"获取特定版本\"></a>获取特定版本</h1><ul>\n<li>获取正式的版本：使用 <code>gclient sync</code> 下载完全部代码后，在代码目录下用 <code>git branch -a</code> 查看所有版本，并用<code>git checkout remotes/branch-heads/57</code> 获取57这个版本。</li>\n<li>获取某次commit的版本：使用 <code>gclient sync -r src@037ee92455a6e7fc01efb4397a6cdcf8e49389b4</code> 获取037ee92455a6e7fc01efb4397a6cdcf8e49389b4这个commit id的版本。</li>\n</ul>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://webrtc.org/native-code/development/\" target=\"_blank\" rel=\"external\">WebRTC Development</a></li>\n<li><a href=\"https://medium.com/@atsakiridis/building-a-fat-webrtc-framework-on-ios-8610fffb2224#.v7zqct8v9\" target=\"_blank\" rel=\"external\">Building a Fat WebRTC framework on iOS</a></li>\n<li><a href=\"https://chromium.googlesource.com/chromium/src/+/master/docs/windows_build_instructions.md\" target=\"_blank\" rel=\"external\">Checking out and Building Chromium for Windows</a></li>\n<li><a href=\"https://chromium.googlesource.com/chromium/src/+/master/DEPS#234\" target=\"_blank\" rel=\"external\">查看chromium项目用的WebRTC版本</a></li>\n</ul>\n","excerpt":"<h1 id=\"iOS产生xcode项目\"><a href=\"#iOS产生xcode项目\" class=\"headerlink\" title=\"iOS产生xcode项目\"></a>iOS产生xcode项目</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gn gen out/ios64 -args=&quot;target_os=\\&quot;ios\\&quot; target_cpu=\\&quot;x64\\&quot; is_component_build=false proprietary_codecs=true ios_enable_code_signing=false&quot; --ide=xcode</div></pre></td></tr></table></figure>\n<p>xcode项目文件位置 out/ios64/all.workspace ，项目包含多个TARGETS,其中AppRTCMobile是apprtc的ios版本</p>\n<p><strong>iOS真机调试必须ios_enable_code_signing=true，target_cpu=arm或target_cpu=arm64。<br /><br>如果存在多个签名要增加参数ios_code_signing_identity=[UUID]，具体这个UUID请 <a href=\"#查看iOS本地签名uuid\">查看iOS本地签名uuid</a></strong></p>\n<h1 id=\"iOS-FAT库打包（57后面的版本才可用）\"><a href=\"#iOS-FAT库打包（57后面的版本才可用）\" class=\"headerlink\" title=\"iOS FAT库打包（57后面的版本才可用）\"></a>iOS FAT库打包（57后面的版本才可用）</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./tools-webrtc/ios/build_ios_libs.sh --extra-gn-args=&apos;proprietary_codecs=true&apos;</div></pre></td></tr></table></figure>\n<p>默认生成根目录下 out_ios_libs/WebRTC.framework 文件</p>\n<h1 id=\"windows产生vs2015编译配置\"><a href=\"#windows产生vs2015编译配置\" class=\"headerlink\" title=\"windows产生vs2015编译配置\"></a>windows产生vs2015编译配置</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">gn gen out/win_x64 -args=&quot;target_cpu=\\&quot;x64\\&quot; proprietary_codecs=true use_openh264=true ffmpeg_branding=\\&quot;Chrome\\&quot;&quot; --ide=vs</div><div class=\"line\">gn gen out/win_x86 -args=&quot;target_cpu=\\&quot;x86\\&quot; proprietary_codecs=true use_openh264=true ffmpeg_branding=\\&quot;Chrome\\&quot;&quot; --ide=vs</div></pre></td></tr></table></figure>\n<p>vs项目文件位置 out/win_x64/all.sln</p>\n<h1 id=\"Android产生编译配置\"><a href=\"#Android产生编译配置\" class=\"headerlink\" title=\"Android产生编译配置\"></a>Android产生编译配置</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gn gen out/android_arm -args=&apos;target_os=&quot;android&quot; target_cpu=&quot;arm&quot; is_componnent_build=false proprietary_codecs=true use_openh264=true ffmpeg_branding=&quot;Chrome&quot;&apos;</div></pre></td></tr></table></figure>","more":"<h1 id=\"Android-aar打包（57后面的版本才可用）\"><a href=\"#Android-aar打包（57后面的版本才可用）\" class=\"headerlink\" title=\"Android aar打包（57后面的版本才可用）\"></a>Android aar打包（57后面的版本才可用）</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./tools-webrtc/android/build_aar.py --verbose --extra-gn-args=&apos;proprietary_codecs=true use_openh264=true ffmpeg_branding=&quot;Chrome&quot;&apos;</div></pre></td></tr></table></figure>\n<p>默认生成根目录下 libwebrtc.aar 文件</p>\n<h1 id=\"Android产生Android-Studio编译配置\"><a href=\"#Android产生Android-Studio编译配置\" class=\"headerlink\" title=\"Android产生Android Studio编译配置\"></a>Android产生Android Studio编译配置</h1><p><strong><code>2017-02-23</code> 更新</strong><br>最新的WebRTC项目已经支持生成AS项目，链接 <a href=\"https://groups.google.com/forum/#!topic/discuss-webrtc/b7yQjvPLHaM\">PSA: AppRTCMobile can now be developed in Android Studio</a>  ，具体做法如下：</p>\n<p>执行如下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">build/android/gradle/generate_gradle.py --output-directory $PWD/out/Debug --target &quot;//webrtc/examples:AppRTCMobile&quot; --use-gradle-process-resources</div></pre></td></tr></table></figure>\n<p>生成的项目目录<code>out/Debug/gradle</code>，需要Android Studio 2.2及以上版本</p>\n<p>具体编译方法查看 <a href=\"https://chromium.googlesource.com/chromium/src.git/+/master/docs/android_studio.md\">android_studio.md</a></p>\n<p><strong>如下内容已被废弃↓</strong></p>\n<hr>\n<p>由于WebRTC本身没有可以产生AS项目的脚本，我们需要自己手动生成<br>1.先执行 <code>Android aar打包</code> 命令，产生 <code>libwebrtc.aar</code><br>2.新建一个 <code>Android Studio Project</code><br>3.在新建的 <code>Projec</code>  新建一个 <code>Module</code> ，选择 <code>Import .JAR/.AAR Package</code> ，选择 <code>步骤1</code> 生成的 <code>libwebrtc.aar</code> ，Subproject Name设为<code>libwebrtc</code><br>4.在 <code>app</code> Module的 <code>build.gradle</code> 的 <code>dependencies</code> 节点增加 <code>compile project(&quot;:libwebrtc&quot;)</code><br>5.把 <code>webrtc/examples/androidapp</code> 目录下的 <code>res</code> 、 <code>src</code> 文件夹及 <code>AndroidMainifest</code> 文件复制到 <code>app</code> Module，还有 <code>webrtc/examples/androidapp/third_party/autobanh/lib/autobanh.jar</code> 复制到 <code>app</code> Module的 <code>libs</code> 目录</p>\n<hr>\n<h1 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ninja -C out/debug</div></pre></td></tr></table></figure>\n<h1 id=\"查看编译配置参数\"><a href=\"#查看编译配置参数\" class=\"headerlink\" title=\"查看编译配置参数\"></a>查看编译配置参数</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gn args out/debug --list</div></pre></td></tr></table></figure>\n<h1 id=\"查看可用的target\"><a href=\"#查看可用的target\" class=\"headerlink\" title=\"查看可用的target\"></a>查看可用的target</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gn ls out/debug</div></pre></td></tr></table></figure>\n<h1 id=\"查看iOS本地签名uuid\"><a href=\"#查看iOS本地签名uuid\" class=\"headerlink\" title=\"查看iOS本地签名uuid\"></a>查看iOS本地签名uuid</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">xcrun security find-identity -v -p codesigning</div></pre></td></tr></table></figure>\n<h1 id=\"查看iOS-app签名信息\"><a href=\"#查看iOS-app签名信息\" class=\"headerlink\" title=\"查看iOS app签名信息\"></a>查看iOS app签名信息</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">codesign -vv -d AppRTCMobile.app</div></pre></td></tr></table></figure>\n<h1 id=\"查看iOS-app-provisoning信息\"><a href=\"#查看iOS-app-provisoning信息\" class=\"headerlink\" title=\"查看iOS app provisoning信息\"></a>查看iOS app provisoning信息</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mobileprovision-read -f AppRTCMobile.app/embedded.mobileprovision</div></pre></td></tr></table></figure>\n<h1 id=\"获取特定版本\"><a href=\"#获取特定版本\" class=\"headerlink\" title=\"获取特定版本\"></a>获取特定版本</h1><ul>\n<li>获取正式的版本：使用 <code>gclient sync</code> 下载完全部代码后，在代码目录下用 <code>git branch -a</code> 查看所有版本，并用<code>git checkout remotes/branch-heads/57</code> 获取57这个版本。</li>\n<li>获取某次commit的版本：使用 <code>gclient sync -r src@037ee92455a6e7fc01efb4397a6cdcf8e49389b4</code> 获取037ee92455a6e7fc01efb4397a6cdcf8e49389b4这个commit id的版本。</li>\n</ul>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://webrtc.org/native-code/development/\">WebRTC Development</a></li>\n<li><a href=\"https://medium.com/@atsakiridis/building-a-fat-webrtc-framework-on-ios-8610fffb2224#.v7zqct8v9\">Building a Fat WebRTC framework on iOS</a></li>\n<li><a href=\"https://chromium.googlesource.com/chromium/src/+/master/docs/windows_build_instructions.md\">Checking out and Building Chromium for Windows</a></li>\n<li><a href=\"https://chromium.googlesource.com/chromium/src/+/master/DEPS#234\">查看chromium项目用的WebRTC版本</a></li>\n</ul>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj0udktrn000bz0uuc6sgw93r","category_id":"cj0udktrb0005z0uubsqj8hzv","_id":"cj0udktrs000ez0uu6xh2yix0"},{"post_id":"cj0udktr40002z0uuy8mzmbbz","category_id":"cj0udktrb0005z0uubsqj8hzv","_id":"cj0udktrt000hz0uumwt6hdp8"},{"post_id":"cj0udktrd0006z0uut0k0vfhm","category_id":"cj0udktrq000cz0uupb4xg7fe","_id":"cj0udktru000iz0uuexemdowr"},{"post_id":"cj0udktre0007z0uuth1gqc8j","category_id":"cj0udktrs000fz0uudunk5k00","_id":"cj0udktrw000mz0uufsh0m6ff"},{"post_id":"cj0udktqw0000z0uudpbbnb6n","category_id":"cj0udktrb0005z0uubsqj8hzv","_id":"cj0udktry000sz0uuphbp8onb"},{"post_id":"cj0udktqw0000z0uudpbbnb6n","category_id":"cj0udktru000jz0uud2lndtlf","_id":"cj0udktrz000uz0uu3u1n60pd"},{"post_id":"cj0udktrg0009z0uukdkkhvqv","category_id":"cj0udktrx000pz0uu30qvrl8k","_id":"cj0udktrz000vz0uu06ic0bh1"}],"PostTag":[{"post_id":"cj0udktqw0000z0uudpbbnb6n","tag_id":"cj0udktr60004z0uuufjmz1so","_id":"cj0udktrw000lz0uuz4oa04ff"},{"post_id":"cj0udktqw0000z0uudpbbnb6n","tag_id":"cj0udktrf0008z0uu0f3y2aas","_id":"cj0udktrx000nz0uuuiux15ab"},{"post_id":"cj0udktqw0000z0uudpbbnb6n","tag_id":"cj0udktrr000dz0uuokv95gbz","_id":"cj0udktry000qz0uuf343at3v"},{"post_id":"cj0udktqw0000z0uudpbbnb6n","tag_id":"cj0udktrt000gz0uulzub55ij","_id":"cj0udktry000rz0uu1cqidl92"},{"post_id":"cj0udktr40002z0uuy8mzmbbz","tag_id":"cj0udktrf0008z0uu0f3y2aas","_id":"cj0udkts0000yz0uur4scvc8z"},{"post_id":"cj0udktr40002z0uuy8mzmbbz","tag_id":"cj0udktrx000oz0uux085i9j5","_id":"cj0udkts0000zz0uuvs3z9a65"},{"post_id":"cj0udktr40002z0uuy8mzmbbz","tag_id":"cj0udktry000tz0uubhuaqp2o","_id":"cj0udkts00011z0uul3xx0s41"},{"post_id":"cj0udktr40002z0uuy8mzmbbz","tag_id":"cj0udktrz000wz0uuzr7fdne0","_id":"cj0udkts00012z0uun45ce5ri"},{"post_id":"cj0udktrd0006z0uut0k0vfhm","tag_id":"cj0udkts0000xz0uu4ch3zsi1","_id":"cj0udkts10015z0uui1nyxle3"},{"post_id":"cj0udktrd0006z0uut0k0vfhm","tag_id":"cj0udkts00010z0uu5czmv4yu","_id":"cj0udkts10016z0uu7tgqso2r"},{"post_id":"cj0udktrd0006z0uut0k0vfhm","tag_id":"cj0udkts00013z0uuz59k42gh","_id":"cj0udkts10018z0uubytodr2h"},{"post_id":"cj0udktre0007z0uuth1gqc8j","tag_id":"cj0udkts10014z0uup4bx1bhx","_id":"cj0udkts4001bz0uu1ruweqrv"},{"post_id":"cj0udktre0007z0uuth1gqc8j","tag_id":"cj0udkts10017z0uuz8bhemmy","_id":"cj0udkts6001cz0uuv78j6loo"},{"post_id":"cj0udktre0007z0uuth1gqc8j","tag_id":"cj0udkts20019z0uuqw8h95gp","_id":"cj0udkts7001ez0uu76vtppa1"},{"post_id":"cj0udktrg0009z0uukdkkhvqv","tag_id":"cj0udkts2001az0uurmqmc7ss","_id":"cj0udkts8001gz0uueay9gk28"},{"post_id":"cj0udktrg0009z0uukdkkhvqv","tag_id":"cj0udkts6001dz0uu3sdrgeu1","_id":"cj0udkts8001hz0uutwfe53ms"},{"post_id":"cj0udktrn000bz0uuc6sgw93r","tag_id":"cj0udktrf0008z0uu0f3y2aas","_id":"cj0udkts9001kz0uud4ktbbem"},{"post_id":"cj0udktrn000bz0uuc6sgw93r","tag_id":"cj0udktrx000oz0uux085i9j5","_id":"cj0udkts9001lz0uurhrl91gj"},{"post_id":"cj0udktrn000bz0uuc6sgw93r","tag_id":"cj0udktry000tz0uubhuaqp2o","_id":"cj0udkts9001mz0uuhaw74li7"},{"post_id":"cj0udktrn000bz0uuc6sgw93r","tag_id":"cj0udktrz000wz0uuzr7fdne0","_id":"cj0udkts9001nz0uunn6yk6xa"}],"Tag":[{"name":"AppRTC","_id":"cj0udktr60004z0uuufjmz1so"},{"name":"WebRTC","_id":"cj0udktrf0008z0uu0f3y2aas"},{"name":"音视频","_id":"cj0udktrr000dz0uuokv95gbz"},{"name":"部署","_id":"cj0udktrt000gz0uulzub55ij"},{"name":"Android","_id":"cj0udktrx000oz0uux085i9j5"},{"name":"混合iOS","_id":"cj0udktry000tz0uubhuaqp2o"},{"name":"编译","_id":"cj0udktrz000wz0uuzr7fdne0"},{"name":"Highcharts","_id":"cj0udkts0000xz0uu4ch3zsi1"},{"name":"Demo","_id":"cj0udkts00010z0uu5czmv4yu"},{"name":"图表","_id":"cj0udkts00013z0uuz59k42gh"},{"name":"Hybrid","_id":"cj0udkts10014z0uup4bx1bhx"},{"name":"H5","_id":"cj0udkts10017z0uuz8bhemmy"},{"name":"混合开发","_id":"cj0udkts20019z0uuqw8h95gp"},{"name":"台词","_id":"cj0udkts2001az0uurmqmc7ss"},{"name":"王小波","_id":"cj0udkts6001dz0uu3sdrgeu1"}]}}