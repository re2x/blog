<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>rex_log</title>
  <subtitle>print &quot;hello world&quot;</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://re2x.com/"/>
  <updated>2016-08-01T01:49:40.000Z</updated>
  <id>https://re2x.com/</id>
  
  <author>
    <name>rex_lin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Highcharts Demo 2例</title>
    <link href="https://re2x.com/highcharts-2-demo/"/>
    <id>https://re2x.com/highcharts-2-demo/</id>
    <published>2016-07-29T06:40:34.000Z</published>
    <updated>2016-08-01T01:49:40.000Z</updated>
    
    <content type="html">&lt;p&gt;最近在项目中用到了highcharts来实现图表功能，做了2个demo给相关的同事&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://re2x.com/demo/charts/charts_demo.html&quot;&gt;最近7日数据&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;border:none;width:100%;height:250px;&quot; src=&quot;https://re2x.com/demo/charts/charts_demo.html&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://re2x.com/demo/bp-charts/charts-demo.html?show=14&amp;amp;dl=1&quot;&gt;血压数据&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;border:none;width:100%;height:250px;&quot; src=&quot;https://re2x.com/demo/bp-charts/charts-demo.html?show=31&quot;&gt;&lt;/iframe&gt;

</content>
    
    <summary type="html">
    
      &lt;p&gt;最近在项目中用到了highcharts来实现图表功能，做了2个demo给相关的同事&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://re2x.com/demo/charts/charts_demo.html&quot;&gt;最近7日数据&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ifr
    
    </summary>
    
      <category term="Demo" scheme="https://re2x.com/categories/Demo/"/>
    
    
      <category term="Highcharts" scheme="https://re2x.com/tags/Highcharts/"/>
    
      <category term="Demo" scheme="https://re2x.com/tags/Demo/"/>
    
      <category term="图表" scheme="https://re2x.com/tags/%E5%9B%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>思而不学则die</title>
    <link href="https://re2x.com/%E6%80%9D%E8%80%8C%E4%B8%8D%E5%AD%A6%E5%88%99die/"/>
    <id>https://re2x.com/思而不学则die/</id>
    <published>2016-07-20T04:04:11.000Z</published>
    <updated>2016-07-20T04:31:23.000Z</updated>
    
    <content type="html">&lt;p&gt;王小波最推崇的一段台词，来自英若诚翻译的萧伯纳名剧《芭芭拉少校》&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; 大军火商安德谢夫与儿子斯蒂文的对白。安德谢夫：“你到底知道什么？，关心什么？”斯蒂文：“我知道什么是对的，什么是错的。”安德谢夫：“不可思议！对工商业深恶痛绝，对法律一无所知，和文学艺术无缘，对哲学毫无野心，可是掌握了人世间最大的秘密，叫历代哲学家猜不透的，叫古今律师无法解释的，叫工商业大亨糊里糊涂的，叫艺术家走投无路的，你居然掌握了这个秘密，你知道什么是对的，什么是错的。天哪，你是天才，你是大师中的大师，你是神！才二十四岁！”&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;王小波最推崇的一段台词，来自英若诚翻译的萧伯纳名剧《芭芭拉少校》&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; 大军火商安德谢夫与儿子斯蒂文的对白。安德谢夫：“你到底知道什么？，关心什么？”斯蒂文：“我知道什么是对的，什么是错的。”安德谢夫：“不可思议！对工商业深恶痛绝，对法律
    
    </summary>
    
      <category term="杂文" scheme="https://re2x.com/categories/%E6%9D%82%E6%96%87/"/>
    
    
      <category term="台词" scheme="https://re2x.com/tags/%E5%8F%B0%E8%AF%8D/"/>
    
      <category term="王小波" scheme="https://re2x.com/tags/%E7%8E%8B%E5%B0%8F%E6%B3%A2/"/>
    
  </entry>
  
  <entry>
    <title>浅谈Hybrid App</title>
    <link href="https://re2x.com/hybrid-app-brief-talk/"/>
    <id>https://re2x.com/hybrid-app-brief-talk/</id>
    <published>2016-07-18T03:44:06.000Z</published>
    <updated>2016-07-18T08:05:37.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;浅谈Hybrid-App开发&quot;&gt;&lt;a href=&quot;#浅谈Hybrid-App开发&quot; class=&quot;headerlink&quot; title=&quot;浅谈Hybrid App开发&quot;&gt;&lt;/a&gt;浅谈Hybrid App开发&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;我们常说的：在Android、iOS上的用H5来做界面&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们把档次稍微提高一下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;今天和大家分享的是&lt;strong&gt; Hybrid App 的开发&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Hybrid App开发&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它不是手机网页开发、不是html、不是h5，但又都是&lt;/li&gt;
&lt;li&gt;做这个需要懂iOS、Android，还要懂html、js、css&lt;/li&gt;
&lt;li&gt;最麻烦的还是兼容性，主要的工作还是在web开发上&lt;/li&gt;
&lt;li&gt;已是主流了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/blog/post_images/hybrid-app-brief-talk-01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;为什么要谈Hybrid-App开发&quot;&gt;&lt;a href=&quot;#为什么要谈Hybrid-App开发&quot; class=&quot;headerlink&quot; title=&quot;为什么要谈Hybrid App开发&quot;&gt;&lt;/a&gt;为什么要谈Hybrid App开发&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;我们现在的App就是Hybrid-App&quot;&gt;&lt;a href=&quot;#我们现在的App就是Hybrid-App&quot; class=&quot;headerlink&quot; title=&quot;我们现在的App就是Hybrid App&quot;&gt;&lt;/a&gt;我们现在的App就是Hybrid App&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;所以我们做得比较简单&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h2 id=&quot;主流，基本上现在常用的App都是Hybrid-App&quot;&gt;&lt;a href=&quot;#主流，基本上现在常用的App都是Hybrid-App&quot; class=&quot;headerlink&quot; title=&quot;主流，基本上现在常用的App都是Hybrid App&quot;&gt;&lt;/a&gt;主流，基本上现在常用的App都是Hybrid App&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;AppStore、Instagram、微信(公众号、钱包)、支付宝（城市服务、电影、）、美团、滴滴、京东、汽车之家、联通手机营业厅……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h2 id=&quot;快速迭代，在不更新APP的情况下，修改、新增功能&quot;&gt;&lt;a href=&quot;#快速迭代，在不更新APP的情况下，修改、新增功能&quot; class=&quot;headerlink&quot; title=&quot;快速迭代，在不更新APP的情况下，修改、新增功能&quot;&gt;&lt;/a&gt;快速迭代，在不更新APP的情况下，修改、新增功能&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;例如：我们的新版首页，只要在服务器更新了，我的APP可以很快增加一个弱交互的模块；发现一些bug，也可以直接热修复&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h2 id=&quot;开发统一，不管是Android、iOS，甚至是WP都可以统一开发，减少各个平台功能不统一的问题&quot;&gt;&lt;a href=&quot;#开发统一，不管是Android、iOS，甚至是WP都可以统一开发，减少各个平台功能不统一的问题&quot; class=&quot;headerlink&quot; title=&quot;开发统一，不管是Android、iOS，甚至是WP都可以统一开发，减少各个平台功能不统一的问题&quot;&gt;&lt;/a&gt;开发统一，不管是Android、iOS，甚至是WP都可以统一开发，减少各个平台功能不统一的问题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;1.原生开发专注于底层核心模块的开发、优化，封装好与web的交互接口。web实现功能模块后，所有端都无需重新开发&lt;/p&gt;
&lt;p&gt;2.例如：视频直播。原生开发专注与视频推流、视频播放、聊天功能的开发、优化，消息推送等，用web实现直播列表、直播创建等展示、数据编辑功能开发。相互之间定义好调用接口即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h2 id=&quot;总结我们现在混合开发发现的问题，优化我们的App&quot;&gt;&lt;a href=&quot;#总结我们现在混合开发发现的问题，优化我们的App&quot; class=&quot;headerlink&quot; title=&quot;总结我们现在混合开发发现的问题，优化我们的App&quot;&gt;&lt;/a&gt;总结我们现在混合开发发现的问题，优化我们的App&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;我们可以做得更好&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;常见App开发模式&quot;&gt;&lt;a href=&quot;#常见App开发模式&quot; class=&quot;headerlink&quot; title=&quot;常见App开发模式&quot;&gt;&lt;/a&gt;常见App开发模式&lt;/h1&gt;&lt;h2 id=&quot;Native-App&quot;&gt;&lt;a href=&quot;#Native-App&quot; class=&quot;headerlink&quot; title=&quot;Native App&quot;&gt;&lt;/a&gt;Native App&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Native App，原生APP，一般依托于操作系统，有很强的交互，是一个完整的App，可拓展性强。需要用户下载安装使用。&lt;strong&gt;原生开发人员数量众多，技术已成熟&lt;/strong&gt;。Android用Java语言，开发环境用android studio或Eclips等IDE；iOS用oc、swift，Mac+Xcode开发环境；WP用C#/C++，windows+Visual studio环境。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;优点&quot;&gt;&lt;a href=&quot;#优点&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h3&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;性能好，用户体验最贴近系统&lt;/li&gt;
&lt;li&gt;能够访问本地资源（通讯录，相册、存储空间……）&lt;/li&gt;
&lt;li&gt;能够实现大部分的功能&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;缺点：&quot;&gt;&lt;a href=&quot;#缺点：&quot; class=&quot;headerlink&quot; title=&quot;缺点：&quot;&gt;&lt;/a&gt;缺点：&lt;/h3&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;无法跨平台：Android和iOS都需要开发各自平台的版本——开发成本高；&lt;/li&gt;
&lt;li&gt;升级麻烦：每次升级都要下载安装包，Android还好，反正不需要审核，下载就下载吧，但iOS就麻烦了，发布每个版本还得经过App Store的审核，这导致第三个问题；&lt;/li&gt;
&lt;li&gt;Android和iOS很难同步发布。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Web-App&quot;&gt;&lt;a href=&quot;#Web-App&quot; class=&quot;headerlink&quot; title=&quot;Web App&quot;&gt;&lt;/a&gt;Web App&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;基本上H5写出的App，不需要下载安装。类似于现在所说的轻应用。生存在浏览器中的应用，基本上可以说是触屏版的网页应用。但也有电脑网页版的Web App，例如微软的office 365，Gmail等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;优点-1&quot;&gt;&lt;a href=&quot;#优点-1&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h3&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;无需升级、更新快&lt;/li&gt;
&lt;li&gt;同时跨多个平台、多个端&lt;/li&gt;
&lt;li&gt;用户使用方便&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;缺点&quot;&gt;&lt;a href=&quot;#缺点&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h3&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;体验较差、设计受限制诸多&lt;/li&gt;
&lt;li&gt;设计受限制诸多&lt;/li&gt;
&lt;li&gt;无法获取系统级别的通知，提醒，动效等等&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Hybrid-App&quot;&gt;&lt;a href=&quot;#Hybrid-App&quot; class=&quot;headerlink&quot; title=&quot;Hybrid App&quot;&gt;&lt;/a&gt;Hybrid App&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;半原生半Web的混合类App。需要下载安装，看上去类似Native App，部分是用WebView，访问的内容是Web。但&lt;strong&gt;涉及到的技术成本、开发成本、学习成本比Web App高&lt;/strong&gt;，它综合了&lt;strong&gt;Web App的开发速度和Native App的高性能体验&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;不管是Native还是Web，都具有各自的UI和布局能力、数据交互能力和脚本调用能力等。所以，&lt;strong&gt;Hybrid App更是一种开发模式，如何有效混合使用是个很大的技巧&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;特性对比&quot;&gt;&lt;a href=&quot;#特性对比&quot; class=&quot;headerlink&quot; title=&quot;特性对比&quot;&gt;&lt;/a&gt;特性对比&lt;/h2&gt;&lt;blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Native&lt;/th&gt;
&lt;th&gt;Hybrid&lt;/th&gt;
&lt;th&gt;web&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;用户体验&lt;/td&gt;
&lt;td&gt;很好&lt;/td&gt;
&lt;td&gt;好&lt;/td&gt;
&lt;td&gt;一般&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;图像渲染&lt;/td&gt;
&lt;td&gt;本地API&lt;/td&gt;
&lt;td&gt;html、Canvas、css&lt;/td&gt;
&lt;td&gt;混合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;性能&lt;/td&gt;
&lt;td&gt;非常快&lt;/td&gt;
&lt;td&gt;快&lt;/td&gt;
&lt;td&gt;慢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;跨平台成本&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;td&gt;合理&lt;/td&gt;
&lt;td&gt;低&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;碎片化&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;非常严重&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;严重&lt;/td&gt;
&lt;td&gt;严重&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;版本维护&lt;/td&gt;
&lt;td&gt;保守&lt;/td&gt;
&lt;td&gt;低延时&lt;/td&gt;
&lt;td&gt;开放&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;网络要求&lt;/td&gt;
&lt;td&gt;支持离线&lt;/td&gt;
&lt;td&gt;大部分依赖网络&lt;/td&gt;
&lt;td&gt;完全依赖网络&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/blockquote&gt;
&lt;!--
## 技术特性对比
![技术特性](duibi.png)
--&gt;
&lt;h1 id=&quot;Hybrid-App误区&quot;&gt;&lt;a href=&quot;#Hybrid-App误区&quot; class=&quot;headerlink&quot; title=&quot;Hybrid App误区&quot;&gt;&lt;/a&gt;Hybrid App误区&lt;/h1&gt;&lt;h2 id=&quot;为了H5而Hybrid-App&quot;&gt;&lt;a href=&quot;#为了H5而Hybrid-App&quot; class=&quot;headerlink&quot; title=&quot;为了H5而Hybrid App&quot;&gt;&lt;/a&gt;为了H5而Hybrid App&lt;/h2&gt;&lt;p&gt;HTML5在Hybrid App模式中是一个最常被提起的概念。HTML确实强大，但HTML5处在目前的发展阶段，受到浏览器兼容性和手机硬件性能水平的影响，它所能提供的功能与Native仍然有很大差距。&lt;/p&gt;
&lt;p&gt;要明确一款App采用Hybrid App模式的根本原因是什么。&lt;strong&gt;作为一款App其最根本的功能是满足使用者的需求，而并不是服务某项新技术&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&quot;忽略关键因素&quot;&gt;&lt;a href=&quot;#忽略关键因素&quot; class=&quot;headerlink&quot; title=&quot;忽略关键因素&quot;&gt;&lt;/a&gt;忽略关键因素&lt;/h2&gt;&lt;p&gt;谈到Hybrid App我们更多提及的是它有诸多优点，会被忽略的一些因素少被提起，&lt;strong&gt;这些因素又恰恰经常是一个Web页面能否正常运行在App中的决定性因素&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;无论是iOS还是Android，最敏感的一个问题莫过于内存管理，而在Web开发则对这个问题没有过多注意。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在网络环境方面，App在Wifi、3G的切换，基站变化等诸多因素都会导致网络间歇性断开，但Web开发总是默认有一个稳定的网络环境,因此在对于不稳定网络环境问题的处理上也有所欠缺。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;没有明确的对于低速网络或不稳定网络访问的处理，在很多情况下这些页面的用户体验是很差的。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;富交互导致体验差&quot;&gt;&lt;a href=&quot;#富交互导致体验差&quot; class=&quot;headerlink&quot; title=&quot;富交互导致体验差&quot;&gt;&lt;/a&gt;富交互导致体验差&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;平台(Android/iOS/WP/PC)默认交互习惯不一致的体验。&lt;/li&gt;
&lt;li&gt;同样功能和Native界面存在的体验差距。&lt;blockquote&gt;
&lt;p&gt;无论在Android还是iOS平台上，都有各自的一套交互习惯，包括视觉风格，界面切换，操作习惯等，与Web习惯完全不同。&lt;/p&gt;
&lt;p&gt;当然Web方式也可模拟Native的交互方式，但&lt;strong&gt;这样的模拟首先提高了开发成本，有悖于最初的高效原则，从效果上看，也很难达到Native的流畅性&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;跨平台&quot;&gt;&lt;a href=&quot;#跨平台&quot; class=&quot;headerlink&quot; title=&quot;跨平台&quot;&gt;&lt;/a&gt;跨平台&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;一次开发，跨平台运行是Web的优势，这也是很多App采用Hybrid模式的重要原因之一。但是&lt;strong&gt;兼容性绝对是一个不容忽视的问题。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;无论是机型、版本众多的Android，还是相对统一的iOS,不同版本之间的差异还是不容忽视的。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Hybrid App方案是一把双刃剑，一方面它平衡了Native App和Web页面的优缺点，一定程度上解决了迭代慢，版本依赖的问题，但另一个方面&lt;strong&gt;过度依赖Hybrid方案会造成Web前端开发成本快速上升，甚至造成App整体体验下降，甚至造成功能缺失。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;注意&quot;&gt;&lt;a href=&quot;#注意&quot; class=&quot;headerlink&quot; title=&quot;注意&quot;&gt;&lt;/a&gt;注意&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;不要为了H5而Hybrid，控制好App中Native与Web的边界是重中之重。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;常见的Hybrid-App开发解决方案&quot;&gt;&lt;a href=&quot;#常见的Hybrid-App开发解决方案&quot; class=&quot;headerlink&quot; title=&quot;常见的Hybrid App开发解决方案&quot;&gt;&lt;/a&gt;常见的Hybrid App开发解决方案&lt;/h1&gt;&lt;h2 id=&quot;Cordova-PhoneGap&quot;&gt;&lt;a href=&quot;#Cordova-PhoneGap&quot; class=&quot;headerlink&quot; title=&quot;Cordova/PhoneGap&quot;&gt;&lt;/a&gt;Cordova/PhoneGap&lt;/h2&gt;&lt;p&gt;2010年将PhoneGap代码贡献给Apache软件基金（ASF），PhoneGap核心引擎成为新的开源项目Cordova。&lt;/p&gt;
&lt;p&gt;提供Hybrid API，可由JavaScript直接调用诸如加速度、摄像头、指南针、GPS、联系人等系统级API，完整的API列表请访问PhoneGap API Reference。&lt;br&gt;侧重于JS与原生的交互，&lt;strong&gt;开发简单，但性能差&lt;/strong&gt;，如触摸时反应不灵敏。&lt;/p&gt;
&lt;p&gt;用户列表：&lt;a href=&quot;https://github.com/wikimedia/WikipediaMobile&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;维基百科客户端&lt;/a&gt; &lt;a href=&quot;https://mobile.linkedin.com/zh-cn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LinkedIn iPad客户端&lt;/a&gt; &lt;/p&gt;
&lt;h2 id=&quot;Ionic-Framework&quot;&gt;&lt;a href=&quot;#Ionic-Framework&quot; class=&quot;headerlink&quot; title=&quot;Ionic Framework&quot;&gt;&lt;/a&gt;Ionic Framework&lt;/h2&gt;&lt;p&gt;我们现在正在用&lt;/p&gt;
&lt;h2 id=&quot;MUI和HTML5-SDK&quot;&gt;&lt;a href=&quot;#MUI和HTML5-SDK&quot; class=&quot;headerlink&quot; title=&quot;MUI和HTML5+ SDK&quot;&gt;&lt;/a&gt;MUI和HTML5+ SDK&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;定位：最接近原生体验的移动App的UI框架 &lt;a href=&quot;http://ask.dcloud.net.cn/docs/#http://ask.dcloud.net.cn/article/91&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mui产品概述&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以iOS平台UI为基础，补充部分Android平台特有的UI控件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;HTML5+ SDK&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;使用HTML5+ SDK实现本地打包。&lt;/li&gt;
&lt;li&gt;通过原生代码扩展HTML5+ runtime的功能。&lt;/li&gt;
&lt;li&gt;在现有原生项目中使用HTML5+ SDK&lt;strong&gt;替换原有的webview，以获得更强的web增强表现&lt;/strong&gt;。&lt;br&gt;&lt;a href=&quot;http://ask.dcloud.net.cn/docs/#http://ask.dcloud.net.cn/article/104&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTML5+ SDK 功能概述&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;用户列表：360生活助手 &lt;a href=&quot;https://itunes.apple.com/cn/app/id468630782&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;明道OA&lt;/a&gt; &lt;a href=&quot;https://itunes.apple.com/cn/app/hui-liu-xue-kou-dai-li-liu/id1044958285?mt=8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;会留学&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;React-Native&quot;&gt;&lt;a href=&quot;#React-Native&quot; class=&quot;headerlink&quot; title=&quot;React Native&quot;&gt;&lt;/a&gt;React Native&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://facebook.github.io/react-native/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native @ github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Facebook出品，初次学习成本很高，但优势是“Learn once, write anywhere”。React Native仍然不完善。iOS版本比较完善，Android版本还是实验性产品。&lt;/p&gt;
&lt;p&gt;优势：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;实际上没有用到Webview，彻底摆脱了Webview让人不爽的交互和性能问题&lt;/li&gt;
&lt;li&gt;有较强的扩展性，这是因为Native端提供的是基本控件，JS可以自由组合使用&lt;/li&gt;
&lt;li&gt;可以直接使用Native原生的「牛逼」动画（在FB Group这个app里面，面板滑出带一点果冻弹动，面板基于某个点展开这种动画随处可见，这种动画用Native code来做小菜一碟，但是用Web来做就难上加难）。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;我们怎么做&quot;&gt;&lt;a href=&quot;#我们怎么做&quot; class=&quot;headerlink&quot; title=&quot;我们怎么做&quot;&gt;&lt;/a&gt;我们怎么做&lt;/h1&gt;&lt;h2 id=&quot;目标&quot;&gt;&lt;a href=&quot;#目标&quot; class=&quot;headerlink&quot; title=&quot;目标&quot;&gt;&lt;/a&gt;目标&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;能够快速更新，但不需要更新App&lt;/li&gt;
&lt;li&gt;减少不同平台重复开发的工作量&lt;/li&gt;
&lt;li&gt;尽可能在UX上贴近原生&lt;/li&gt;
&lt;li&gt;用户无感知，用户不会感觉到就是打开一个网页&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;用户体验&quot;&gt;&lt;a href=&quot;#用户体验&quot; class=&quot;headerlink&quot; title=&quot;用户体验&quot;&gt;&lt;/a&gt;用户体验&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;流畅性一定要好&lt;/li&gt;
&lt;li&gt;完美兼容Android4.0以上、iOS7.0以上系统&lt;/li&gt;
&lt;li&gt;不要出现这种情况&lt;ul&gt;
&lt;li&gt;网络不好的情况下完全空白的现实 &lt;img src=&quot;/blog/post_images/hybrid-app-brief-talk-02.jpg&quot; alt=&quot;空白&quot;&gt;&lt;/li&gt;
&lt;li&gt;404，502之类的不直观提示   &lt;img src=&quot;/blog/post_images/hybrid-app-brief-talk-03.png&quot; alt=&quot;502&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;缓存&quot;&gt;&lt;a href=&quot;#缓存&quot; class=&quot;headerlink&quot; title=&quot;缓存&quot;&gt;&lt;/a&gt;缓存&lt;/h2&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;使用http请求头部的&lt;a href=&quot;http://www.cnblogs.com/zh2000g/archive/2010/03/22/1692002.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;If-Modified-Since&lt;/a&gt;、&lt;a href=&quot;http://baike.baidu.com/item/ETag&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;If-None-Match&lt;/a&gt;&lt;br&gt;；使用http响应头部的Last-Modify、Cache-Control&lt;/li&gt;
&lt;li&gt;重要的界面，App本身最好缓存一份，避免网络原因造成的界面空白&lt;/li&gt;
&lt;li&gt;App端的缓存机制尽量按http响应头里参数来设置，除非用户强制刷新&lt;/li&gt;
&lt;li&gt;大的第三方js库、字体最好App本身就已经集成，不需要从网络下载&lt;/li&gt;
&lt;li&gt;对于一些不常变化的文件，可以集成在App内&lt;!--  6. 使用*suppressesIncrementalRendering:YES*  --&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;这样做&quot;&gt;&lt;a href=&quot;#这样做&quot; class=&quot;headerlink&quot; title=&quot;这样做&quot;&gt;&lt;/a&gt;这样做&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;现阶段只针对交互较少的节目才考虑试用web实现，&lt;/li&gt;
&lt;li&gt;使用○转圈圈之类的加载动画代替进度条加载，这样会感觉更像原生&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将一些App本身的业务封装好，以统一的js方法暴露给web，并形成API文档。这样web能够通过这些API文档，实现更多的功能，达到App不更新的情况下，实现更多需求。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例如：是否登录is_login；账号类型account_type；跳转登录do_login；跳转到某个分类的视频列表：show_video_categary，等等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;引入JSBridge实现Hybrid API（iOS:&lt;a href=&quot;https://github.com/marcuswestin/WebViewJavascriptBridge&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WebViewJavascriptBridge&lt;/a&gt; / Android:&lt;a href=&quot;https://github.com/lzyzsd/JsBridge&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jsBridge&lt;/a&gt;）简化原生和web之间的交互调用 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在Url里面定义好需要原生展示的内容、或执行的方法，例如： &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Url: &lt;strong&gt;loadData.php?id=abcd&amp;amp;title=Title&amp;amp;title_buttons=Add&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;那么当App加载这个地址时服务器会返回&lt;strong&gt;id=abcd&lt;/strong&gt;的数据，同时App检测到title和buttons参数，会显示&lt;strong&gt;Title标题&lt;/strong&gt;，然后在标题栏上加上&lt;strong&gt;新增按钮&lt;/strong&gt;。这些都不用等到网页加载出来。&lt;br&gt;&lt;img src=&quot;/blog/post_images/hybrid-app-brief-talk-04.png&quot; alt=&quot;加载中&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在加载的过程中把webview隐藏，等到web加载成功后，在通过动画效果之类的把webview展示出来，避免用户看到整个web的渲染过程。特别是html已经渲染出来，但是css或js还没有完成，用户看到的就是一个&lt;strong&gt;不正常的界面&lt;/strong&gt;了。&lt;br&gt;&lt;img src=&quot;/blog/post_images/hybrid-app-brief-talk-05.jpg&quot; alt=&quot;渲染中&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;App中web部分的实现，要更多考虑细节的，因为web实现的界面，天生就缺乏一些原生自带的特性。细节处理不到位，会显得App很粗糙。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;App必须更多的考虑用户网络不稳定的问题&lt;/strong&gt;，并针对性的在模拟不同网络环境去测试、优化Hybrid模块的功能。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://software.it168.com/a2014/0925/1669/000001669385.shtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;真正的Hybrid APP没你想的那么简单&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.infoq.com/cn/articles/hybridapp-misunderstanding/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;别闯进Hybrid App的误区&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://36kr.com/p/5036836.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在微信还没统一所有应用前，Hybrid APP或许会先吃掉你的整个手机&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mux.baidu.com/?p=6750&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;聊聊WEB APP、HYBRID APP与NATIVE APP的设计差异&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/yeahui/p/5026587.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;混合模式(Hybrid)App开发概述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/23622875&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何区别一个 App 是 Native App， Web App 还是 Hybrid app？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/28469978&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;淘宝app属于hybrid app吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sssslide.com/speakerdeck.com/lokimeyburg/how-to-build-fast-hybrid-ios-apps&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;how to build fast hybrid ios apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.infoq.com/cn/articles/hybrid-app&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;跨终端Web之Hybrid App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/27852694&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何评价 React Native？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://lincode.github.io/Hybrid-Rexxar&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;豆瓣混合开发实践&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000004263182&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hybrid APP架构设计思路&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;浅谈Hybrid-App开发&quot;&gt;&lt;a href=&quot;#浅谈Hybrid-App开发&quot; class=&quot;headerlink&quot; title=&quot;浅谈Hybrid App开发&quot;&gt;&lt;/a&gt;浅谈Hybrid App开发&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;我们常说的：在Android、iOS上的用H5来做界面&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们把档次稍微提高一下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;今天和大家分享的是&lt;strong&gt; Hybrid App 的开发&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Hybrid App开发&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它不是手机网页开发、不是html、不是h5，但又都是&lt;/li&gt;
&lt;li&gt;做这个需要懂iOS、Android，还要懂html、js、css&lt;/li&gt;
&lt;li&gt;最麻烦的还是兼容性，主要的工作还是在web开发上&lt;/li&gt;
&lt;li&gt;已是主流了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/blog/post_images/hybrid-app-brief-talk-01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;为什么要谈Hybrid-App开发&quot;&gt;&lt;a href=&quot;#为什么要谈Hybrid-App开发&quot; class=&quot;headerlink&quot; title=&quot;为什么要谈Hybrid App开发&quot;&gt;&lt;/a&gt;为什么要谈Hybrid App开发&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;我们现在的App就是Hybrid-App&quot;&gt;&lt;a href=&quot;#我们现在的App就是Hybrid-App&quot; class=&quot;headerlink&quot; title=&quot;我们现在的App就是Hybrid App&quot;&gt;&lt;/a&gt;我们现在的App就是Hybrid App&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;所以我们做得比较简单&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h2 id=&quot;主流，基本上现在常用的App都是Hybrid-App&quot;&gt;&lt;a href=&quot;#主流，基本上现在常用的App都是Hybrid-App&quot; class=&quot;headerlink&quot; title=&quot;主流，基本上现在常用的App都是Hybrid App&quot;&gt;&lt;/a&gt;主流，基本上现在常用的App都是Hybrid App&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;AppStore、Instagram、微信(公众号、钱包)、支付宝（城市服务、电影、）、美团、滴滴、京东、汽车之家、联通手机营业厅……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h2 id=&quot;快速迭代，在不更新APP的情况下，修改、新增功能&quot;&gt;&lt;a href=&quot;#快速迭代，在不更新APP的情况下，修改、新增功能&quot; class=&quot;headerlink&quot; title=&quot;快速迭代，在不更新APP的情况下，修改、新增功能&quot;&gt;&lt;/a&gt;快速迭代，在不更新APP的情况下，修改、新增功能&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;例如：我们的新版首页，只要在服务器更新了，我的APP可以很快增加一个弱交互的模块；发现一些bug，也可以直接热修复&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h2 id=&quot;开发统一，不管是Android、iOS，甚至是WP都可以统一开发，减少各个平台功能不统一的问题&quot;&gt;&lt;a href=&quot;#开发统一，不管是Android、iOS，甚至是WP都可以统一开发，减少各个平台功能不统一的问题&quot; class=&quot;headerlink&quot; title=&quot;开发统一，不管是Android、iOS，甚至是WP都可以统一开发，减少各个平台功能不统一的问题&quot;&gt;&lt;/a&gt;开发统一，不管是Android、iOS，甚至是WP都可以统一开发，减少各个平台功能不统一的问题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;1.原生开发专注于底层核心模块的开发、优化，封装好与web的交互接口。web实现功能模块后，所有端都无需重新开发&lt;/p&gt;
&lt;p&gt;2.例如：视频直播。原生开发专注与视频推流、视频播放、聊天功能的开发、优化，消息推送等，用web实现直播列表、直播创建等展示、数据编辑功能开发。相互之间定义好调用接口即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h2 id=&quot;总结我们现在混合开发发现的问题，优化我们的App&quot;&gt;&lt;a href=&quot;#总结我们现在混合开发发现的问题，优化我们的App&quot; class=&quot;headerlink&quot; title=&quot;总结我们现在混合开发发现的问题，优化我们的App&quot;&gt;&lt;/a&gt;总结我们现在混合开发发现的问题，优化我们的App&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;我们可以做得更好&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="App" scheme="https://re2x.com/categories/App/"/>
    
    
      <category term="Hybrid" scheme="https://re2x.com/tags/Hybrid/"/>
    
      <category term="H5" scheme="https://re2x.com/tags/H5/"/>
    
      <category term="混合开发" scheme="https://re2x.com/tags/%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
</feed>
